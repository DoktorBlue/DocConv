<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/8/2019 8:49:29 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="VMT010140177175"
  DTS:CreatorName="TEST\bla061"
  DTS:DTSID="{57861177-5D90-486F-9BCA-FA9BA227A262}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1043"
  DTS:ObjectName="ProcD - Load Log"
  DTS:PackageType="5"
  DTS:VersionBuild="69"
  DTS:VersionGUID="{7FC75DBE-AE40-4380-8B5D-0E315E4E961A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Err]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{587A10EB-75B0-4D85-A06E-753F1911A5EC}"
      DTS:ObjectName="Err">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ExecRoot]+"\\03-Finished\\" +  @[User::BatchName] + ".err"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1043"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\Scripts\03-XML\03-Finished\B000125.err">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Line"
              DTS:DTSID="{EA6AABA6-5207-4E79-8C34-1C30341B1F9C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Log]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F8F3F8FB-EA5B-4A49-88DE-FD7B7A6663A8}"
      DTS:ObjectName="Log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ExecRoot]+"\\03-Finished\\" +  @[User::BatchName] + ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1043"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\Scripts\03-XML\03-Finished\B000125.log">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ID"
              DTS:DTSID="{B8F18EF2-86A1-4BF2-8652-9C9315EC1F9E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TimeStamp"
              DTS:DTSID="{31BAB9BA-0DC9-409D-9F1E-644B2AF6316E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{15F0DC99-CB52-4813-AB97-465CD9A6B13F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="File"
              DTS:DTSID="{84186A32-8622-40AB-AE7D-6E7AA780F757}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2010AC45-8EA8-49E3-AA7E-B1DCA7EEE618}"
      DTS:ObjectName="ExecRoot"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">E:\Scripts\03-XML</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="17"
      DTS:DTSID="{F48C03A3-7772-4446-BD31-B0D110E1D98D}"
      DTS:ObjectName="MainStep"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="17"
        DTS:Name="ParameterValue">18</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E3EACE6-26A3-4F72-871F-3104B5817169}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_I4) SUBSTRING( @[User::BatchName] , 2, 9)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchID">
      <DTS:VariableValue
        DTS:DataType="3">125</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19A2A32B-DF1A-4D92-A963-6A22F5B82231}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchName">
      <DTS:VariableValue
        DTS:DataType="8">B000125</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB09165B-B772-4D3E-99DF-470A0C443B7B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ExecRoot]+&quot;\\03-Finished\\&quot;+  @[User::BatchName]+&quot;.OK&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchOK">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\03-XML\03-Finished\B000125.OK</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41138C6E-B0EB-423C-B69B-0A0196FAA7D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9DD1E76-6899-49B9-9C79-115C8EBE7C16}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ExecRoot]+&quot;\\04-LogProcessed\\&quot;+ @[User::BatchName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NaarDir">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\03-XML\04-LogProcessed\B000125</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8E886B58-DCEF-435C-AA95-FE60B5DF30B7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::NaarDir] +&quot;\\&quot;+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NaarFile">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\03-XML\04-LogProcessed\B000125\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DBF21E36-2EA7-4B31-9742-8183CD83C426}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcDetailName">
      <DTS:VariableValue
        DTS:DataType="8">End</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AAA1871-72F8-4579-A9E7-5108F03F8C0E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ExecRoot]+&quot;\\03-Finished\\&quot;+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VanFile">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\03-XML\03-Finished\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\For each finished batch"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{8997374B-C81E-4B74-AB75-DDA25DAA2C15}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="For each finished batch">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{B20E22F6-C13C-4BD6-A27E-CF065C8371C2}"
        DTS:ObjectName="{B20E22F6-C13C-4BD6-A27E-CF065C8371C2}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Package::ExecRoot]+"\\03-Finished"</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\Scripts\03-XML\03-Finished" />
            <FEFEProperty
              FileSpec="*.OK" />
            <FEFEProperty
              FileNameRetrievalType="2" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Create Dir"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{A00B25FE-3461-4937-89C6-A596AA1F1D88}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Dir"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="CreateDirectory"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::NaarDir"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Load Log"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{C029235C-72EB-498D-8AA5-B96DFDB43617}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Log">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\Dispatch"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{7A55EB5F-A696-4A0E-970A-D66F8912C7C8}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Dispatch"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::ProcDetailName] = &quot;End&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\PDF"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{086ef5ad-acbd-4297-b75c-a4a8937f0bd0}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="PDF"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Batch Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Batch Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Ja]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]} == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">[Doc ID] == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[No]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Concat"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Concat"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cb1f493a-4194-4276-8679-f040bb536b21}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_f61f4f10aed14e22bfec206935f3157a</RootNamespace>
    <AssemblyName>SC_f61f4f10aed14e22bfec206935f3157a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e14602c5-72ce-4833-adba-28a9af30651c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public ErrMsgBuffer As ErrMsgBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If ErrMsgBuffer IsNot Nothing Then
            ErrMsgBuffer.SetEndOfRowset
            ErrMsgBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "ErrMsg") Then
                ErrMsgBuffer = New ErrMsgBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ErrMsg As String = vbNullString

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim ID As Integer
        If Left(Row.Line, 10) = "DocConvID=" Then
            ID = CInt(Split(Row.Line, "=")(1))
            ErrMsgBuffer.AddRow()
            ErrMsgBuffer.DocID = CInt(IIf(ID < 0, 0, ID))
            ErrMsgBuffer.ErrMsg = Mid(ErrMsg, vbNewLine.Length + 1)
            ErrMsgBuffer.Step = "End"

            ErrMsg = vbNullString
        Else
            ErrMsg = ErrMsg & vbNewLine & Row.Line
        End If
    End Sub
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class ErrMsgBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [ErrMsg]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [ErrMsg_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [DocID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [DocID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Step]() As String
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Step_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f61f4f10aed14e22bfec206935f3157a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f61f4f10aed14e22bfec206935f3157a</msb:DisplayName>
    <msb:ProjectId>{DA5B2E82-84EF-47F0-8BC2-A8DA6E821CB0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f61f4f10aed14e22bfec206935f3157a.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABf0/FwAAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAmkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
QQAAAAAAAEgAAAACAAUA9CQAAJwbAAABAAAAAAAAAJBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqOgIoHQAABgIUfQcAAAQqEzAEAL4AAAABAAARA28PAAAG
HwooJgAACnIzAABwFignAAAKOoQAAAADbw8AAAZySQAAcBUWKCgAAAoXmigpAAAKCgJ7CgAABG8a
AAAGAnsKAAAEBhb+BBaMLgAAAQaMLgAAASgqAAAKKCsAAApvFgAABgJ7CgAABAJ7BwAABHJNAABw
KCwAAAoX1igtAAAKbxQAAAYCewoAAARyUwAAcG8YAAAGAhR9BwAABCoCAnsHAAAEck0AAHADbw8A
AAYoLgAACn0HAAAEKioCAwQFKC8AAAoqUgJ7MAAACgJ7MQAAChaUbzIAAAoqIgIWKDMAAAoqABMw
AQAJAAAAAgAAEQIoNAAACgoGKgAAABMwAQAJAAAAAgAAEQIoNQAACgoGKiYCFgMoNgAACipaAywI
AhYoNwAACipyWwAAcHM4AAAKejoCFwOMLgAAASg2AAAKKloDLAgCFyg3AAAKKnJbAABwczgAAAp6
JgIYAyg2AAAKKloDLAgCGCg3AAAKKnJbAABwczgAAAp6HgIoOQAACioeAig6AAAKKgAAABMwAQAJ
AAAAAgAAEQIoNQAACgoGKpoCKDsAAAoCAnMlAAAGfQgAAAQCAnMmAAAGfQkAAAQCFn0LAAAEKhMw
BABPAAAAAAAAAARy+AAAcBpvPAAACiwVAgUCAyg9AAAKDgRzDgAABm8jAAAGBW8+AAAKLCMCAnsL
AAAEF9Z9CwAABAJ7CwAABBczDAJvHwAABgIoIAAABioGKm4CewoAAAQsEgJ7CgAABG8bAAAGAhR9
CgAABCoAAAATMAUAQQAAAAMAABEDF9oKFgsrLgQHlA4EcggBAHAoPwAACjMZAgUHmgIEB5QoPQAA
Cg4EcxMAAAZ9CgAABAcX1gsHBjHOAm8iAAAGKkorBwIDbyQAAAYDbxEAAAYt8So6AigiAAAKAgN9
DAAABCo6AigiAAAKAgN9DQAABCpCcyIAAAooQAAACoAPAAAEKh4CKEEAAAoqABswAQA/AAAAAAAA
AH4OAAAELTJ+DwAABChAAAAKKEIAAAp+DgAABC0ccygAAAaADgAABN4Qfg8AAAQoQAAACihDAAAK
3H4OAAAEKgABEAAAAgAdAAwpABAAAAAANgIDKEAAAAooRAAACioeAihFAAAKKi7QDQAAAigjAAAK
Kh4CKEYAAAoqAAATMAEAFAAAAAQAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMw
AgAoAAAABQAAEQJ7SAAACm9JAAAKCgaMCAAAGy0SKAIAACsKAntIAAAKBm9KAAAKBipKAigiAAAK
AnNLAAAKfUgAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABgLAAAjfgAA
hAsAAPAKAAAjU3RyaW5ncwAAAAB0FgAAGAEAACNVUwCMFwAAEAAAACNHVUlEAAAAnBcAAAAEAAAj
QmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA1AAAADgAAABAAAAAyAAAAHQAAAEsA
AAA+AAAABQAAAAYAAAAQAAAAEQAAAAgAAAABAAAABQAAAAEAAAACAAAAAwAAAAIAAAAAAAwFAQAA
AAAABgBuA1gIBgAYBFgIBgBFApkHDwD+CAAABgCGAgsGBgBRAwsGBgD/AwsGBgCOAwsGBgCnAwsG
BgDNAgsGBgDCA4gFBgByAhIIBgDuARIIBgAZAwsGBgDoAnYECgARAikHCgDZAfYECgBZAvYEDgCx
AegHDgBfB6wHBgABA5kHDgCdAjEIDgC1Aq4ABgC+CYgFDgBFB+gHDgA2A64ABgCIAYgFDgABAMwE
CgD8AY8FBgAPB3gIBgBIBuoFEgDYA2QBBgC8BIgFEgD+BmQBFgDiBmQBEgBUBmQBEgAcCmQBCgDB
AdUFBgAoApkHBgAtAYgFBgDlCgsGDgA8Ca4ADgCFCTEIDgDrAK4ADgBWCTEIBgArAIgFDgD/Ba4A
BgCqBIgFBgAdBogFBgA3BogFBgB2CVgIBgCHB2UEBgBwB4gFAAAAADEAAAAAAAEAAQAAAAAAxwW6
Ck0AAQABAAAAAABdB7oKUQABAAIAAAEQAMUJugphAAEAAwAAAAAAugiJCGEABQAIAAEAAACsBYEA
JAAHAAwAAQAAANUGgQCJAAgADgABAAAA8QaBAIkACAATAAEAAAD+CYEAlQAIAB0AAQAAAGIJgQBh
AAwAJQABAAAADQmBAGEADQAmAAABEABECYEAmQAOACcABQEAANoHAABhABAAKgAFAQAAEAAAAGEA
EAAxADEAngZPATEAdQZXATEAiQZfATEAtwZnAREAaAdvAREApQFzAQEAtQR3AQYAYgl6AQYADQl+
AQYA8QaCAQEAxACGAQEADAqJAQEADAqJAREANgSOAREAuAmSASEAigoXAVAgAAAAAAYYegcGAAEA
WCAAAAAABhh6BwYAAQBgIAAAAAARGIAHlQEBAIogAAAAABMIUAeZAQEAliAAAAAAEwi3BZ4BAQCi
IAAAAAATCEEHowEBAK4gAAAAABMIygeoAQEAuiAAAAAAAxh6BwYAAQDCIAAAAAAWCAsHrQEBAO4g
AAAAABYIjQGyAQEA9SAAAAAAFgiZAbcBAQD9IAAAAAAGGHoHBgACAAwhAAAAAMYCmwq9AQIA1iEA
AAAABhh6B50AAwDhIQAAAAAGCFsB9AAGAPYhAAAAAAYIRQXAAAYAACIAAAAAhgCyCsAABgAYIgAA
AACGAOIJwAAGANYhAAAAAAYYegedAAYALSIAAAAABgixBBAACQA3IgAAAAAGCFUFFQAKAE4iAAAA
AAYIOgABAAsAXSIAAAAABgg0BRUADAB0IgAAAAAGCGwGEAANAH4iAAAAAAYIZwUVAA4AlSIAAAAA
hgCUCgYADwCdIgAAAACGAN8JBgAPAKgiAAAAAIYA4gnAAA8AvSIAAAAABhh6BwYADwDkIgAAAADG
AnEKwwEPAD8jAAAAAEYDjwkGABMAQSMAAAAAAQDTAAYAEwBgIwAAAADGAn4KzwETAD8jAAAAAEYD
nQkGABcArSMAAAAARgNqCr0BFwA/IwAAAABGA5sKvQEYAMAjAAAAAAYYegfdARkAzyMAAAAABhh6
B90BGgDeIwAAAAARGIAHlQEbAO8jAAAAAAYYegcGABsA+CMAAAAAFgg+BOQBGwBUJAAAAADGAk8J
7wAbAGIkAAAAAMYCIQGSABwAaiQAAAAAgwCFAekBHAB2JAAAAADGAp4E9AAcAIAkAAAAABEAbgDu
ARwAoCQAAAAAAQBaAPYBHQC6IAAAAAAGGHoHBgAeAKwkAAAAAAMICAFKAB4A4CQAAAAABhh6BwYA
HgAAAAEAWwQAAAEAtgoAAAEABAcAAAIAFwkAAAMAYgYAAAEABAcAAAIAFwkAAAMAYgYAAAEAWwQA
AAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEARAAAAAIAUQEAAAMABAcAAAQAYgYAAAEA
lQkAAAIAjwcAAAMAbgkAAAQAYgYAAAEABAcAAAEAtgoAAAEAIgoAAAEAIgoAAAEAUgYAAAEAGAEA
AAEAGAEJAHoHAQARAHoHBgAZAHoHCgApAHoHEAAxAHoHEAA5AHoHEABBAHoHEABJAHoHEABRAHoH
EABZAHoHFQBhAHoHFQBpAHoHEABxAHoHEAB5AHoHEACBAHoHGgCRAHoHIACpAHoHBgCxAHoHBgC5
AHoHBgDRAHoHJgDpAHoHEAABAXoHBgA5AXoHBgCZAHoHBgChAHoHBgAMAHoHBgAUAHoHBgAcAHoH
BgAkAHoHBgAMAAgBSgAUAAgBSgAcAAgBSgAkAAgBSgDBAHoHBgDZAD8BTwDZAOEKVwDxAHoHXQBR
Ae4JaQBZAZAEbwBRAfMJdgBpAR8HgQB5AWEEhgBpAR8HjQCBAcEEkgBRAecAaQCBAbEJlgARAXoH
nQARAQQHqQARARcJrgAZAacEsgARAXAFtwARAbIKwAARAeIJwAARAX8FxAARAXcFAQCJAXoHEAAR
AZQKBgARAd8JBgApAXoHBgCBAU8JygApASsJ0gAZAc8JwAApAUwA3QCZAVIE5QAxAXoHBgChAUoH
6gChAfkJ6gDBAE8J7wDBACEBkgDBAJ4E9ACpAfkAAAE0AIoKFwE8AD4ESgA8AEgELgE8AHoHBgAp
AKsAuQMuAAsAMgIuABMAOwIuABsAWgIuACMAYwIuACsAjAIuADMAjAIuADsAYwIuAEMAkgIuAEsA
jAIuAFMAqQIuAFsAjAIuAGMArwIuAGsA2QIuAHMA5gJAAIsAMANAAIMANQNDAHsAPgNDAIMANQNJ
AKsAygNjAHsAPgNjAIMANQNpAKsA3gOAAIsAMAODAJMAMAODAJsAMAODAHsAPgOJAKsA6wOgAIsA
MAOpAIMAWgLAAIsAMAPDALMAMAPDAFMAjALJAIMAWgLgAIsAMAPjAFMAjAIDAVMAjAIjAVMAjAJD
AVMAjAJjAVMAjAKjAYMANQOjAaMAVwPDAYMANQPDAVsAjALpAbsAMAOgBFMAjALABFMAjAJABYMA
NQNABYsAMANgBYMANQNgBYsAMAOABYMANQOABYsAMAOgBYMANQOgBYsAMAPABYsAMAPgBYsAMAMA
BosAMAMABoMANQMgBosAMANABosAMANABoMANQNlALwA2AD4AAsBBAABAAUABQAHAAcACAAJAAwA
DwAOABAAAABfB/4BAADJBQMCAABFBwgCAADcBw0CAAAPBxICAACpARcCAABfARwCAABJBSACAAC1
BBwCAABZBSACAAA+ACQCAAA4BSACAABwBhwCAABrBSACAABbBCgCAAAMAS0CAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAPAA8AAgAQABEAAQAUABMAAQAVABUAAQAW
ABcAAQAXABkAAQAYABsAAQAZAB0AAgApAB8AAgAxACEALgA1ADwAQwD9ABABHwEmAQSAAAABAAAA
AAAAAAAAAAAAAIEAAAAEAAAAAAAAAAAAAAA0AaUAAAAAAAQAAAAAAAAAAAAAADQBiAUAAAAACgAA
AAAAAAAAAAAAPQGuAAAAAAAOAAAAAAAAAAAAAABGASwKAAAAAA4AAAAAAAAAAAAAAEYBSQoAAAAA
AAAAAAEAAADGCAAADQAEAA4ABAAAABAAHABYAAAAEABdAFgAAAAAAF8AWACPAAYBjwApAQAAAENv
bnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEludDMyADxNb2R1bGU+AHNl
dF9Eb2NJRABJbnB1dElEAEdldE91dHB1dElEAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVf
X0luc3RhbmNlX18AU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAbXNjb3JsaWIA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQA
TWlkAENvbXBhcmVNZXRob2QAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNl
AEdldEhhc2hDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFt
ZQBnZXRfTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3
b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21W
aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5
RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlh
bnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBJSWYAU3lzdGVtLlRocmVhZGluZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAENvbXBhcmVTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5n
AHNldF9FcnJNc2cATWF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mNjFmNGYxMGFlZDE0ZTIyYmZl
YzIwNjkzNWYzMTU3YS5kbGwAc2V0X0RvY0lEX0lzTnVsbABnZXRfTGluZV9Jc051bGwAc2V0X0Vy
ck1zZ19Jc051bGwAc2V0X1N0ZXBfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBs
aWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBJbnRlcmFj
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0Nv
bXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAc2V0X1N0ZXAAbV9B
cHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAEVyck1zZ0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0lu
dGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAT3V0cHV0
SURzAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRf
V2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRp
b25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15LlJl
c291cmNlcwBNeVJlc291cmNlcwBTQ19mNjFmNGYxMGFlZDE0ZTIyYmZlYzIwNjkzNWYzMTU3YS5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJz
aW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAFJ1bnRpbWVIZWxwZXJzAE9wZXJhdG9ycwBGaW5pc2hP
dXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AExlZnQAU3BsaXQARXhpdABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lu
cHV0AFByaW1lT3V0cHV0AG1fQ29udGV4dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15AGdldF9Bc3NlbWJs
eQAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABVE
AG8AYwBDAG8AbgB2AEkARAA9AAADPQAABQ0ACgAAB0UAbgBkAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAA1FAHIAcgBNAHMAZwAAAACf
Z+O6eBJ8Qb9Dagl/NdRgAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQB
Dg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcAARJtEYChBSAAEoClByACAQ4S
gKUDBwEIBQACDg4IBgADCA4OAgoABB0ODg4IEYCxBAABCA4GAAMcAhwcBAABCBwDIAAIBgADDg4O
DgsgAwESgI0dCBKAkQQGEoCNAwYdCAQgAQ4IBCABAggDBwECAyAAAgUgAgEIHAcgAgIOEYDJBSAB
HQgIBAcCCAgHAAIIEoCRDgQAARwcBAABARwEIAECHAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4ABAcB
EwAGFRI4ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoI
iYRdzYCAzJEHBhUSOAESDAcGFRI4ARIIBwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9AgYOAwYSKAMG
EiwDBhIgAgYIBAYSgJUDBhIwAgYcAwAAAQQAABIMBAAAEggEAAASZQQAABI0BAAAEnkEAAASfQUA
AQESfQUgAQESHAsgBAEIDhKAjRKAkQ0gBAEIHQgdEoCNEoCRBiABARKAlQQAABIwBCAAEm0HEAEB
HgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEjQECAASeQQIABJ9AygADgMoAAIDKAAIBAgA
EjAEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxOQAABQEAAQAAKQEAJGUxNDYwMmM1LTcyY2UtNDgzMy1hZGJhLTI4YTlhZjMwNjUx
YwAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAIAQABAAAAAAAYAQAKTXlUZW1w
bGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRw
Q2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQ
AQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5X
ZWJTZXJ2aWNlcwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwQQAAAAAAAAAAAACKQQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAfEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGYANgAxAGYANABmADEAMABhAGUAZAAxADQAZQAyADIAYgBmAGUAYwAyADAANgA5ADMANQBmADMA
MQA1ADcAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZgA2ADEAZgA0AGYAMQAwAGEA
ZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADYAMQBmADQA
ZgAxADAAYQBlAGQAMQA0AGUAMgAyAGIAZgBlAGMAMgAwADYAOQAzADUAZgAzADEANQA3AGEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZgA2ADEAZgA0AGYA
MQAwAGEAZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACcMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f61f4f10aed14e22bfec206935f3157a</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">EB</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg]"
                          hasSideEffects="true"
                          name="ErrMsg">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              name="ErrMsg" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              name="Doc ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]"
                              name="Step" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              name="Batch ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)[SUBSTRING](@[User::BatchName],2,99)</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)SUBSTRING(@[User::BatchName],2,99)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              dataType="ui1"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              name="Main Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::MainStep]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::MainStep]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              dataType="bool"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              name="Success"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Determine Elapse"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Determine Elapse"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d0ae6900-0a28-42af-b510-37615fc60ce1")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public BatchBuffer As BatchBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If BatchBuffer IsNot Nothing Then
            BatchBuffer.SetEndOfRowset
            BatchBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Batch") Then
                BatchBuffer = New BatchBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

    Public ReadOnly Property [BatchName]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("BatchName").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

    Public ReadOnly Property [ExecRoot]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("ExecRoot").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ReadOnly PeilDate As New DateTime(2019, 5, 1)
    Private PrevMoment As Long = 0
    Private ProcStart As Date, LicLoaded As Integer, LicSet As Integer

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim V() As String
        '    ComponentMetaData.FireWarning(1, Row.ID.ToString, Row.TimeStamp & ": " & PrevMoment.ToString, "", 0)
        V = Split(Row.TimeStamp, ".")

        If Row.ID <= 0 Then
            Select Case Row.Step
                Case "Start"
                    ProcStart = CDate(V(0))
                Case "License loaded"
                    LicLoaded = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "License set", "No license set"
                    LicSet = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "End"
                    BatchBuffer.AddRow()
                    BatchBuffer.BatchID = Row.BatchID
                    BatchBuffer.Start = ProcStart
                    BatchBuffer.End = CDate(V(0))
                    BatchBuffer.Status = 4
                    BatchBuffer.LicLoaded = LicLoaded
                    BatchBuffer.LicSet = LicSet
                    BatchBuffer.RefKey = 0
            End Select
        Else
            Row.Moment = CDate(V(0))
            Row.Elapsed = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
        End If
        PrevMoment = GetMs(CDate(V(0)), CInt(V(1)))
    End Sub

    Private Function GetMs(D As Date, M As Int32) As Long
        GetMs = CLng((D - PeilDate).TotalSeconds * 1000 + M)
    End Function
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [TimeStamp]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [TimeStamp_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [ID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public ReadOnly Property [Step]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(2))
        End Get
    End Property
    Public ReadOnly Property [Step_IsNull] As Boolean
        Get
            Return IsNull(2)
        End Get
    End Property

    Public ReadOnly Property [BatchID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(3))
        End Get
    End Property
    Public ReadOnly Property [BatchID_IsNull] As Boolean
        Get
            Return IsNull(3)
        End Get
    End Property

    Public WriteOnly Property [Moment]() As DateTime
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Moment_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Elapsed]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Elapsed_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class BatchBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Start]() As DateTime
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Start_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [End]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [End_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Status]() As Byte
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Status_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [RefKey]() As Int32
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [RefKey_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [BatchID]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [BatchID_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicSet]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [LicSet_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicLoaded]() As Int32
        Set
            Me(6) = Value
        End Set
    End Property
    Public WriteOnly Property [LicLoaded_IsNull] As Boolean
        Set
            If (value)
                SetNull(6)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:DisplayName>
    <msb:ProjectId>{3876397F-C5D9-48ED-B6B2-BEE0476B2312}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ac4d6e4-cd2d-40be-a3d4-f10c3f51b1e0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</RootNamespace>
    <AssemblyName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPb1/FwAAAAAAAAAAOAAIiALAVAAACwAAAAIAAAAAAAANkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAORJAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
SgAAAAAAAEgAAAACAAUAqCcAAIQhAAABAAAAAAAAACxJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqhgIoMAAABgIg4wcAABsXcyYAAAp9BwAABAIWan0IAAAE
KgATMAUAoQEAAAEAABEDbxAAAAZyMwAAcBUWKCcAAAoKA28SAAAGFj0zAQAAA28UAAAGCwdyNwAA
cBYoKAAACiw9B3JDAABwFigoAAAKLEIHcmEAAHAWKCgAAAosXQdyeQAAcBYoKAAACixPB3KXAABw
FigoAAAKLGo4EwEAAAIGFpooKQAACn0JAAAEOAABAAACAgYWmigpAAAKBheaKCoAAAooDgAABgJ7
CAAABNq3fQoAAAQ41wAAAAICBhaaKCkAAAoGF5ooKgAACigOAAAGAnsIAAAE2rd9CwAABDiuAAAA
AnsOAAAEby0AAAYCew4AAAQDbxYAAAZvJwAABgJ7DgAABAJ7CQAABG8fAAAGAnsOAAAEBhaaKCkA
AApvIQAABgJ7DgAABBpvIwAABgJ7DgAABAJ7CgAABG8rAAAGAnsOAAAEAnsLAAAEbykAAAYCew4A
AAQWbyUAAAYrMgMGFpooKQAACm8YAAAGAwIGFpooKQAACgYXmigqAAAKKA4AAAYCewgAAATat28a
AAAGAgIGFpooKQAACgYXmigqAAAKKA4AAAZ9CAAABCoAAAATMAIAKgAAAAIAABEDAnsHAAAEKCsA
AAoLEgEoLAAACiMAAAAAAECPQFoEbFgoLQAACrkKBioqAgMEBSguAAAKKlICey8AAAoCezAAAAoW
lG8xAAAKKiICFigyAAAKKlICey8AAAoCezAAAAoXlG8zAAAKKiICFygyAAAKKlICey8AAAoCezAA
AAoYlG8xAAAKKiICGCgyAAAKKlICey8AAAoCezAAAAoZlG8zAAAKKiICGSgyAAAKKjoCGgOMIQAA
ASg0AAAKKloDLAgCGig1AAAKKnKfAABwczYAAAp6OgIbA4wxAAABKDQAAAoqWgMsCAIbKDUAAAoq
cp8AAHBzNgAACnoAAAATMAEACQAAAAMAABECKDcAAAoKBioAAAATMAEACQAAAAMAABECKDgAAAoK
Bio6AhYDjCEAAAEoNAAACipaAywIAhYoNQAACipynwAAcHM2AAAKejoCFwOMIQAAASg0AAAKKloD
LAgCFyg1AAAKKnKfAABwczYAAAp6OgIYA4wyAAABKDQAAAoqWgMsCAIYKDUAAAoqcp8AAHBzNgAA
Cno6AhkDjDEAAAEoNAAACipaAywIAhkoNQAACipynwAAcHM2AAAKejoCGgOMMQAAASg0AAAKKloD
LAgCGig1AAAKKnKfAABwczYAAAp6WgMsCAIbKDUAAAoqcp8AAHBzNgAACno6AhwDjDEAAAEoNAAA
CipaAywIAhwoNQAACipynwAAcHM2AAAKeh4CKDkAAAoqHgIoOgAACioTMAEACQAAAAMAABECKDgA
AAoKBiqaAig7AAAKAgJzOAAABn0MAAAEAgJzOQAABn0NAAAEAhZ9DwAABCoTMAQATwAAAAAAAAAE
cjwBAHAabzwAAAosFQIFAgMoPQAACg4Ecw8AAAZvNgAABgVvPgAACiwjAgJ7DwAABBfWfQ8AAAQC
ew8AAAQXMwwCbzIAAAYCKDMAAAYqBipuAnsOAAAELBICew4AAARvLgAABgIUfQ4AAAQqAAAAEzAF
AEEAAAAEAAARAxfaChYLKy4EB5QOBHJMAQBwKD8AAAozGQIFB5oCBAeUKD0AAAoOBHMeAAAGfQ4A
AAQHF9YLBwYxzgJvNQAABipKKwcCA283AAAGA28cAAAGLfEqOgIoIgAACgIDfRAAAAQqOgIoIgAA
CgIDfREAAAQqlgJ7EQAABG9AAAAKclgBAHBvQQAACihCAAAKb0MAAAooRAAACiqWAnsRAAAEb0AA
AApybAEAcG9BAAAKKEIAAApvQwAACihEAAAKKkJzIgAACihFAAAKgBMAAAQqHgIoRgAACioAGzAB
AD8AAAAAAAAAfhIAAAQtMn4TAAAEKEUAAAooRwAACn4SAAAELRxzPQAABoASAAAE3hB+EwAABChF
AAAKKEgAAArcfhIAAAQqAAEQAAACAB0ADCkAEAAAAAA2AgMoRQAACihJAAAKKh4CKEoAAAoqLtAN
AAACKCMAAAoqHgIoSwAACioAABMwAQAUAAAABQAAEQKMBQAAGy0IKAEAACsKKwICCgYqIgP+FQUA
ABsqAAAAEzACACgAAAAGAAARAntNAAAKb04AAAoKBowIAAAbLRIoAgAAKwoCe00AAAoGb08AAAoG
KkoCKCIAAAoCc1AAAAp9TQAACioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
+A0AACN+AABkDgAANA0AACNTdHJpbmdzAAAAAJgbAACAAQAAI1VTABgdAAAQAAAAI0dVSUQAAAAo
HQAAXAQAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQ8AAAD6ATMAFgAAAQAAADsAAAAOAAAAFAAAAEcA
AAArAAAAUAAAAD4AAAAGAAAABwAAACQAAAAlAAAACAAAAAEAAAAGAAAAAQAAAAIAAAADAAAAAgAA
AAAAjAUBAAAAAAAGAAMEAgoGAK0EAgoGANoCMgkPAKgKAAAGABsDRgcGAOYDRgcGAJQERgcGACME
RgcGADwERgcGAGIDRgcGAFcEtwYGAAcDvAkGAIMCvAkGAK4DRgcGAH0DDAUKAKYClAgKAG4CdgUK
AO4CdgUOADYCkgkOAPIIVgkGAJYDMgkOADID2wkOAEoDAQEGAHgLtwYOANgIkgkOAMsDAQEGAA0C
twYOADoATAUKAJECxwYGAHoIIgoGAIMHIgcSAG0E6QEGAOABtwYGAEcFtwYGAL4GtwYSAGkI6QEW
AE4I6QESAI8H6QESAPIL6QEKAEYCDQcGAL0CMgkGAKQBtwYGACsNRgcOAPIKAQEOAGIBAQEOADsL
2wkOAAwL2wkGAFgHtwYGAGcAtwYGAMsEtwYGAEAFtwYGAHIHtwYaABEArAgaAAEArAifAJ8MAAAa
ACIArAgGACwLAgoGABoJ+wQGAAMJtwYAAAAAkQAAAAAAAQABAAAAAAD/BvUMTQABAAEAAAAAAPAI
9QxRAAEAAgAAARAAfwv1DGEAAQADAAAAAABkCjMKYQAFAAgAAQAAAOQGbQAkAAcADAABAAAAQQht
AJEADAAPAAEAAABdCG0AkQAMAB4AAQAAANQLbQCdAAwAMAABAAAAGAttAGEAEAA4AAEAAADDCm0A
YQARADkAAAEQAPoKbQChABIAPAAFAQAAhAkAAGEAFAA/AAUBAABJAAAAYQAUAEYAMQAKCIYBMQDh
B44BMQD1B5YBMQAjCJ4BEQD7CKYBEQAqAqoBIQBeAq4BAQDJC7MBAQA2DK4BAQAbAbYBAQCNC7YB
BgAYC7kBBgDDCr0BBgBdCMEBAQAlAbYBAQDiC8UBAQDiC8UBEQDQBMoBEQByC84BIQCBDE4BUCAA
AAAABhgNCQYAAQBYIAAAAAAGGA0JBgABAGAgAAAAABEYEwnRAQEAiiAAAAAAEwjjCNUBAQCWIAAA
AAATCO8G2gEBAKIgAAAAABMI1AjfAQEAriAAAAAAEwh0CeQBAQC6IAAAAAADGA0JBgABAMIgAAAA
ABYIdgjpAQEA7iAAAAAAFggSAu4BAQD1IAAAAAAWCB4C8wEBAP0gAAAAAAYYDQkGAAIAICEAAAAA
xgLWDPkBAgDQIgAAAAABACwJ/wEDAAYjAAAAAAYYDQmsAAUAESMAAAAABgjTBysBCAAmIwAAAAAG
CC8G2gAIAC8jAAAAAAYImgAnAQgARCMAAAAABgi0BdoACABNIwAAAAAGCMoHKwEIAGIjAAAAAAYI
HwbaAAgAayMAAAAABgihACcBCACAIwAAAAAGCMIF2gAIAIkjAAAAAAYIvgsHAggAmCMAAAAABgho
BhUACQCvIwAAAAAGCEgBAQAKAL4jAAAAAAYI/QUVAAsA2CMAAAAAhgDtDNoADADwIwAAAACGAKcL
2gAMAAYjAAAAAAYYDQmsAAwABSQAAAAABggsDAcCDwAUJAAAAAAGCHoGFQAQACskAAAAAAYIVAEH
AhEAOiQAAAAABggQBhUAEgBRJAAAAAAGCFMLDgITAGAkAAAAAAYIRAYVABQAdyQAAAAABggcDQEA
FQCGJAAAAAAGCIsGFQAWAJ0kAAAAAAYIrQABABcArCQAAAAABgjVBRUAGACvIwAAAAAGCIkLAQAZ
AMMkAAAAAAYIVgYVABoA2iQAAAAABggXAQEAGwDpJAAAAAAGCOgFFQAcAAAlAAAAAIYAzwwGAB0A
CCUAAAAAhgCkCwYAHQAQJQAAAACGAKcL2gAdACUlAAAAAAYYDQkGAB0ATCUAAAAAxgJoDBMCHQCn
JQAAAABGA0ULBgAhAKklAAAAAAEANAEGACEAyCUAAAAAxgJ1DB8CIQCnJQAAAABGA14LBgAlABUm
AAAAAEYDYQz5ASUApyUAAAAARgPWDPkBJgAoJgAAAAAGGA0JLQInADcmAAAAAAYYDQktAigARiYA
AAAABgjIASsBKQBsJgAAAAAGCAIMKwEpAJImAAAAABEYEwnRASkAoyYAAAAABhgNCQYAKQCsJgAA
AAAWCNgENAIpAAgnAAAAAMYCBQsiASkAFicAAAAAxgKYAScBKgAeJwAAAACDAAoCOQIqAConAAAA
AMYCNAUrASoANCcAAAAAEQDlAD4CKgBUJwAAAAABANEARgIrALogAAAAAAYYDQkGACwAYCcAAAAA
Awh/AUoALACUJwAAAAAGGA0JBgAsAAAAAQD1BAAAAQDxDAAAAQDLAAAAAgDNAAAAAQBvCAAAAgDN
CgAAAwCdBwAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQBvCAAAAgDNCgAAAwCdBwAAAQD1BAAA
AQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1
BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQC5AAAAAgDWAQAAAwBvCAAABACdBwAAAQBLCwAAAgAiCQAA
AwAkCwAABACdBwAAAQBvCAAAAQDxDAAAAQD4CwAAAQD4CwAAAQCNBwAAAQCPAQAAAQCPAQkADQkB
ABEADQkGABkADQkKACkADQkQADEADQkQADkADQkQAEEADQkQAEkADQkQAFEADQkQAFkADQkVAGEA
DQkVAGkADQkQAHEADQkQAHkADQkQAIEADQkaAJEADQkgAKkADQkGALEADQkGALkADQkGANEADQkm
AOkADQkQAAEBDQkGAEkBDQkGAJkADQkGAKEADQkGAAwADQkGABQADQkGABwADQkGACQADQkGAAwA
fwFKABQAfwFKABwAfwFKACQAfwFKAMEADQkGANkAtgFPANkAJw1XAPEADQldAAkBDQllAGEBswty
AHEBJgV9AHkBZwKEAHkBigiLAAkBNweXABkBRQmjABEBXAGnACEBDQmsACEBbwi4ACEBzQq9ACkB
PQXBACEBlgbGACkBZADLACEBrgbQACEBnQYBAIEBDQkQACEB7QzaACEBpwvaACEBzwwGACEBpAsG
ADkBDQkGAJkBBQveADkB4QrmACkBlAvaADkBwQDxADkBtwr5AKkBpQb/ADkBugwGAbEBiwwMAXkB
NAUTAckB7AQYAUEBDQkGANEB3QgdAdEBuQsdAcEABQsiAcEAmAEnAcEANAUrAdkBcAE3ATQAgQxO
ATwA2ARKADwA4gRlATwADQkGACkAqwATBC4ACwCMAi4AEwCVAi4AGwC0Ai4AIwC9Ai4AKwDmAi4A
MwDmAi4AOwC9Ai4AQwDsAi4ASwDmAi4AUwADAy4AWwDmAi4AYwAJAy4AawAzAy4AcwBAA0AAiwCK
A0AAgwCPA0MAewCYA0MAgwCPA0kAqwAkBGMAewCYA2MAgwCPA2kAqwA4BIAAiwCKA4MAkwCKA4MA
mwCKA4MAewCYA4kAqwBFBKAAiwCKA6kAgwC0AsAAiwCKA8MAswCKA8MAUwDmAskAgwC0AuAAiwCK
A+MAUwDmAgMBUwDmAiMBUwDmAkMBUwDmAmMBUwDmAqMBgwCPA6MBowCxA8MBgwCPA8MBWwDmAmkE
uwCKAwAHUwDmAiAHUwDmAuAHgwCPA+AHiwCKAwAIgwCPAwAIiwCKAyAIgwCPAyAIiwCKA0AIgwCP
A0AIiwCKA2AIiwCKA4AIiwCKA6AIiwCKA6AIgwCPA8AIiwCKA+AIiwCKA+AIgwCPA2wAkADWAOwA
LwFCAQQAAQAFAAUABwAHAAgAEwALACEADAAjAA4AJAAAAPIITgIAAAEHUwIAANgIWAIAAIYJXQIA
AHoIYgIAAC4CZwIAANcHbAIAADMGcAIAAMoAdAIAAN4FcAIAAM4HbAIAACMGcAIAALEAdAIAANkF
cAIAAM0LeAIAAGwGcAIAAEwBdAIAAAEGcAIAADoMeAIAAH4GcAIAAFgBeAIAABQGcAIAAFcLfgIA
AEgGcAIAACANdAIAAI8GcAIAALEAdAIAANkFcAIAAI0LdAIAAFoGcAIAABsBdAIAAOwFcAIAAMwB
bAIAAAYMbAIAAPUEggIAAIMBhwICAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQAB
AAsADQACABAADwACABEAEQACABIAEwACABMAFQACABQAFwACABUAGQACABYAGwACABcAHQABABgA
HwABABkAIQABABoAIwABABsAJQABAB8AJwABACAAKQABACEAKwABACIALQABACMALwABACQAMQAB
ACUAMwABACYANQABACcANwABACgAOQABACkAOwABACoAPQABACsAPwABACwAQQACADoAQwACADsA
RQACAD4ARwACAEYASQAuADUAPABDADQBRwFWAV0BBIAAAAEAAAAAAAAAAAAAAAAAbQAAAAQAAAAA
AAAAAAAAAGsB+AAAAAAABAAAAAAAAAAAAAAAawG3BgAAAAAKAAAAAAAAAAAAAAB0AQEBAAAAAA4A
AAAAAAAAAAAAAH0BDwwAAAAADgAAAAAAAAAAAAAAfQFADAAAAAAOAAAAAAAAAAAAAAB9AacHAAAA
AAAAAAABAAAAcAoAAA0ABAAOAAQAAAAQABwAzwAAABAAhwDPAAAAAACJAM8AmQA9AZkAYAEAAAAA
AElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAw
AENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEdldEludDMyAFNDXzVm
ZTQ1NGY5ZTlmNDRiYTdhNWRmOWMxMGU1ZDQ5NWI0ADxNb2R1bGU+AGdldF9JRABnZXRfQmF0Y2hJ
RABzZXRfQmF0Y2hJRABJbnB1dElEAEdldE91dHB1dElEAE0AVABEaXNwb3NlX19JbnN0YW5jZV9f
AENyZWF0ZV9fSW5zdGFuY2VfXwBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAc2V0X0xp
Y0xvYWRlZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAHNldF9FbGFwc2VkAHNl
dF9FbmQAUm91bmQAQ29tcGFyZU1ldGhvZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UA
aW5zdGFuY2UAR2V0SGFzaENvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
Z2V0X0JhdGNoTmFtZQBJbnB1dE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAR2V0VHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBBcHBs
aWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGVpbERhdGUAVG9EYXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJh
dGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFt
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0
ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQnl0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRf
VmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAENvbXBhcmVTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAE1hdGgATWljcm9zb2Z0LlZp
c3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzVm
ZTQ1NGY5ZTlmNDRiYTdhNWRmOWMxMGU1ZDQ5NWI0LmRsbABnZXRfSURfSXNOdWxsAGdldF9CYXRj
aElEX0lzTnVsbABzZXRfQmF0Y2hJRF9Jc051bGwAc2V0X0xpY0xvYWRlZF9Jc051bGwAc2V0X0Vs
YXBzZWRfSXNOdWxsAHNldF9FbmRfSXNOdWxsAGdldF9TdGVwX0lzTnVsbABnZXRfVGltZVN0YW1w
X0lzTnVsbABzZXRfU3RhdHVzX0lzTnVsbABzZXRfTGljU2V0X0lzTnVsbABzZXRfTW9tZW50X0lz
TnVsbABzZXRfU3RhcnRfSXNOdWxsAHNldF9SZWZLZXlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0A
c2V0X0l0ZW0AU3lzdGVtAFRpbWVTcGFuAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2Ny
aXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBvcF9TdWJ0cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABn
ZXRfU3RlcABnZXRfVGltZVN0YW1wAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJv
dmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3Zp
ZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBCYXRjaEJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBUb0ludGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAGdldF9Vc2VyAEVudGVyAGdldF9D
b21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9y
AE91dHB1dElEcwBHZXRNcwBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1RvdGFsU2Vjb25kcwBNaWNy
b3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzVmZTQ1NGY5
ZTlmNDRiYTdhNWRmOWMxMGU1ZDQ5NWI0Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTQ181ZmU0
NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJzaW9ucwBDb25uZWN0aW9u
cwBCdWZmZXJzAFJ1bnRpbWVIZWxwZXJzAE9wZXJhdG9ycwBGaW5pc2hPdXRwdXRzAHNldF9TdGF0
dXMAQ3JlYXRlTmV3T3V0cHV0Um93cwBtX1N5bmNPYmplY3QATXlQcm9qZWN0AHNldF9MaWNTZXQA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AFNwbGl0AEV4aXQAc2V0X01vbWVudABQcmV2
TW9tZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRf
RXhlY1Jvb3QATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABzZXRfU3RhcnQAUHJvY1N0YXJ0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJp
bWVPdXRwdXQAbV9Db250ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZh
bENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRS
b3cATmV4dFJvdwBTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5NeQBzZXRfUmVm
S2V5AGdldF9Bc3NlbWJseQAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8A
dQByAGMAZQBzAAADLgAAC1MAdABhAHIAdAAAHUwAaQBjAGUAbgBzAGUAIABsAG8AYQBkAGUAZAAA
F0wAaQBjAGUAbgBzAGUAIABzAGUAdAAAHU4AbwAgAGwAaQBjAGUAbgBzAGUAIABzAGUAdAAAB0UA
bgBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUA
dAAgADAAAAtCAGEAdABjAGgAABNCAGEAdABjAGgATgBhAG0AZQAAEUUAeABlAGMAUgBvAG8AdAAA
AADK/0JcHeNwR45vGmlWoJROAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUH
IAQBDg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcAARJtEYCpBSAAEoCtByAC
AQ4SgK0GIAMBCAgIBQcCHQ4OCgAEHQ4ODggRgLUGAAMIDg4CBgABEYCFDgQAAQgOBgcCChGAjQsA
AhGAjRGAhRGAhQMgAA0EAAENDQsgAwESgJUdCBKAmQQGEoCVAwYdCAQgAQ4IBCABAggEIAEICAUg
AgEIHAMHAQIDIAACByACAg4RgNEFIAEdCAgEBwIICAcAAggSgJkOBSAAEoDVBiABEoDZHAUAABKA
3QYgARwSgOEEAAEOHAQAARwcBAABARwEIAECHAMgAAgDIAAOBAcBHgACHgAFEAEAHgAECgEeAAQH
ARMABhUSOAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6
CImEXc2AgMyRBwYVEjgBEgwHBhUSOAESCAcGFRI4ARJlBwYVEjgBEjQDBhJ5AwYSfQQGEYCFAgYK
AgYIAwYSKAMGEiwDBhIgBAYSgJ0DBhIwAgYcAwAAAQQAABIMBAAAEggEAAASZQQAABI0BAAAEnkE
AAASfQUAAQESfQUgAQESHAcgAgoRgIUIBiABARGAhQQgAQEFCyAEAQgOEoCVEoCZDSAEAQgdCB0S
gJUSgJkGIAEBEoCdBAAAEjAEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAAS
NAQIABJ5BAgAEn0DKAAOAygAAgMoAAgFKAARgIUDKAAFBAgAEjAEKAATAAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNWZlNDU0ZjllOWY0NGJh
N2E1ZGY5YzEwZTVkNDk1YjQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEA
JGQwYWU2OTAwLTBhMjgtNDJhZi1iNTEwLTM3NjE1ZmM2MGNlMQAADAEABzEuMC4wLjAAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC41BAEAAAAIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5
c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRl
X19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5N
eS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAAxKAAAAAAAAAAAAACZKAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYSgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1AGYA
ZQA0ADUANABmADkAZQA5AGYANAA0AGIAYQA3AGEANQBkAGYAOQBjADEAMABlADUAZAA0ADkANQBi
ADQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBlADkAZgA0
ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQBmAGUANAA1ADQAZgA5
AGUAOQBmADQANABiAGEANwBhADUAZABmADkAYwAxADAAZQA1AGQANAA5ADUAYgA0AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBl
ADkAZgA0ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAODoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_5fe454f9e9f44ba7a5df9c10e5d495b4</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::BatchName,$Package::ExecRoot</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">05</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[TimeStamp]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              name="Moment" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              name="Elapsed" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch]"
                          hasSideEffects="true"
                          name="Batch">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              name="Start" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]"
                              name="End" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              name="RefKey" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              name="LicSet" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              name="LicLoaded" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Doc Logging?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Doc Logging?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Nee]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Nee"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]} &lt;= 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ID &lt;= 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Error Status"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Error Status"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ErrorCodes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ErrorCodes]) [refTable]
where [refTable].[Name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Inserted" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Insert"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              name="Error Status ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Not Found]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Not Found"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Filter Onzin"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Filter Onzin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Correct Version]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Correct Version"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression"> FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression"> FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Zinvol]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Zinvol"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Known Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Known Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[No]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL([Error Status ID])</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge  Batch Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[RefKey]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicLoaded]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Doc Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">2</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              name="Doc ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\ProcessDetail"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ProcessDetail"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessDetails]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="ui1"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              dataType="dbTimeStamp"
                              name="Moment" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[FileSize_KB]"
                              dataType="i4"
                              name="FileSize_KB" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              dataType="i4"
                              name="Elapsed" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc/Klant]"
                              dataType="i4"
                              name="Doc/Klant" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Read Err"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Err"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Read Err.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Err]"
                          connectionManagerRefId="Package.ConnectionManagers[Err]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              length="4000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              name="Line"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="Line" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Read Log"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Log"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Read Log.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Log]"
                          connectionManagerRefId="Package.ConnectionManagers[Log]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              name="File"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              name="TimeStamp"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              name="Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TimeStamp" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set ErrCode Unexpected"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">8</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">8</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Error Code Name"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              name="ErrCode Description"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,8000,1252)([REPLACENULL](#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]},"") == "" ? "No Error" : #{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,8000,1252)(REPLACENULL(ErrMsg,"") == "" ? "No Error" : ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              name="RefKey"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort ErrMsg"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort Log"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Log"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Step"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Step"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ProcessSteps]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ProcessSteps]) [refTable]
where [refTable].[Name] = ? and [refTable].[Main] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Sort" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Main" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMainStep" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]};#{Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Step.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input].Columns[Main Step]"
                              cachedDataType="ui1"
                              cachedName="Main Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Main</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              name="Step ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Unexpected Errors"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Error" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]"
                              name="File" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              name="Moment" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              name="Step ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              name="Error Status ID" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Update Batch"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Batch"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Batches] SET
  Status = ?
, ProcStart = ?
, ProcEnd = ?
, Error = ?
, Success = ?
, [License loaded] = ?
, [License set] = ?
WHERE ID = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Success]"
                              cachedDataType="bool"
                              cachedName="Success"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output].Columns[Success]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="ui1"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="dbTimeStamp"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              dataType="dbTimeStamp"
                              name="Param_2">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Param_3">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              dataType="bool"
                              name="Param_4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              dataType="i4"
                              name="Param_5">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              dataType="i4"
                              name="Param_6">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              dataType="i4"
                              name="Param_7">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Batch]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input]"
                      name="Batch"
                      startId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output2]"
                      endId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output3]"
                      endId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[ErrMsg]"
                      endId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]"
                      name="ErrMsg"
                      startId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Insert]"
                      endId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]"
                      name="Insert"
                      startId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Ja]"
                      endId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Ja1]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Ja2]"
                      endId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Lookup Match Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input]"
                      name="Lookup Match Output"
                      startId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 1]"
                      endId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 2]"
                      endId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 2"
                      startId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[No]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[No1]"
                      endId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Output 0]"
                      endId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]"
                      name="Output 0"
                      startId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output2]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output3]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Union All Output 1]"
                      endId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input]"
                      name="Union All Output 1"
                      startId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Zinvol]"
                      endId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0]"
                      name="Zinvol"
                      startId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Zinvol]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\SAF"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{d30a7f28-9d3c-4c28-9ff9-63f7312b113c}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="SAF"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Concat"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Concat"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_c9cf6266c904420ab46fd31b8f865af5")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_c9cf6266c904420ab46fd31b8f865af5")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a728c98a-3234-4a90-b239-68ee1778cc4c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public ErrMsgBuffer As ErrMsgBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If ErrMsgBuffer IsNot Nothing Then
            ErrMsgBuffer.SetEndOfRowset
            ErrMsgBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "ErrMsg") Then
                ErrMsgBuffer = New ErrMsgBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ErrMsg As String = vbNullString

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        On Error GoTo ErrHandler
        ComponentMetaData.FireWarning(1, "Row", Row.Line, "", 0)
        If Left(Row.Line, 10) = "DocConvID=" Then
            ErrMsgBuffer.AddRow()
            ErrMsgBuffer.DocID = CInt(Split(Row.Line, "=")(1))
            If ErrMsg <> vbNullString Then ErrMsgBuffer.ErrMsg = Mid(ErrMsg, vbNewLine.Length + 1)

            ErrMsg = vbNullString
        Else
            ErrMsg = ErrMsg & vbNewLine & Row.Line
        End If
        Exit Sub
ErrHandler:
        Debug.Print(Err.Description)
        Resume
    End Sub
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_c9cf6266c904420ab46fd31b8f865af5.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{44e000b8-da55-43ef-a0a3-bcac3f368318}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_c9cf6266c904420ab46fd31b8f865af5</RootNamespace>
    <AssemblyName>SC_c9cf6266c904420ab46fd31b8f865af5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class ErrMsgBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [ErrMsg]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [ErrMsg_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [DocID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [DocID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_c9cf6266c904420ab46fd31b8f865af5</msb:CodeName>
    <msb:DisplayName>SC_c9cf6266c904420ab46fd31b8f865af5</msb:DisplayName>
    <msb:ProjectId>{62782CB0-FB1A-4800-977B-1FC0B98E381B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_c9cf6266c904420ab46fd31b8f865af5.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_c9cf6266c904420ab46fd31b8f865af5.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFbfIV0AAAAAAAAAAOAAIiALAVAAACQAAAAIAAAAAAAAAkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALBCAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
QgAAAAAAAEgAAAACAAUAtCUAAEQcAAABAAAAAAAAAPhBAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqOgIoGwAABgIUfQcAAAQqGzAGAIIBAAABAAARKCYAAAoY
ChgMAignAAAKF3IzAABwA28PAAAGcjsAAHAWbygAAAoZDANvDwAABh8KKCkAAApyPQAAcBYoKgAA
Ci1zGgwCewoAAARvGAAABhsMAnsKAAAEA28PAAAGclMAAHAVFigrAAAKF5ooLAAACm8WAAAGHAwC
ewcAAAQUFigqAAAKLCQdDAJ7CgAABAJ7BwAABHJXAABwKC0AAAoX1iguAAAKbxQAAAYeDAIUfQcA
AAQrNx8KDAICewcAAARyVwAAcANvDwAABigvAAAKfQcAAAQrFh8MDCgmAAAKBy0QIBQACoAoMAAA
CnrdiAAAAAcrAwcXWBYLRQ4AAAAAAAAAyv7//9H+///w/v//DP///xn///8/////UP///3T///+2
////f////7b///+g////tv///942CAsGRQMAAAAAAAAAqP///4r////eIHUxAAABFP4DBhb+A18H
Fv4BX/4RdDEAAAEoMQAACt7KIDMACoAoMAAACnoHLAUoJgAACioAAEEcAAABAAAAAAAAAE4BAABi
AQAADAAAAE4BAAAqAgMEBSgyAAAKKlICezMAAAoCezQAAAoWlG81AAAKKiICFig2AAAKKgAAABMw
AQAJAAAAAgAAEQIoNwAACgoGKgAAABMwAQAJAAAAAgAAEQIoOAAACgoGKiYCFgMoOQAACipaAywI
AhYoOgAACipyXQAAcHM7AAAKejoCFwOMMwAAASg5AAAKKloDLAgCFyg6AAAKKnJdAABwczsAAAp6
HgIoPAAACioeAig9AAAKKhMwAQAJAAAAAgAAEQIoOAAACgoGKpoCKD4AAAoCAnMjAAAGfQgAAAQC
AnMkAAAGfQkAAAQCFn0LAAAEKhMwBABPAAAAAAAAAARy+gAAcBpvPwAACiwVAgUCAyhAAAAKDgRz
DgAABm8hAAAGBW9BAAAKLCMCAnsLAAAEF9Z9CwAABAJ7CwAABBczDAJvHQAABgIoHgAABioGKm4C
ewoAAAQsEgJ7CgAABG8ZAAAGAhR9CgAABCoAAAATMAUAQQAAAAMAABEDF9oKFgsrLgQHlA4EcgoB
AHAoQgAACjMZAgUHmgIEB5QoQAAACg4EcxMAAAZ9CgAABAcX1gsHBjHOAm8gAAAGKkorBwIDbyIA
AAYDbxEAAAYt8So6AigiAAAKAgN9DAAABCo6AigiAAAKAgN9DQAABCpCcyIAAAooQwAACoAPAAAE
Kh4CKEQAAAoqABswAQA/AAAAAAAAAH4OAAAELTJ+DwAABChDAAAKKEUAAAp+DgAABC0ccyYAAAaA
DgAABN4Qfg8AAAQoQwAACihGAAAK3H4OAAAEKgABEAAAAgAdAAwpABAAAAAANgIDKEMAAAooRwAA
CioeAihIAAAKKi7QDQAAAigjAAAKKh4CKEkAAAoqAAATMAEAFAAAAAQAABECjAUAABstCCgBAAAr
CisCAgoGKiID/hUFAAAbKgAAABMwAgAoAAAABQAAEQJ7SwAACm9MAAAKCgaMCAAAGy0SKAIAACsK
AntLAAAKBm9NAAAKBipKAigiAAAKAnNOAAAKfUsAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAAwLAAAjfgAAeAsAAJALAAAjU3RyaW5ncwAAAAAIFwAAGAEAACNVUwAgGAAA
EAAAACNHVUlEAAAAMBgAABQEAAAjQmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA3
AAAADgAAABAAAAAwAAAAGwAAAE4AAAA+AAAABQAAAAYAAAAOAAAADwAAAAgAAAABAAAABgAAAAEA
AAACAAAAAwAAAAIAAAAAAE8FAQAAAAAABgCpA/gIBgBTBPgIBgCAAjkIDwCeCQAABgDBAjIGBgCM
AzIGBgA6BDIGBgDJAzIGBgDiAzIGBgAIAzIGBgD9A7sFBgCtArIIBgApArIIBgBUAzIGBgAjA60E
CgBMAmsHCgAUAjkFCgCUAjkFDgDsAYgIDgDKB0wIBgA8AzkIDgDYAtEIDgDwAukABgBeCrsFDgCw
B4gIDgBxA+kABgDDAbsFDgAaAA8FCgA3AsIFBgBRBxgJBgBvBh0GEgATBJ8BBgD/BLsFEgBAB58B
FgAkB58BEgB7Bp8BEgC8Cp8BCgD8AQgGBgBjAjkIBgBoAbsFBgCFCzIGDgDUANEIGgABAIMHDgDc
CekADgAlCtEIDgAmAekADgD2CdEIBgDtBLsFBgBUBrsFBgBEBrsFBgBEALsFBgBeBrsFBgAWCvgI
BgAnCJwEBgAQCLsFAAAAAG4AAAAAAAEAAQAAAAAA+gVaC00AAQABAAAAAADIB1oLUQABAAIAAAEQ
AGUKWgthAAEAAwAAAAAAWgkpCWEABQAIAAEAAADfBUoAJAAHAAwAAQAAABcHSgCJAAgADgABAAAA
MwdKAIkACAATAAEAAACeCkoAlQAIABsAAQAAAAIKSgBhAAwAIwABAAAArQlKAGEADQAkAAABEADk
CUoAmQAOACUABQEAAHoIAABhABAAKAAFAQAAKQAAAGEAEAAvADEA4AZmATEAtwZuATEAywZ2ATEA
+QZ+AREA0weGAREA4AGKAQEA+ASOAQYAAgqRAQYArQmVAQYAMweZAQEA/wCdAQEArAqgAQEArAqg
AREAcQSlAREAWAqpASEAKgsuAVAgAAAAAAYYGggGAAEAWCAAAAAABhgaCAYAAQBgIAAAAAARGCAI
awABAIogAAAAABMIuwesAQEAliAAAAAAEwjqBbEBAQCiIAAAAAATCKwHtgEBAK4gAAAAABMIagi7
AQEAuiAAAAAAAxgaCAYAAQDCIAAAAAAWCE0HwAEBAO4gAAAAABYIyAHFAQEA9SAAAAAAFgjUAcoB
AQD9IAAAAAAGGBoIBgACAAwhAAAAAMYCOwvQAQIAuCIAAAAABhgaCLQAAwDDIgAAAAAGCJYBCwEG
ANgiAAAAAAYIiAXXAAYA5CIAAAAAhgBSC9cABgD8IgAAAACGAIIK1wAGALgiAAAAAAYYGgi0AAYA
ESMAAAAABgj0BBAACQAbIwAAAAAGCJgFFQAKADIjAAAAAAYIdwABAAsAQSMAAAAABgh3BRUADABY
IwAAAACGADQLBgANAGAjAAAAAIYAfwoGAA0AaCMAAAAAhgCCCtcADQB9IwAAAAAGGBoIBgANAKQj
AAAAAMYCEQvWAQ0A/yMAAAAARgMvCgYAEQABJAAAAAABAA4BBgARACAkAAAAAMYCHgviAREA/yMA
AAAARgM9CgYAFQBtJAAAAABGAwoL0AEVAP8jAAAAAEYDOwvQARYAgCQAAAAABhgaCPABFwCPJAAA
AAAGGBoI8AEYAJ4kAAAAABEYIAhrABkAryQAAAAABhgaCAYAGQC4JAAAAAAWCHkE9wEZABQlAAAA
AMYC7wkGARkAIiUAAAAAxgJcAZsAGgAqJQAAAACDAMAB/AEaADYlAAAAAMYC4QQLARoAQCUAAAAA
EQCrAAECGgBgJQAAAAABAJcACQIbALogAAAAAAYYGggGABwAbCUAAAAAAwhDAUoAHACgJQAAAAAG
GBoIBgAcAAAAAQCWBAAAAQBWCwAAAQBGBwAAAgC3CQAAAwCJBgAAAQBGBwAAAgC3CQAAAwCJBgAA
AQCWBAAAAQCWBAAAAQCWBAAAAQCWBAAAAQCBAAAAAgCMAQAAAwBGBwAABACJBgAAAQA1CgAAAgAv
CAAAAwAOCgAABACJBgAAAQBGBwAAAQBWCwAAAQDCCgAAAQDCCgAAAQB5BgAAAQBTAQAAAQBTAQkA
GggBABEAGggGABkAGggKACkAGggQADEAGggQADkAGggQAEEAGggQAEkAGggQAFEAGggQAFkAGggV
AGEAGggVAGkAGggQAHEAGggQAHkAGggQAIEAGggaAJEAGgggAKkAGggGALEAGggGALkAGggGANEA
GggmAOkAGggQAAEBGggGADkBGggGAJkAGggGAKEAGggGAAwAGggGABQAGggGABwAGggGACQAGggG
AAwAQwFKABQAQwFKABwAQwFKACQAQwFKAMEAGggGANkAegFPANkAgQtXAPEAGghdAFEB7gdrACkB
vgBvAFkBxwR1AGEBjgp+AGkB0wSEAGEBkwqLAHkBYQeWAIEBBAWbAGEBIgF+AIEBUQqfAFEB2wem
AFEBAAitABEBGgi0ABEBRgfAABEBtwnFABkB6gTJABEBowXOABEBUgvXABEBggrXABEBsgXbABEB
qgUBAJEBGggQABEBNAsGABEBfwoGACkBGggGAIEB7wnhACkBywnpABkBbwrXACkBiQD0AKkBjQT8
ADEBGggGALEBtQcBAbEBmQoBAcEA7wkGAcEAXAGbAMEA4QQLAbkBNAEXATQAKgsuATwAeQRKADwA
gwRFATwAGggGACkAqwDMAy4ACwBFAi4AEwBOAi4AGwBtAi4AIwB2Ai4AKwCfAi4AMwCfAi4AOwB2
Ai4AQwClAi4ASwCfAi4AUwC8Ai4AWwCfAi4AYwDCAi4AawDsAi4AcwD5AkAAiwBDA0AAgwBIA0MA
ewBRA0MAgwBIA0kAqwDdA2MAewBRA2MAgwBIA2kAqwDxA4AAiwBDA4MAkwBDA4MAmwBDA4MAewBR
A4kAqwD+A6AAiwBDA6kAgwBtAsAAiwBDA8MAswBDA8MAUwCfAskAgwBtAuAAiwBDA+MAUwCfAgMB
UwCfAiMBUwCfAkMBUwCfAmMBUwCfAqMBgwBIA6MBowBqA6kBuwBDA8MBgwBIA8MBWwCfAmAEUwCf
AoAEUwCfAgAFgwBIAwAFiwBDAyAFgwBIAyAFiwBDA0AFgwBIA0AFiwBDA2AFgwBIA2AFiwBDA4AF
iwBDA6AFiwBDA8AFiwBDA8AFgwBIA+AFiwBDAwAGiwBDAwAGgwBIA2UA0wDvAA8BIgEEAAEABQAF
AAcABwAIAAkADAANAA4ADgAAAMoHEQIAAPwFFgIAALAHGwIAAHwIIAIAAFEHJQIAAOQBKgIAAJoB
LwIAAIwFMwIAAPgELwIAAJwFMwIAAHsANwIAAHsFMwIAAJYEOwIAAEcBQAICAAQAAwACAAUABQAC
AAYABwACAAcACQACAAkACwACAAoADQABAAsADQACAA8ADwACABAAEQABABQAEwABABUAFQABABYA
FwABABcAGQACACcAGwACAC8AHQAuADUAPABDABQBJwE2AT0BBIAAAAEAAAAAAAAAAAAAAAAASgAA
AAQAAAAAAAAAAAAAAEsB4AAAAAAABAAAAAAAAAAAAAAASwG7BQAAAAAKAAAAAAAAAAAAAABUAekA
AAAAAA4AAAAAAAAAAAAAAF0BzAoAAAAADgAAAAAAAAAAAAAAXQHpCgAAAAAOAAAAAAAAAAAAAABd
AZMGAAAAAAAAAAABAAAAZgkAAA0ABAAOAAQAAAAQABwAlQAAABAAWQCVAAAAAABbAJUAlQAdAZUA
QAEAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZl
T2JqZWN0UHJvdmlkZXJgMQBJbnQzMgBTQ19jOWNmNjI2NmM5MDQ0MjBhYjQ2ZmQzMWI4Zjg2NWFm
NQA8TW9kdWxlPgBzZXRfRG9jSUQASW5wdXRJRABHZXRPdXRwdXRJRABUAERpc3Bvc2VfX0luc3Rh
bmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAGdldF9Db21wb25lbnRNZXRhRGF0YQBQcm9qZWN0RGF0
YQBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMASW5wdXRzRmluaXNoZWQATWFya091dHB1
dHNGaW5pc2hlZABNaWQAQ29tcGFyZU1ldGhvZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFu
Y2UAaW5zdGFuY2UAR2V0SGFzaENvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUASW5wdXROYW1lAGdldF9MaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAEdl
dFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAQXBwbGljYXRpb25CYXNl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1
dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFy
ZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1
dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJl
YWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBGaXJlV2FybmluZwBDb21wYXJlU3RyaW5n
AFRvU3RyaW5nAEdldFN0cmluZwBzZXRfRXJyTXNnAE1hdGgAZ2V0X0xlbmd0aABNaWNyb3NvZnQu
VmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0Nf
YzljZjYyNjZjOTA0NDIwYWI0NmZkMzFiOGY4NjVhZjUuZGxsAHNldF9Eb2NJRF9Jc051bGwAZ2V0
X0xpbmVfSXNOdWxsAHNldF9FcnJNc2dfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFN5
c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlB
cHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24A
Q3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNQaXBlbGluZVdyYXAAbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBt
X0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIASW5w
dXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAEVyck1zZ0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBUb0ludGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBnZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0
ZXIATXlDb21wdXRlcgBfcmVzTWdyAENyZWF0ZVByb2plY3RFcnJvcgBDbGVhclByb2plY3RFcnJv
cgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAE91dHB1dElE
cwBTeXN0ZW0uRGlhZ25vc3RpY3MATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dl
YlNlcnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9u
U2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTQ19jOWNmNjI2NmM5MDQ0MjBhYjQ2ZmQzMWI4Zjg2NWFmNS5NeS5SZXNv
dXJjZXMATXlSZXNvdXJjZXMAU0NfYzljZjYyNjZjOTA0NDIwYWI0NmZkMzFiOGY4NjVhZjUuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5k
ZXhlcwBHZXRDb2x1bW5JbmRleGVzAFN0cmluZ3MATXlTZXR0aW5ncwBFcXVhbHMAQ29udmVyc2lv
bnMAQ29ubmVjdGlvbnMAQnVmZmVycwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMARmluaXNoT3V0
cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABtX1N5bmNPYmplY3QATXlQcm9qZWN0AGdl
dF9FbmRPZlJvd3NldABTZXRFbmRPZlJvd3NldABMZWZ0AFNwbGl0AEV4aXQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1
dABQcmltZU91dHB1dABtX0NvbnRleHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4
dFJvdwBTQ19jOWNmNjI2NmM5MDQ0MjBhYjQ2ZmQzMWI4Zjg2NWFmNS5NeQBnZXRfQXNzZW1ibHkA
AAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAHUgBv
AHcAAAEAFUQAbwBjAEMAbwBuAHYASQBEAD0AAAM9AAAFDQAKAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAA1FAHIAcgBNAHMAZwAAwT1U
//wY5EKcDibWJgOuGAAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFFByAEAQ4O
Dg4GFRI4ARIMBhUSOAESCAYVEjgBEmUGFRI4ARI0BCAAEwAHAAESbRGAoQUgABKApQcgAgEOEoCl
BQcDCAgIAwAAAQUgABKArQggBQEIDg4OCAUAAg4OCAYAAwgODgIKAAQdDg4OCBGAuQQAAQgOAyAA
CAYAAw4ODg4GAAESgMUIBgABARKAxQsgAwESgI0dCBKAkQQGEoCNAwYdCAQgAQ4IBCABAggDBwEC
AyAAAgUgAgEIHAcgAgIOEYDRBSABHQgIBAcCCAgHAAIIEoCRDgQAARwcBAABARwEIAECHAMgAA4E
BwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRI4ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEB
EwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEHBhUSOAESDAcGFRI4ARIIBwYVEjgBEmUHBhUS
OAESNAMGEnkDBhJ9AgYOAwYSKAMGEiwDBhIgAgYIBAYSgJUDBhIwAgYcBAAAEgwEAAASCAQAABJl
BAAAEjQEAAASeQQAABJ9BQABARJ9BSABARIcCyAEAQgOEoCNEoCRDSAEAQgdCB0SgI0SgJEGIAEB
EoCVBAAAEjAEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASNAQIABJ5BAgA
En0DKAAOAygAAgMoAAgECAASMAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ19jOWNmNjI2NmM5MDQ0MjBhYjQ2ZmQzMWI4Zjg2NWFmNQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE5AAAFAQABAAApAQAkYTcyOGM5OGEtMzIzNC00YTkw
LWIyMzktNjhlZTE3NzhjYzRjAAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAgB
AAEAAAAAABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Q
cm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9z
ZV9fSW5zdGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAH
TXkuVXNlcgAAEwEADk15LldlYlNlcnZpY2VzAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADYQgAAAAAAAAAAAADy
QgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5EIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
YwA5AGMAZgA2ADIANgA2AGMAOQAwADQANAAyADAAYQBiADQANgBmAGQAMwAxAGIAOABmADgANgA1
AGEAZgA1AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjADkAYwBmADYAMgA2ADYAYwA5
ADAANAA0ADIAMABhAGIANAA2AGYAZAAzADEAYgA4AGYAOAA2ADUAYQBmADUALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGMAOQBjAGYANgAy
ADYANgBjADkAMAA0ADQAMgAwAGEAYgA0ADYAZgBkADMAMQBiADgAZgA4ADYANQBhAGYANQAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBjADkAYwBmADYAMgA2
ADYAYwA5ADAANAA0ADIAMABhAGIANAA2AGYAZAAzADEAYgA4AGYAOAA2ADUAYQBmADUAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAAQzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_c9cf6266c904420ab46fd31b8f865af5</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">14</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg]"
                          hasSideEffects="true"
                          name="ErrMsg">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="2048"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              name="ErrMsg" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              name="Doc ID" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]"
                              name="Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,50,1252)"End"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,50,1252)"End"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              name="Batch ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)[SUBSTRING](@[User::BatchName],2,99)</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)SUBSTRING(@[User::BatchName],2,99)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              dataType="ui1"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              name="Main Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::MainStep]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::MainStep]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Determine Elapse"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Determine Elapse"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1524eeec902345afb3af34218bd72cb8.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7740cf9e-e6a8-4740-9e09-699134683bc3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_1524eeec902345afb3af34218bd72cb8</RootNamespace>
    <AssemblyName>SC_1524eeec902345afb3af34218bd72cb8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_1524eeec902345afb3af34218bd72cb8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_1524eeec902345afb3af34218bd72cb8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ee4356d7-ccee-4b5b-88bd-f135028bb369")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public BatchBuffer As BatchBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If BatchBuffer IsNot Nothing Then
            BatchBuffer.SetEndOfRowset
            BatchBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Batch") Then
                BatchBuffer = New BatchBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

    Public ReadOnly Property [BatchName]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("BatchName").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

    Public ReadOnly Property [ExecRoot]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("ExecRoot").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ReadOnly PeilDate As New DateTime(2019, 5, 1)
    Private PrevMoment As Long
    Private ProcStart As Date
    Private GenErr As String

    Public Overrides Sub PreExecute()
        MyBase.PreExecute()

        Dim FILE_NAME As String = Variables.ExecRoot & "\03-Finished\" & Variables.BatchName & ".GenErr"
        Dim objReader As New System.IO.StreamReader(FILE_NAME)

        GenErr = vbNullString
        While objReader.Peek() <> -1
            GenErr = GenErr & vbNewLine & objReader.ReadLine()
        End While
        objReader.Close()

        PrevMoment = 0
    End Sub

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim V() As String
        On Error GoTo ErrHandler
        '    ComponentMetaData.FireWarning(1, Row.ID.ToString, Row.TimeStamp & ": " & PrevMoment.ToString, "", 0)
        V = Split(Row.TimeStamp, ".")

        If Row.ID = 0 Then
            Select Case Row.Status
                Case "Start"
                    ProcStart = CDate(V(0))
                Case "End"
                    BatchBuffer.AddRow()
                    BatchBuffer.BatchID = Row.BatchID
                    BatchBuffer.Start = ProcStart
                    BatchBuffer.End = CDate(V(0))
                    BatchBuffer.Status = 4

                    If GenErr = vbNullString Then
                        BatchBuffer.Success = True
                    Else
                        BatchBuffer.Success = False
                        BatchBuffer.GenErr = Mid(GenErr, Len(vbNewLine) + 1)
                    End If
            End Select
        Else
            Row.Moment = CDate(V(0))
            Row.Elapsed = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
        End If
        PrevMoment = GetMs(CDate(V(0)), CInt(V(1)))
        Exit Sub
ErrHandler:
        Debug.Print(Err.Description)
        Resume
    End Sub

    Private Function GetMs(D As Date, M As Int32) As Long
        GetMs = CLng((D - PeilDate).TotalSeconds * 1000 + M)
    End Function
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [ID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [TimeStamp]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [TimeStamp_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public ReadOnly Property [Status]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(2))
        End Get
    End Property
    Public ReadOnly Property [Status_IsNull] As Boolean
        Get
            Return IsNull(2)
        End Get
    End Property

    Public ReadOnly Property [BatchID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(3))
        End Get
    End Property
    Public ReadOnly Property [BatchID_IsNull] As Boolean
        Get
            Return IsNull(3)
        End Get
    End Property

    Public WriteOnly Property [Elapsed]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Elapsed_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Moment]() As DateTime
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Moment_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class BatchBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Status]() As Byte
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Status_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [End]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [End_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Start]() As DateTime
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Start_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [GenErr]() As String
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [GenErr_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [BatchID]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [BatchID_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Success]() As Boolean
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Success_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_1524eeec902345afb3af34218bd72cb8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_1524eeec902345afb3af34218bd72cb8</msb:DisplayName>
    <msb:ProjectId>{D3395EBE-17AA-45C6-8B81-251CACA914A1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_1524eeec902345afb3af34218bd72cb8.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1524eeec902345afb3af34218bd72cb8.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFDhIV0AAAAAAAAAAOAAIiALAVAAACwAAAAIAAAAAAAA9ksA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKRLAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA/CsAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADY
SwAAAAAAAEgAAAACAAUAwCgAACwiAAABAAAAAAAAAOxKAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqZgIoLwAABgIg4wcAABsXcyYAAAp9BwAABCoAEzAEAHAA
AAABAAARAignAAAKAnsMAAAEbzoAAAZyMwAAcAJ7DAAABG85AAAGck8AAHAoKAAACgoGcykAAAoL
AhR9CgAABCscAgJ7CgAABHJfAABwB28qAAAKKCsAAAp9CgAABAdvLAAAChUz2wdvLQAACgIWan0I
AAAEKhswBQBTAgAAAgAAESguAAAKGAoYDANvEwAABnJlAABwFRYoLwAACg0ZDANvEQAABjr1AAAA
GgwDbxUAAAYTBBEEcmkAAHAWKDAAAAosFBEEcnUAAHAWKDAAAAosGjgAAQAAHAwCCRaaKDEAAAp9
CQAABDjrAAAAHgwCew0AAARvLAAABh8JDAJ7DQAABANvFwAABm8oAAAGHwoMAnsNAAAEAnsJAAAE
byQAAAYfCwwCew0AAAQJFpooMQAACm8iAAAGHwwMAnsNAAAEGm8gAAAGHw0MAnsKAAAEFBYoMAAA
Ci0RHw4MAnsNAAAEF28qAAAGK24fEAwCew0AAAQWbyoAAAYfEQwCew0AAAQCewoAAARyXwAAcCgy
AAAKF9YoMwAACm8mAAAGKzgfFAwDCRaaKDEAAApvGwAABh8VDAMCCRaaKDEAAAoJF5ooNAAACigP
AAAGAnsIAAAE2rdvGQAABh8WDAICCRaaKDEAAAoJF5ooNAAACigPAAAGfQgAAAQrFh8YDCguAAAK
By0QIBQACoAoNQAACnrduAAAAAcrAwcXWBYLRRoAAAAAAAAA+f3//wD+//8V/v//Iv7//0////9P
/v//T////2T+//9x/v//hf7//5n+//+v/v//vv7//9D+//9P////4f7///D+//9P////T////xf/
//8o////T////4b///9w////hv///942CAsGRQMAAAAAAAAAeP///1r////eIHUzAAABFP4DBhb+
A18HFv4BX/4RdDMAAAEoNgAACt7KIDMACoAoNQAACnoHLAUoLgAACioAQRwAAAEAAAAAAAAAHwIA
ADMCAAAMAAAAHwIAABMwAgAqAAAAAwAAEQMCewcAAAQoNwAACgsSASg4AAAKIwAAAAAAQI9AWgRs
WCg5AAAKuQoGKioCAwQFKDoAAAoqUgJ7OwAACgJ7PAAAChaUbz0AAAoqIgIWKD4AAAoqUgJ7OwAA
CgJ7PAAACheUbz8AAAoqIgIXKD4AAAoqUgJ7OwAACgJ7PAAAChiUbz8AAAoqIgIYKD4AAAoqUgJ7
OwAACgJ7PAAAChmUbz0AAAoqIgIZKD4AAAoqOgIaA4w0AAABKEAAAAoqWgMsCAIaKEEAAAoqcn0A
AHBzQgAACno6AhsDjCEAAAEoQAAACipaAywIAhsoQQAACipyfQAAcHNCAAAKegAAABMwAQAJAAAA
BAAAEQIoQwAACgoGKgAAABMwAQAJAAAABAAAEQIoRAAACgoGKjoCFgOMNgAAAShAAAAKKloDLAgC
FihBAAAKKnJ9AABwc0IAAAp6OgIXA4whAAABKEAAAAoqWgMsCAIXKEEAAAoqcn0AAHBzQgAACno6
AhgDjCEAAAEoQAAACipaAywIAhgoQQAACipyfQAAcHNCAAAKeiYCGQMoQAAACipaAywIAhkoQQAA
CipyfQAAcHNCAAAKeloDLAgCGihBAAAKKnJ9AABwc0IAAAp6OgIbA4w3AAABKEAAAAoqWgMsCAIb
KEEAAAoqcn0AAHBzQgAACnoeAihFAAAKKh4CKEYAAAoqAAAAEzABAAkAAAAEAAARAihEAAAKCgYq
mgIoRwAACgICczcAAAZ9CwAABAICczgAAAZ9DAAABAIWfQ4AAAQqEzAEAE8AAAAAAAAABHIaAQBw
Gm9IAAAKLBUCBQIDKEkAAAoOBHMQAAAGbzUAAAYFb0oAAAosIwICew4AAAQX1n0OAAAEAnsOAAAE
FzMMAm8xAAAGAigyAAAGKgYqbgJ7DQAABCwSAnsNAAAEby0AAAYCFH0NAAAEKgAAABMwBQBBAAAA
BQAAEQMX2goWCysuBAeUDgRyKgEAcChLAAAKMxkCBQeaAgQHlChJAAAKDgRzHwAABn0NAAAEBxfW
CwcGMc4CbzQAAAYqSisHAgNvNgAABgNvHQAABi3xKjoCKCIAAAoCA30PAAAEKjoCKCIAAAoCA30Q
AAAEKpYCexAAAARvTAAACnI2AQBwb00AAAooTgAACm9PAAAKKFAAAAoqlgJ7EAAABG9MAAAKckoB
AHBvTQAACihOAAAKb08AAAooUAAACipCcyIAAAooUQAACoASAAAEKh4CKFIAAAoqABswAQA/AAAA
AAAAAH4RAAAELTJ+EgAABChRAAAKKFMAAAp+EQAABC0cczwAAAaAEQAABN4QfhIAAAQoUQAACihU
AAAK3H4RAAAEKgABEAAAAgAdAAwpABAAAAAANgIDKFEAAAooVQAACioeAihWAAAKKi7QDQAAAigj
AAAKKh4CKFcAAAoqAAATMAEAFAAAAAYAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAA
ABMwAgAoAAAABwAAEQJ7WQAACm9aAAAKCgaMCAAAGy0SKAIAACsKAntZAAAKBm9bAAAKBipKAigi
AAAKAnNcAAAKfVkAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAACAOAAAj
fgAAjA4AAKgNAAAjU3RyaW5ncwAAAAA0HAAAXAEAACNVUwCQHQAAEAAAACNHVUlEAAAAoB0AAIwE
AAAjQmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA/AAAADgAAABMAAABGAAAAKQAA
AFwAAAA+AAAABwAAAAcAAAAiAAAAIwAAAAgAAAABAAAABgAAAAEAAAACAAAAAwAAAAIAAAAAALcF
AQAAAAAABgAeBGsKBgDIBGsKBgD1ApsJDwARCwAABgA2A2sHBgABBGsHBgCvBGsHBgA+BGsHBgBX
BGsHBgB9A2sHBgByBNAGBgAiAyUKBgCeAiUKBgDJA2sHBgCYAzIFCgDBAr0ICgCJAqEFCgAJA6EF
DgBLAvsJDgAbCb8JBgCxA5sJDgBNA0QKDgBlAxcBBgD/C9AGDgABCfsJDgDmAxcBBgAiAtAGDgA6
AHcFCgCsAuwGBgCjCIsKBgCoB0cHEgCIBP4BBgDsAdAGBgBtBdAGBgD9B88ABgDfBtAGEgCSCP4B
FgB3CP4BEgC0B/4BEgBuDP4BCgBbAjIHBgDYApsJBgCwAdAGBgCcDWsHBgBmBdAGDgACAUQKDgBb
CxcBDgBuARcBDgCkC0QKDgB1C0QKBgCNB9AGBgBnANAGBgB9B9AGBgDxBNAGBgDXBtAGBgCXB9AG
GgARANUIGgABANUIowAbDQAAGgAiANUIBgCVC2sKBgB4CSEFBgBhCdAGAAAAAJEAAAAAAAEAAQAA
AAAAJAdxDU0AAQABAAAAAAAZCXENUQABAAIAAAEQAAYMcQ1hAAEAAwAAAAAAzQqcCmEABQAIAAEA
AAAJB20AJAAHAAwAAQAAAGoIbQCVAAsAEAABAAAAhghtAJUACwAfAAEAAABQDG0AoQALAC8AAQAA
AIELbQBhAA8ANwABAAAALAttAGEAEAA4AAABEABjC20ApQARADsABQEAAO0JAABhABMAPgAFAQAA
SQAAAGEAEwBFADEAMwi3ATEACgi/ATEAHgjHATEATAjPAREAJAnXAREAPwLbASEAeQLfAQEARQzk
AQEAsgzfAQEAhAnnAQYAgQvqAQYALAvuAQYAhgjyAQEALQH2AQEAXgz5AQEAXgz5AREA9gT+AREA
+QsCAiEA/Qx/AVAgAAAAAAYYawkGAAEAWCAAAAAABhhrCQYAAQBgIAAAAAARGHEJkwABAIogAAAA
ABMIDAkFAgEAliAAAAAAEwgUBwoCAQCiIAAAAAATCP0IDwIBAK4gAAAAABMI3QkUAgEAuiAAAAAA
AxhrCQYAAQDCIAAAAAAWCJ8IGQIBAO4gAAAAABYIJwIeAgEA9SAAAAAAFggzAiMCAQD9IAAAAAAG
GGsJBgACABghAAAAAMYC5gQGAAIAlCEAAAAAxgJSDSkCAgAQJAAAAAABAJUJLwIDAEYkAAAAAAYY
awnlAAUAUSQAAAAABgiaAIYACABmJAAAAAAGCN8FEwEIAG8kAAAAAAYI7wd7AAgAhCQAAAAABgg1
BhMBCACNJAAAAAAGCMgLewAIAKIkAAAAAAYIbwYTAQgAqyQAAAAABgihAIYACADAJAAAAAAGCO0F
EwEIAMkkAAAAAAYIUAEBAAgA2CQAAAAABggTBhUACQDvJAAAAAAGCDoMNwIKAP4kAAAAAAYIkwYV
AAsAGCUAAAAAhgBpDRMBDAAwJQAAAACGACMMEwEMAEYkAAAAAAYYawnlAAwARSUAAAAABgjTCz4C
DwBUJQAAAAAGCIEGFQAQAGslAAAAAAYIYAE3AhEAeiUAAAAABggmBhUAEgCRJQAAAAAGCKgMNwIT
AKAlAAAAAAYIpQYVABQAtyUAAAAABgiACRAAFQDBJQAAAAAGCEoGFQAWAMkkAAAAAAYIrQABABcA
2CUAAAAABggABhUAGADvJQAAAAAGCK4LFQAZAP4lAAAAAAYIXAYVABoAFSYAAAAAhgBLDQYAGwAd
JgAAAACGACAMBgAbACgmAAAAAIYAIwwTARsAPSYAAAAABhhrCQYAGwBkJgAAAADGAuQMQwIbAL8m
AAAAAEYDugsGAB8AwSYAAAAAAQA8AQYAHwDgJgAAAADGAvEMTwIfAL8mAAAAAEYD3gsGACMALScA
AAAARgPdDCkCIwC/JgAAAABGA1INKQIkAEAnAAAAAAYYawldAiUATycAAAAABhhrCV0CJgBeJwAA
AAAGCNQBewAnAIQnAAAAAAYIfgx7ACcAqicAAAAAERhxCZMAJwC7JwAAAAAGGGsJBgAnAMQnAAAA
ABYI/gRkAicAICgAAAAAxgJuC1sBJwAuKAAAAADGAqQBhgAoADYoAAAAAIMAHwJpAigAQigAAAAA
xgJaBXsAKABMKAAAAAARAO8AbgIoAGwoAAAAAAEA2wB2AikAuiAAAAAABhhrCQYAKgB4KAAAAAAD
CIsBSgAqAKwoAAAAAAYYawkGACoAAAABABsFAAABAG0NAAABAMsAAAACAM0AAAABAJgIAAACADYL
AAADAMIHAAABABsFAAABABsFAAABABsFAAABABsFAAABAJgIAAACADYLAAADAMIHAAABABsFAAAB
ABsFAAABABsFAAABABsFAAABABsFAAABABsFAAABABsFAAABABsFAAABABsFAAABABsFAAABABsF
AAABABsFAAABALkAAAACAOIBAAADAJgIAAAEAMIHAAABAMALAAACAIsJAAADAI0LAAAEAMIHAAAB
AJgIAAABAG0NAAABAHQMAAABAHQMAAABALIHAAABAJsBAAABAJsBCQBrCQEAEQBrCQYAGQBrCQoA
KQBrCRAAMQBrCRAAOQBrCRAAQQBrCRAASQBrCRAAUQBrCRAAWQBrCRUAYQBrCRUAaQBrCRAAcQBr
CRAAeQBrCRAAgQBrCRoAkQBrCSAAqQBrCQYAsQBrCQYAuQBrCQYA0QBrCSYA6QBrCRAAAQFrCQYA
UQFrCQYAmQBrCQYAoQBrCQYADABrCQYAFABrCQYAHABrCQYAJABrCQYADACLAUoAFACLAUoAHACL
AUoAJACLAUoAwQBrCQYA2QDCAU8A2QCYDVcA8QBrCV0ACQFrCWUAQQHmBAYAaQHyC3MAGQFrCRAA
GQH1AXsAaQHyC38AGQFyBYYAGQFzAgYAcQE/CZMAeQEvDJcAiQFMBaIAkQGCAqkAeQHoBrAAeQFc
AbUAkQGzCLAAcQEsCbsAcQFRCcIACQFcB9AAIQGuCdwAEQFoAeAAKQFrCeUAKQGYCPEAKQE2C/YA
MQFkAPoAKQGvBv8AMQFjBQQBKQHHBgkBKQG2BgEAqQFrCRAAKQFpDRMBKQEjDBMBKQFLDQYAKQEg
DAYAQQFrCQYAaQFuCxcBQQFKCx8BMQEQDBMBQQHBACoBQQEgCzIByQG+BjgBQQE2DT8B0QEHDUUB
kQFaBUwB6QESBVEBSQFrCQYA8QEGCVYB8QE1DFYBwQBuC1sBwQCkAYYAwQBaBXsA+QF8AWgBNAD9
DH8BPAD+BEoAPAAIBZYBPABrCQYAKQCrAEMELgALALwCLgATAMUCLgAbAOQCLgAjAO0CLgArABYD
LgAzABYDLgA7AO0CLgBDABwDLgBLABYDLgBTADMDLgBbABYDLgBjADkDLgBrAGMDLgBzAHADQACL
ALoDQACDAL8DQwB7AMgDQwCDAL8DSQCrAFQEYwB7AMgDYwCDAL8DaQCrAGgEgACLALoDgwCTALoD
gwCbALoDgwB7AMgDiQCrAHUEoACLALoDqQCDAOQCwACLALoDwwCzALoDwwBTABYDyQCDAOQC4ACL
ALoD4wBTABYDAwFTABYDIwFTABYDQwFTABYDYwFTABYDowGDAL8DowGjAOEDwwGDAL8DwwFbABYD
KQS7ALoD4AZTABYDAAdTABYDwAeDAL8DwAeLALoD4AeDAL8D4AeLALoDAAiDAL8DAAiLALoDIAiD
AL8DIAiLALoDQAiLALoDYAiLALoDgAiLALoDgAiDAL8DoAiLALoDwAiLALoDwAiDAL8DbACKAMkA
DwElAWABcwEEAAEABQAFAAcABwAIABMACwAfAAwAIQAOACIAAAAbCX4CAAAmB4MCAAABCYgCAADv
CY0CAACjCJICAABDApcCAADKAJwCAAAJBqACAADzB6QCAAA5BqACAADXC6QCAACFBqACAACxAJwC
AAAEBqACAABUAZwCAAAXBqACAABJDKgCAACXBqACAADXC64CAACFBqACAABkAagCAAAqBqACAAC2
DKgCAACpBqACAACECaQCAABOBqACAACxAJwCAAAEBqACAACyC6ACAABgBqACAADYAaQCAACCDKQC
AAAbBbICAACPAbcCAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAR
AA8AAgASABEAAgATABMAAgAUABUAAgAVABcAAgAWABkAAgAXABsAAgAYAB0AAQAZAB8AAQAaACEA
AQAbACMAAQAcACUAAQAgACcAAQAhACkAAQAiACsAAQAjAC0AAQAkAC8AAQAlADEAAQAmADMAAQAn
ADUAAQAoADcAAQApADkAAQAqADsAAQArAD0AAgA5AD8AAgA6AEEAAgA9AEMAAgBFAEUALgA1ADwA
QwBlAXgBhwGOAQSAAAABAAAAAAAAAAAAAAAAAG0AAAAEAAAAAAAAAAAAAACcAQ4BAAAAAAQAAAAA
AAAAAAAAAJwB0AYAAAAACgAAAAAAAAAAAAAApQEXAQAAAAAOAAAAAAAAAAAAAACuAYsMAAAAAA4A
AAAAAAAAAAAAAK4BvAwAAAAADgAAAAAAAAAAAAAArgHMBwAAAAAAAAAAAQAAANkKAAANAAQADgAE
AAAAEAAcANkAAAAQAIUA2QAAAAAAhwDZALEAbgGxAJEBAAAASURUU1ZhcmlhYmxlMTAwAElEVFNW
YXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAQ29udGV4dFZhbHVlYDEAVGhyZWFk
U2FmZU9iamVjdFByb3ZpZGVyYDEAR2V0SW50MzIAU0NfMTUyNGVlZWM5MDIzNDVhZmIzYWYzNDIx
OGJkNzJjYjgAPE1vZHVsZT4AZ2V0X0lEAGdldF9CYXRjaElEAHNldF9CYXRjaElEAElucHV0SUQA
R2V0T3V0cHV0SUQATQBTeXN0ZW0uSU8AVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5z
dGFuY2VfXwBQcm9qZWN0RGF0YQBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMASW5wdXRz
RmluaXNoZWQATWFya091dHB1dHNGaW5pc2hlZABzZXRfRWxhcHNlZABNaWQAc2V0X0VuZABSb3Vu
ZABDb21wYXJlTWV0aG9kAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBH
ZXRIYXNoQ29kZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfQmF0Y2hO
YW1lAElucHV0TmFtZQBEYXRlVGltZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBHZXRUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAEFwcGxp
Y2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBQZWlsRGF0ZQBUb0RhdGUA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBH
ZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1
bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0
cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNT
SVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAEJ5dGUAbV9WYWx1
ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAEdldFN0cmluZwBN
YXRoAFBlZWsATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNDXzE1MjRlZWVjOTAyMzQ1YWZiM2FmMzQyMThiZDcyY2I4LmRsbABn
ZXRfSURfSXNOdWxsAGdldF9CYXRjaElEX0lzTnVsbABzZXRfQmF0Y2hJRF9Jc051bGwAc2V0X0Vs
YXBzZWRfSXNOdWxsAHNldF9FbmRfSXNOdWxsAGdldF9UaW1lU3RhbXBfSXNOdWxsAHNldF9HZW5F
cnJfSXNOdWxsAHNldF9TdWNjZXNzX0lzTnVsbABnZXRfU3RhdHVzX0lzTnVsbABzZXRfU3RhdHVz
X0lzTnVsbABzZXRfTW9tZW50X0lzTnVsbABzZXRfU3RhcnRfSXNOdWxsAFNldE51bGwAZ2V0X0l0
ZW0Ac2V0X0l0ZW0AU3lzdGVtAEJvb2xlYW4AVGltZVNwYW4ATGVuAFN5c3RlbS5Db21wb25lbnRN
b2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBvcF9TdWJ0cmFjdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24A
Q3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNSdW50aW1lV3JhcABnZXRfVGltZVN0YW1wAFN0cmVhbVJlYWRlcgBtX0FwcE9iamVjdFByb3Zp
ZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2Vi
U2VydmljZXNPYmplY3RQcm92aWRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAQmF0Y2hC
dWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9JbnRlZ2VyAFN5c3RlbS5D
b2RlRG9tLkNvbXBpbGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBn
ZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAENyZWF0ZVByb2pl
Y3RFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9y
AC5jY3RvcgBNb25pdG9yAHNldF9HZW5FcnIAT3V0cHV0SURzAEdldE1zAFN5c3RlbS5EaWFnbm9z
dGljcwBnZXRfVG90YWxTZWNvbmRzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9X
ZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlv
blNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU0NfMTUyNGVlZWM5MDIzNDVhZmIzYWYzNDIxOGJkNzJjYjguTXkuUmVz
b3VyY2VzAE15UmVzb3VyY2VzAFNDXzE1MjRlZWVjOTAyMzQ1YWZiM2FmMzQyMThiZDcyY2I4LlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTdHJpbmdzAE15U2V0dGluZ3MARXF1
YWxzAENvbnZlcnNpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMAUnVudGltZUhlbHBlcnMAT3BlcmF0
b3JzAHNldF9TdWNjZXNzAEZpbmlzaE91dHB1dHMAZ2V0X1N0YXR1cwBzZXRfU3RhdHVzAENyZWF0
ZU5ld091dHB1dFJvd3MAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QAZ2V0X0VuZE9mUm93
c2V0AFNldEVuZE9mUm93c2V0AFNwbGl0AEV4aXQAc2V0X01vbWVudABQcmV2TW9tZW50AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfRXhlY1Jvb3QATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABzZXRfU3RhcnQAUHJvY1N0YXJ0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAbV9D
b250ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0
X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBT
Q18xNTI0ZWVlYzkwMjM0NWFmYjNhZjM0MjE4YmQ3MmNiOC5NeQBnZXRfQXNzZW1ibHkAAAAAADFN
AHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAG1wAMAAzAC0A
RgBpAG4AaQBzAGgAZQBkAFwAAQ8uAEcAZQBuAEUAcgByAAAFDQAKAAADLgAAC1MAdABhAHIAdAAA
B0UAbgBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABi
AGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwA
dQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBw
AHUAdAAgADAAAAtCAGEAdABjAGgAABNCAGEAdABjAGgATgBhAG0AZQAAEUUAeABlAGMAUgBvAG8A
dAAAQqUOd0ZpS06Vn5hYGVLfQAAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFF
ByAEAQ4ODg4GFRI4ARIMBhUSOAESCAYVEjgBEmUGFRI4ARI0BCAAEwAHAAESbRGArQUgABKAsQcg
AgEOEoCxBiADAQgICAYHAg4SgI0HAAQODg4ODgMgAA4GAAMODg4OAyAACAgHBQgICB0ODgMAAAEK
AAQdDg4OCBGAwQYAAwgODgIGAAERgIUOBAABCA4FAAIODggGAAESgM0IBgABARKAzQYHAgoRgJEL
AAIRgJERgIURgIUDIAANBAABDQ0LIAMBEoCZHQgSgJ0EBhKAmQMGHQgEIAEICAQgAQIIBCABDggF
IAIBCBwDBwECAyAAAgcgAgIOEYDhBSABHQgIBAcCCAgHAAIIEoCdDgUgABKA5QYgARKA6RwFAAAS
gO0GIAEcEoDxBAABDhwEAAEcHAQAAQEcBCABAhwEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRI4
ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCA
zJEHBhUSOAESDAcGFRI4ARIIBwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9BAYRgIUCBgoCBg4DBhIo
AwYSLAMGEiACBggEBhKAoQMGEjACBhwEAAASDAQAABIIBAAAEmUEAAASNAQAABJ5BAAAEn0FAAEB
En0FIAEBEhwHIAIKEYCFCAYgAQERgIUEIAEBBQsgBAEIDhKAmRKAnQ0gBAEIHQgdEoCZEoCdBiAB
ARKAoQQAABIwBCAAEm0HEAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEjQECAASeQQI
ABJ9AygACAMoAAIDKAAOBSgAEYCFAygABQQIABIwBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzE1MjRlZWVjOTAyMzQ1YWZiM2FmMzQy
MThiZDcyY2I4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAAUBAAEAACkBACRlZTQzNTZk
Ny1jY2VlLTRiNWItODhiZC1mMTM1MDI4YmIzNjkAAAwBAAcxLjAuMC4wAABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNQQBAAAACAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2Vi
LlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFu
Y2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGlj
YXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADM
SwAAAAAAAAAAAADmSwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2EsAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAxADUA
MgA0AGUAZQBlAGMAOQAwADIAMwA0ADUAYQBmAGIAMwBhAGYAMwA0ADIAMQA4AGIAZAA3ADIAYwBi
ADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADEANQAyADQAZQBlAGUAYwA5ADAAMgAz
ADQANQBhAGYAYgAzAGEAZgAzADQAMgAxADgAYgBkADcAMgBjAGIAOAAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMQA1ADIANABlAGUAZQBj
ADkAMAAyADMANAA1AGEAZgBiADMAYQBmADMANAAyADEAOABiAGQANwAyAGMAYgA4AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADEANQAyADQAZQBlAGUAYwA5
ADAAMgAzADQANQBhAGYAYgAzAGEAZgAzADQAMgAxADgAYgBkADcAMgBjAGIAOAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA+DsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_1524eeec902345afb3af34218bd72cb8</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::BatchName,$Package::ExecRoot</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">E3</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[TimeStamp]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              name="Moment" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch]"
                          hasSideEffects="true"
                          name="Batch">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[End]"
                              name="End" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              name="Start" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[GenErr]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[GenErr]"
                              name="GenErr" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Success]"
                              dataType="bool"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Success]"
                              name="Success" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Doc Logging?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Doc Logging?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Nee]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Nee"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]} == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ID == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Error Status"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Error Status"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ErrorCodes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ErrorCodes]) [refTable]
where [refTable].[Name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Inserted" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="ErrCode Description"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Insert"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              name="Error Status ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Not Found]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Not Found"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Filter Onzin"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Filter Onzin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Correct Version]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Correct Version"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]} == "\tPlease verify that you are using the correct version of SSEUNZIP."</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">Line == "\tPlease verify that you are using the correct version of SSEUNZIP."</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Zinvol]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Zinvol"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Known Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Known Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[No]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL([Error Status ID])</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="2048"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="2048"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Doc ID]"
                              name="Doc ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 4]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 4"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 5]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 5"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\ProcessDetail"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ProcessDetail"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessDetails]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="ui1"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              dataType="dbTimeStamp"
                              name="Moment" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[FileSize_KB]"
                              dataType="i4"
                              name="FileSize_KB" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              dataType="i4"
                              name="Elapsed" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc/Klant]"
                              dataType="i4"
                              name="Doc/Klant" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Read Err"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Err"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Read Err.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Err]"
                          connectionManagerRefId="Package.ConnectionManagers[Err]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              length="4000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              name="Line"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="Line" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Read Log"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Log"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Read Log.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Log]"
                          connectionManagerRefId="Package.ConnectionManagers[Log]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              name="File"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              name="TimeStamp"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TimeStamp" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set ErrCode Unexpected"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">8</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">8</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Error Code Name"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="2048"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              name="ErrCode Description"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,255,1252)(#{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]} == "Unzipped" ? "No Error" : #{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]} == "SSEUNZIP: Unable to open '" + #{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]} + "'." ? "SSEUNZIP: Unable to open '@SafFile'." : #{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,255,1252)(Status == "Unzipped" ? "No Error" : ErrMsg == "SSEUNZIP: Unable to open '" + File + "'." ? "SSEUNZIP: Unable to open '@SafFile'." : ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort ErrMsg"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="2048"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="2048"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Sort Log"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Log"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Step"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Step"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ProcessSteps]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ProcessSteps]) [refTable]
where [refTable].[Name] = ? and [refTable].[Main] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Sort" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Main" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMainStep" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]};#{Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Step.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input].Columns[Main Step]"
                              cachedDataType="ui1"
                              cachedName="Main Step"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Main</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              name="Step ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Unexpected Errors"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="ErrCode Description"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Error" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]"
                              name="File" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              name="Step ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              name="Error Status ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              name="Moment" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Update Batch"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Batch"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Batches] SET
  Status = ?
, ProcStart = ?
, ProcEnd = ?
, Error = ?
, Success = ?
WHERE ID = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[GenErr]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="GenErr"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[GenErr]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Success]"
                              cachedDataType="bool"
                              cachedName="Success"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Success]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="ui1"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="dbTimeStamp"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              dataType="dbTimeStamp"
                              name="Param_2">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Param_3">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              dataType="bool"
                              name="Param_4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              dataType="i4"
                              name="Param_5">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Batch]"
                      endId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]"
                      name="Batch"
                      startId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output1]"
                      endId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output2]"
                      endId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[ErrMsg]"
                      endId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input]"
                      name="ErrMsg"
                      startId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output1]"
                      endId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Insert]"
                      endId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]"
                      name="Insert"
                      startId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Ja1]"
                      endId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Ja]"
                      endId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Lookup Match Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input]"
                      name="Lookup Match Output"
                      startId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Merge Join Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 1]"
                      endId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 2]"
                      endId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 2"
                      startId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[No]"
                      endId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Output 0]"
                      endId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]"
                      name="Output 0"
                      startId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Sort Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Sort Output1]"
                      endId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Union All Output 1]"
                      endId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input]"
                      name="Union All Output 1"
                      startId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Zinvol]"
                      endId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0]"
                      name="Zinvol"
                      startId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Zinvol]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\XML"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{d6c9e348-71e9-4d19-a19c-8219b8e075a7}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="XML"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Batch Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Batch Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Ja]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]} == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">[Doc ID] == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[No]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Concat"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Concat"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cb1f493a-4194-4276-8679-f040bb536b21}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_f61f4f10aed14e22bfec206935f3157a</RootNamespace>
    <AssemblyName>SC_f61f4f10aed14e22bfec206935f3157a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e14602c5-72ce-4833-adba-28a9af30651c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public ErrMsgBuffer As ErrMsgBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If ErrMsgBuffer IsNot Nothing Then
            ErrMsgBuffer.SetEndOfRowset
            ErrMsgBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "ErrMsg") Then
                ErrMsgBuffer = New ErrMsgBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ErrMsg As String = vbNullString

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim ID As Integer
        If Left(Row.Line, 10) = "DocConvID=" Then
            ID = CInt(Split(Row.Line, "=")(1))
            ErrMsgBuffer.AddRow()
            ErrMsgBuffer.DocID = CInt(IIf(ID < 0, 0, ID))
            ErrMsgBuffer.ErrMsg = Mid(ErrMsg, vbNewLine.Length + 1)
            ErrMsgBuffer.Step = "End"

            ErrMsg = vbNullString
        Else
            ErrMsg = ErrMsg & vbNewLine & Row.Line
        End If
    End Sub
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class ErrMsgBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [ErrMsg]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [ErrMsg_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [DocID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [DocID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Step]() As String
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Step_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f61f4f10aed14e22bfec206935f3157a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f61f4f10aed14e22bfec206935f3157a</msb:DisplayName>
    <msb:ProjectId>{DA5B2E82-84EF-47F0-8BC2-A8DA6E821CB0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f61f4f10aed14e22bfec206935f3157a.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABf0/FwAAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAmkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
QQAAAAAAAEgAAAACAAUA9CQAAJwbAAABAAAAAAAAAJBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqOgIoHQAABgIUfQcAAAQqEzAEAL4AAAABAAARA28PAAAG
HwooJgAACnIzAABwFignAAAKOoQAAAADbw8AAAZySQAAcBUWKCgAAAoXmigpAAAKCgJ7CgAABG8a
AAAGAnsKAAAEBhb+BBaMLgAAAQaMLgAAASgqAAAKKCsAAApvFgAABgJ7CgAABAJ7BwAABHJNAABw
KCwAAAoX1igtAAAKbxQAAAYCewoAAARyUwAAcG8YAAAGAhR9BwAABCoCAnsHAAAEck0AAHADbw8A
AAYoLgAACn0HAAAEKioCAwQFKC8AAAoqUgJ7MAAACgJ7MQAAChaUbzIAAAoqIgIWKDMAAAoqABMw
AQAJAAAAAgAAEQIoNAAACgoGKgAAABMwAQAJAAAAAgAAEQIoNQAACgoGKiYCFgMoNgAACipaAywI
AhYoNwAACipyWwAAcHM4AAAKejoCFwOMLgAAASg2AAAKKloDLAgCFyg3AAAKKnJbAABwczgAAAp6
JgIYAyg2AAAKKloDLAgCGCg3AAAKKnJbAABwczgAAAp6HgIoOQAACioeAig6AAAKKgAAABMwAQAJ
AAAAAgAAEQIoNQAACgoGKpoCKDsAAAoCAnMlAAAGfQgAAAQCAnMmAAAGfQkAAAQCFn0LAAAEKhMw
BABPAAAAAAAAAARy+AAAcBpvPAAACiwVAgUCAyg9AAAKDgRzDgAABm8jAAAGBW8+AAAKLCMCAnsL
AAAEF9Z9CwAABAJ7CwAABBczDAJvHwAABgIoIAAABioGKm4CewoAAAQsEgJ7CgAABG8bAAAGAhR9
CgAABCoAAAATMAUAQQAAAAMAABEDF9oKFgsrLgQHlA4EcggBAHAoPwAACjMZAgUHmgIEB5QoPQAA
Cg4EcxMAAAZ9CgAABAcX1gsHBjHOAm8iAAAGKkorBwIDbyQAAAYDbxEAAAYt8So6AigiAAAKAgN9
DAAABCo6AigiAAAKAgN9DQAABCpCcyIAAAooQAAACoAPAAAEKh4CKEEAAAoqABswAQA/AAAAAAAA
AH4OAAAELTJ+DwAABChAAAAKKEIAAAp+DgAABC0ccygAAAaADgAABN4Qfg8AAAQoQAAACihDAAAK
3H4OAAAEKgABEAAAAgAdAAwpABAAAAAANgIDKEAAAAooRAAACioeAihFAAAKKi7QDQAAAigjAAAK
Kh4CKEYAAAoqAAATMAEAFAAAAAQAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMw
AgAoAAAABQAAEQJ7SAAACm9JAAAKCgaMCAAAGy0SKAIAACsKAntIAAAKBm9KAAAKBipKAigiAAAK
AnNLAAAKfUgAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABgLAAAjfgAA
hAsAAPAKAAAjU3RyaW5ncwAAAAB0FgAAGAEAACNVUwCMFwAAEAAAACNHVUlEAAAAnBcAAAAEAAAj
QmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA1AAAADgAAABAAAAAyAAAAHQAAAEsA
AAA+AAAABQAAAAYAAAAQAAAAEQAAAAgAAAABAAAABQAAAAEAAAACAAAAAwAAAAIAAAAAAAwFAQAA
AAAABgBuA1gIBgAYBFgIBgBFApkHDwD+CAAABgCGAgsGBgBRAwsGBgD/AwsGBgCOAwsGBgCnAwsG
BgDNAgsGBgDCA4gFBgByAhIIBgDuARIIBgAZAwsGBgDoAnYECgARAikHCgDZAfYECgBZAvYEDgCx
AegHDgBfB6wHBgABA5kHDgCdAjEIDgC1Aq4ABgC+CYgFDgBFB+gHDgA2A64ABgCIAYgFDgABAMwE
CgD8AY8FBgAPB3gIBgBIBuoFEgDYA2QBBgC8BIgFEgD+BmQBFgDiBmQBEgBUBmQBEgAcCmQBCgDB
AdUFBgAoApkHBgAtAYgFBgDlCgsGDgA8Ca4ADgCFCTEIDgDrAK4ADgBWCTEIBgArAIgFDgD/Ba4A
BgCqBIgFBgAdBogFBgA3BogFBgB2CVgIBgCHB2UEBgBwB4gFAAAAADEAAAAAAAEAAQAAAAAAxwW6
Ck0AAQABAAAAAABdB7oKUQABAAIAAAEQAMUJugphAAEAAwAAAAAAugiJCGEABQAIAAEAAACsBYEA
JAAHAAwAAQAAANUGgQCJAAgADgABAAAA8QaBAIkACAATAAEAAAD+CYEAlQAIAB0AAQAAAGIJgQBh
AAwAJQABAAAADQmBAGEADQAmAAABEABECYEAmQAOACcABQEAANoHAABhABAAKgAFAQAAEAAAAGEA
EAAxADEAngZPATEAdQZXATEAiQZfATEAtwZnAREAaAdvAREApQFzAQEAtQR3AQYAYgl6AQYADQl+
AQYA8QaCAQEAxACGAQEADAqJAQEADAqJAREANgSOAREAuAmSASEAigoXAVAgAAAAAAYYegcGAAEA
WCAAAAAABhh6BwYAAQBgIAAAAAARGIAHlQEBAIogAAAAABMIUAeZAQEAliAAAAAAEwi3BZ4BAQCi
IAAAAAATCEEHowEBAK4gAAAAABMIygeoAQEAuiAAAAAAAxh6BwYAAQDCIAAAAAAWCAsHrQEBAO4g
AAAAABYIjQGyAQEA9SAAAAAAFgiZAbcBAQD9IAAAAAAGGHoHBgACAAwhAAAAAMYCmwq9AQIA1iEA
AAAABhh6B50AAwDhIQAAAAAGCFsB9AAGAPYhAAAAAAYIRQXAAAYAACIAAAAAhgCyCsAABgAYIgAA
AACGAOIJwAAGANYhAAAAAAYYegedAAYALSIAAAAABgixBBAACQA3IgAAAAAGCFUFFQAKAE4iAAAA
AAYIOgABAAsAXSIAAAAABgg0BRUADAB0IgAAAAAGCGwGEAANAH4iAAAAAAYIZwUVAA4AlSIAAAAA
hgCUCgYADwCdIgAAAACGAN8JBgAPAKgiAAAAAIYA4gnAAA8AvSIAAAAABhh6BwYADwDkIgAAAADG
AnEKwwEPAD8jAAAAAEYDjwkGABMAQSMAAAAAAQDTAAYAEwBgIwAAAADGAn4KzwETAD8jAAAAAEYD
nQkGABcArSMAAAAARgNqCr0BFwA/IwAAAABGA5sKvQEYAMAjAAAAAAYYegfdARkAzyMAAAAABhh6
B90BGgDeIwAAAAARGIAHlQEbAO8jAAAAAAYYegcGABsA+CMAAAAAFgg+BOQBGwBUJAAAAADGAk8J
7wAbAGIkAAAAAMYCIQGSABwAaiQAAAAAgwCFAekBHAB2JAAAAADGAp4E9AAcAIAkAAAAABEAbgDu
ARwAoCQAAAAAAQBaAPYBHQC6IAAAAAAGGHoHBgAeAKwkAAAAAAMICAFKAB4A4CQAAAAABhh6BwYA
HgAAAAEAWwQAAAEAtgoAAAEABAcAAAIAFwkAAAMAYgYAAAEABAcAAAIAFwkAAAMAYgYAAAEAWwQA
AAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEARAAAAAIAUQEAAAMABAcAAAQAYgYAAAEA
lQkAAAIAjwcAAAMAbgkAAAQAYgYAAAEABAcAAAEAtgoAAAEAIgoAAAEAIgoAAAEAUgYAAAEAGAEA
AAEAGAEJAHoHAQARAHoHBgAZAHoHCgApAHoHEAAxAHoHEAA5AHoHEABBAHoHEABJAHoHEABRAHoH
EABZAHoHFQBhAHoHFQBpAHoHEABxAHoHEAB5AHoHEACBAHoHGgCRAHoHIACpAHoHBgCxAHoHBgC5
AHoHBgDRAHoHJgDpAHoHEAABAXoHBgA5AXoHBgCZAHoHBgChAHoHBgAMAHoHBgAUAHoHBgAcAHoH
BgAkAHoHBgAMAAgBSgAUAAgBSgAcAAgBSgAkAAgBSgDBAHoHBgDZAD8BTwDZAOEKVwDxAHoHXQBR
Ae4JaQBZAZAEbwBRAfMJdgBpAR8HgQB5AWEEhgBpAR8HjQCBAcEEkgBRAecAaQCBAbEJlgARAXoH
nQARAQQHqQARARcJrgAZAacEsgARAXAFtwARAbIKwAARAeIJwAARAX8FxAARAXcFAQCJAXoHEAAR
AZQKBgARAd8JBgApAXoHBgCBAU8JygApASsJ0gAZAc8JwAApAUwA3QCZAVIE5QAxAXoHBgChAUoH
6gChAfkJ6gDBAE8J7wDBACEBkgDBAJ4E9ACpAfkAAAE0AIoKFwE8AD4ESgA8AEgELgE8AHoHBgAp
AKsAuQMuAAsAMgIuABMAOwIuABsAWgIuACMAYwIuACsAjAIuADMAjAIuADsAYwIuAEMAkgIuAEsA
jAIuAFMAqQIuAFsAjAIuAGMArwIuAGsA2QIuAHMA5gJAAIsAMANAAIMANQNDAHsAPgNDAIMANQNJ
AKsAygNjAHsAPgNjAIMANQNpAKsA3gOAAIsAMAODAJMAMAODAJsAMAODAHsAPgOJAKsA6wOgAIsA
MAOpAIMAWgLAAIsAMAPDALMAMAPDAFMAjALJAIMAWgLgAIsAMAPjAFMAjAIDAVMAjAIjAVMAjAJD
AVMAjAJjAVMAjAKjAYMANQOjAaMAVwPDAYMANQPDAVsAjALpAbsAMAOgBFMAjALABFMAjAJABYMA
NQNABYsAMANgBYMANQNgBYsAMAOABYMANQOABYsAMAOgBYMANQOgBYsAMAPABYsAMAPgBYsAMAMA
BosAMAMABoMANQMgBosAMANABosAMANABoMANQNlALwA2AD4AAsBBAABAAUABQAHAAcACAAJAAwA
DwAOABAAAABfB/4BAADJBQMCAABFBwgCAADcBw0CAAAPBxICAACpARcCAABfARwCAABJBSACAAC1
BBwCAABZBSACAAA+ACQCAAA4BSACAABwBhwCAABrBSACAABbBCgCAAAMAS0CAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAPAA8AAgAQABEAAQAUABMAAQAVABUAAQAW
ABcAAQAXABkAAQAYABsAAQAZAB0AAgApAB8AAgAxACEALgA1ADwAQwD9ABABHwEmAQSAAAABAAAA
AAAAAAAAAAAAAIEAAAAEAAAAAAAAAAAAAAA0AaUAAAAAAAQAAAAAAAAAAAAAADQBiAUAAAAACgAA
AAAAAAAAAAAAPQGuAAAAAAAOAAAAAAAAAAAAAABGASwKAAAAAA4AAAAAAAAAAAAAAEYBSQoAAAAA
AAAAAAEAAADGCAAADQAEAA4ABAAAABAAHABYAAAAEABdAFgAAAAAAF8AWACPAAYBjwApAQAAAENv
bnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEludDMyADxNb2R1bGU+AHNl
dF9Eb2NJRABJbnB1dElEAEdldE91dHB1dElEAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVf
X0luc3RhbmNlX18AU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAbXNjb3JsaWIA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQA
TWlkAENvbXBhcmVNZXRob2QAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNl
AEdldEhhc2hDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFt
ZQBnZXRfTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3
b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21W
aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5
RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlh
bnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBJSWYAU3lzdGVtLlRocmVhZGluZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAENvbXBhcmVTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5n
AHNldF9FcnJNc2cATWF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mNjFmNGYxMGFlZDE0ZTIyYmZl
YzIwNjkzNWYzMTU3YS5kbGwAc2V0X0RvY0lEX0lzTnVsbABnZXRfTGluZV9Jc051bGwAc2V0X0Vy
ck1zZ19Jc051bGwAc2V0X1N0ZXBfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBs
aWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBJbnRlcmFj
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0Nv
bXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAc2V0X1N0ZXAAbV9B
cHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAEVyck1zZ0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0lu
dGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAT3V0cHV0
SURzAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRf
V2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRp
b25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15LlJl
c291cmNlcwBNeVJlc291cmNlcwBTQ19mNjFmNGYxMGFlZDE0ZTIyYmZlYzIwNjkzNWYzMTU3YS5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJz
aW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAFJ1bnRpbWVIZWxwZXJzAE9wZXJhdG9ycwBGaW5pc2hP
dXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AExlZnQAU3BsaXQARXhpdABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lu
cHV0AFByaW1lT3V0cHV0AG1fQ29udGV4dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15AGdldF9Bc3NlbWJs
eQAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABVE
AG8AYwBDAG8AbgB2AEkARAA9AAADPQAABQ0ACgAAB0UAbgBkAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAA1FAHIAcgBNAHMAZwAAAACf
Z+O6eBJ8Qb9Dagl/NdRgAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQB
Dg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcAARJtEYChBSAAEoClByACAQ4S
gKUDBwEIBQACDg4IBgADCA4OAgoABB0ODg4IEYCxBAABCA4GAAMcAhwcBAABCBwDIAAIBgADDg4O
DgsgAwESgI0dCBKAkQQGEoCNAwYdCAQgAQ4IBCABAggDBwECAyAAAgUgAgEIHAcgAgIOEYDJBSAB
HQgIBAcCCAgHAAIIEoCRDgQAARwcBAABARwEIAECHAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4ABAcB
EwAGFRI4ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoI
iYRdzYCAzJEHBhUSOAESDAcGFRI4ARIIBwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9AgYOAwYSKAMG
EiwDBhIgAgYIBAYSgJUDBhIwAgYcAwAAAQQAABIMBAAAEggEAAASZQQAABI0BAAAEnkEAAASfQUA
AQESfQUgAQESHAsgBAEIDhKAjRKAkQ0gBAEIHQgdEoCNEoCRBiABARKAlQQAABIwBCAAEm0HEAEB
HgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEjQECAASeQQIABJ9AygADgMoAAIDKAAIBAgA
EjAEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxOQAABQEAAQAAKQEAJGUxNDYwMmM1LTcyY2UtNDgzMy1hZGJhLTI4YTlhZjMwNjUx
YwAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAIAQABAAAAAAAYAQAKTXlUZW1w
bGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRw
Q2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQ
AQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5X
ZWJTZXJ2aWNlcwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwQQAAAAAAAAAAAACKQQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAfEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGYANgAxAGYANABmADEAMABhAGUAZAAxADQAZQAyADIAYgBmAGUAYwAyADAANgA5ADMANQBmADMA
MQA1ADcAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZgA2ADEAZgA0AGYAMQAwAGEA
ZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADYAMQBmADQA
ZgAxADAAYQBlAGQAMQA0AGUAMgAyAGIAZgBlAGMAMgAwADYAOQAzADUAZgAzADEANQA3AGEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZgA2ADEAZgA0AGYA
MQAwAGEAZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACcMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f61f4f10aed14e22bfec206935f3157a</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">EB</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg]"
                          hasSideEffects="true"
                          name="ErrMsg">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              name="ErrMsg" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              name="Doc ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]"
                              name="Step" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              name="Batch ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)[SUBSTRING](@[User::BatchName],2,99)</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)SUBSTRING(@[User::BatchName],2,99)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              dataType="ui1"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              name="Main Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::MainStep]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::MainStep]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              dataType="bool"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              name="Success"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Determine Elapse"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Determine Elapse"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d0ae6900-0a28-42af-b510-37615fc60ce1")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public BatchBuffer As BatchBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If BatchBuffer IsNot Nothing Then
            BatchBuffer.SetEndOfRowset
            BatchBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Batch") Then
                BatchBuffer = New BatchBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

    Public ReadOnly Property [BatchName]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("BatchName").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

    Public ReadOnly Property [ExecRoot]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("ExecRoot").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ReadOnly PeilDate As New DateTime(2019, 5, 1)
    Private PrevMoment As Long = 0
    Private ProcStart As Date, LicLoaded As Integer, LicSet As Integer

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim V() As String
        '    ComponentMetaData.FireWarning(1, Row.ID.ToString, Row.TimeStamp & ": " & PrevMoment.ToString, "", 0)
        V = Split(Row.TimeStamp, ".")

        If Row.ID <= 0 Then
            Select Case Row.Step
                Case "Start"
                    ProcStart = CDate(V(0))
                Case "License loaded"
                    LicLoaded = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "License set", "No license set"
                    LicSet = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "End"
                    BatchBuffer.AddRow()
                    BatchBuffer.BatchID = Row.BatchID
                    BatchBuffer.Start = ProcStart
                    BatchBuffer.End = CDate(V(0))
                    BatchBuffer.Status = 4
                    BatchBuffer.LicLoaded = LicLoaded
                    BatchBuffer.LicSet = LicSet
                    BatchBuffer.RefKey = 0
            End Select
        Else
            Row.Moment = CDate(V(0))
            Row.Elapsed = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
        End If
        PrevMoment = GetMs(CDate(V(0)), CInt(V(1)))
    End Sub

    Private Function GetMs(D As Date, M As Int32) As Long
        GetMs = CLng((D - PeilDate).TotalSeconds * 1000 + M)
    End Function
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [TimeStamp]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [TimeStamp_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [ID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public ReadOnly Property [Step]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(2))
        End Get
    End Property
    Public ReadOnly Property [Step_IsNull] As Boolean
        Get
            Return IsNull(2)
        End Get
    End Property

    Public ReadOnly Property [BatchID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(3))
        End Get
    End Property
    Public ReadOnly Property [BatchID_IsNull] As Boolean
        Get
            Return IsNull(3)
        End Get
    End Property

    Public WriteOnly Property [Moment]() As DateTime
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Moment_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Elapsed]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Elapsed_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class BatchBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Start]() As DateTime
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Start_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [End]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [End_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Status]() As Byte
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Status_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [RefKey]() As Int32
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [RefKey_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [BatchID]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [BatchID_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicSet]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [LicSet_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicLoaded]() As Int32
        Set
            Me(6) = Value
        End Set
    End Property
    Public WriteOnly Property [LicLoaded_IsNull] As Boolean
        Set
            If (value)
                SetNull(6)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:DisplayName>
    <msb:ProjectId>{3876397F-C5D9-48ED-B6B2-BEE0476B2312}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ac4d6e4-cd2d-40be-a3d4-f10c3f51b1e0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</RootNamespace>
    <AssemblyName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPb1/FwAAAAAAAAAAOAAIiALAVAAACwAAAAIAAAAAAAANkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAORJAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
SgAAAAAAAEgAAAACAAUAqCcAAIQhAAABAAAAAAAAACxJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqhgIoMAAABgIg4wcAABsXcyYAAAp9BwAABAIWan0IAAAE
KgATMAUAoQEAAAEAABEDbxAAAAZyMwAAcBUWKCcAAAoKA28SAAAGFj0zAQAAA28UAAAGCwdyNwAA
cBYoKAAACiw9B3JDAABwFigoAAAKLEIHcmEAAHAWKCgAAAosXQdyeQAAcBYoKAAACixPB3KXAABw
FigoAAAKLGo4EwEAAAIGFpooKQAACn0JAAAEOAABAAACAgYWmigpAAAKBheaKCoAAAooDgAABgJ7
CAAABNq3fQoAAAQ41wAAAAICBhaaKCkAAAoGF5ooKgAACigOAAAGAnsIAAAE2rd9CwAABDiuAAAA
AnsOAAAEby0AAAYCew4AAAQDbxYAAAZvJwAABgJ7DgAABAJ7CQAABG8fAAAGAnsOAAAEBhaaKCkA
AApvIQAABgJ7DgAABBpvIwAABgJ7DgAABAJ7CgAABG8rAAAGAnsOAAAEAnsLAAAEbykAAAYCew4A
AAQWbyUAAAYrMgMGFpooKQAACm8YAAAGAwIGFpooKQAACgYXmigqAAAKKA4AAAYCewgAAATat28a
AAAGAgIGFpooKQAACgYXmigqAAAKKA4AAAZ9CAAABCoAAAATMAIAKgAAAAIAABEDAnsHAAAEKCsA
AAoLEgEoLAAACiMAAAAAAECPQFoEbFgoLQAACrkKBioqAgMEBSguAAAKKlICey8AAAoCezAAAAoW
lG8xAAAKKiICFigyAAAKKlICey8AAAoCezAAAAoXlG8zAAAKKiICFygyAAAKKlICey8AAAoCezAA
AAoYlG8xAAAKKiICGCgyAAAKKlICey8AAAoCezAAAAoZlG8zAAAKKiICGSgyAAAKKjoCGgOMIQAA
ASg0AAAKKloDLAgCGig1AAAKKnKfAABwczYAAAp6OgIbA4wxAAABKDQAAAoqWgMsCAIbKDUAAAoq
cp8AAHBzNgAACnoAAAATMAEACQAAAAMAABECKDcAAAoKBioAAAATMAEACQAAAAMAABECKDgAAAoK
Bio6AhYDjCEAAAEoNAAACipaAywIAhYoNQAACipynwAAcHM2AAAKejoCFwOMIQAAASg0AAAKKloD
LAgCFyg1AAAKKnKfAABwczYAAAp6OgIYA4wyAAABKDQAAAoqWgMsCAIYKDUAAAoqcp8AAHBzNgAA
Cno6AhkDjDEAAAEoNAAACipaAywIAhkoNQAACipynwAAcHM2AAAKejoCGgOMMQAAASg0AAAKKloD
LAgCGig1AAAKKnKfAABwczYAAAp6WgMsCAIbKDUAAAoqcp8AAHBzNgAACno6AhwDjDEAAAEoNAAA
CipaAywIAhwoNQAACipynwAAcHM2AAAKeh4CKDkAAAoqHgIoOgAACioTMAEACQAAAAMAABECKDgA
AAoKBiqaAig7AAAKAgJzOAAABn0MAAAEAgJzOQAABn0NAAAEAhZ9DwAABCoTMAQATwAAAAAAAAAE
cjwBAHAabzwAAAosFQIFAgMoPQAACg4Ecw8AAAZvNgAABgVvPgAACiwjAgJ7DwAABBfWfQ8AAAQC
ew8AAAQXMwwCbzIAAAYCKDMAAAYqBipuAnsOAAAELBICew4AAARvLgAABgIUfQ4AAAQqAAAAEzAF
AEEAAAAEAAARAxfaChYLKy4EB5QOBHJMAQBwKD8AAAozGQIFB5oCBAeUKD0AAAoOBHMeAAAGfQ4A
AAQHF9YLBwYxzgJvNQAABipKKwcCA283AAAGA28cAAAGLfEqOgIoIgAACgIDfRAAAAQqOgIoIgAA
CgIDfREAAAQqlgJ7EQAABG9AAAAKclgBAHBvQQAACihCAAAKb0MAAAooRAAACiqWAnsRAAAEb0AA
AApybAEAcG9BAAAKKEIAAApvQwAACihEAAAKKkJzIgAACihFAAAKgBMAAAQqHgIoRgAACioAGzAB
AD8AAAAAAAAAfhIAAAQtMn4TAAAEKEUAAAooRwAACn4SAAAELRxzPQAABoASAAAE3hB+EwAABChF
AAAKKEgAAArcfhIAAAQqAAEQAAACAB0ADCkAEAAAAAA2AgMoRQAACihJAAAKKh4CKEoAAAoqLtAN
AAACKCMAAAoqHgIoSwAACioAABMwAQAUAAAABQAAEQKMBQAAGy0IKAEAACsKKwICCgYqIgP+FQUA
ABsqAAAAEzACACgAAAAGAAARAntNAAAKb04AAAoKBowIAAAbLRIoAgAAKwoCe00AAAoGb08AAAoG
KkoCKCIAAAoCc1AAAAp9TQAACioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
+A0AACN+AABkDgAANA0AACNTdHJpbmdzAAAAAJgbAACAAQAAI1VTABgdAAAQAAAAI0dVSUQAAAAo
HQAAXAQAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQ8AAAD6ATMAFgAAAQAAADsAAAAOAAAAFAAAAEcA
AAArAAAAUAAAAD4AAAAGAAAABwAAACQAAAAlAAAACAAAAAEAAAAGAAAAAQAAAAIAAAADAAAAAgAA
AAAAjAUBAAAAAAAGAAMEAgoGAK0EAgoGANoCMgkPAKgKAAAGABsDRgcGAOYDRgcGAJQERgcGACME
RgcGADwERgcGAGIDRgcGAFcEtwYGAAcDvAkGAIMCvAkGAK4DRgcGAH0DDAUKAKYClAgKAG4CdgUK
AO4CdgUOADYCkgkOAPIIVgkGAJYDMgkOADID2wkOAEoDAQEGAHgLtwYOANgIkgkOAMsDAQEGAA0C
twYOADoATAUKAJECxwYGAHoIIgoGAIMHIgcSAG0E6QEGAOABtwYGAEcFtwYGAL4GtwYSAGkI6QEW
AE4I6QESAI8H6QESAPIL6QEKAEYCDQcGAL0CMgkGAKQBtwYGACsNRgcOAPIKAQEOAGIBAQEOADsL
2wkOAAwL2wkGAFgHtwYGAGcAtwYGAMsEtwYGAEAFtwYGAHIHtwYaABEArAgaAAEArAifAJ8MAAAa
ACIArAgGACwLAgoGABoJ+wQGAAMJtwYAAAAAkQAAAAAAAQABAAAAAAD/BvUMTQABAAEAAAAAAPAI
9QxRAAEAAgAAARAAfwv1DGEAAQADAAAAAABkCjMKYQAFAAgAAQAAAOQGbQAkAAcADAABAAAAQQht
AJEADAAPAAEAAABdCG0AkQAMAB4AAQAAANQLbQCdAAwAMAABAAAAGAttAGEAEAA4AAEAAADDCm0A
YQARADkAAAEQAPoKbQChABIAPAAFAQAAhAkAAGEAFAA/AAUBAABJAAAAYQAUAEYAMQAKCIYBMQDh
B44BMQD1B5YBMQAjCJ4BEQD7CKYBEQAqAqoBIQBeAq4BAQDJC7MBAQA2DK4BAQAbAbYBAQCNC7YB
BgAYC7kBBgDDCr0BBgBdCMEBAQAlAbYBAQDiC8UBAQDiC8UBEQDQBMoBEQByC84BIQCBDE4BUCAA
AAAABhgNCQYAAQBYIAAAAAAGGA0JBgABAGAgAAAAABEYEwnRAQEAiiAAAAAAEwjjCNUBAQCWIAAA
AAATCO8G2gEBAKIgAAAAABMI1AjfAQEAriAAAAAAEwh0CeQBAQC6IAAAAAADGA0JBgABAMIgAAAA
ABYIdgjpAQEA7iAAAAAAFggSAu4BAQD1IAAAAAAWCB4C8wEBAP0gAAAAAAYYDQkGAAIAICEAAAAA
xgLWDPkBAgDQIgAAAAABACwJ/wEDAAYjAAAAAAYYDQmsAAUAESMAAAAABgjTBysBCAAmIwAAAAAG
CC8G2gAIAC8jAAAAAAYImgAnAQgARCMAAAAABgi0BdoACABNIwAAAAAGCMoHKwEIAGIjAAAAAAYI
HwbaAAgAayMAAAAABgihACcBCACAIwAAAAAGCMIF2gAIAIkjAAAAAAYIvgsHAggAmCMAAAAABgho
BhUACQCvIwAAAAAGCEgBAQAKAL4jAAAAAAYI/QUVAAsA2CMAAAAAhgDtDNoADADwIwAAAACGAKcL
2gAMAAYjAAAAAAYYDQmsAAwABSQAAAAABggsDAcCDwAUJAAAAAAGCHoGFQAQACskAAAAAAYIVAEH
AhEAOiQAAAAABggQBhUAEgBRJAAAAAAGCFMLDgITAGAkAAAAAAYIRAYVABQAdyQAAAAABggcDQEA
FQCGJAAAAAAGCIsGFQAWAJ0kAAAAAAYIrQABABcArCQAAAAABgjVBRUAGACvIwAAAAAGCIkLAQAZ
AMMkAAAAAAYIVgYVABoA2iQAAAAABggXAQEAGwDpJAAAAAAGCOgFFQAcAAAlAAAAAIYAzwwGAB0A
CCUAAAAAhgCkCwYAHQAQJQAAAACGAKcL2gAdACUlAAAAAAYYDQkGAB0ATCUAAAAAxgJoDBMCHQCn
JQAAAABGA0ULBgAhAKklAAAAAAEANAEGACEAyCUAAAAAxgJ1DB8CIQCnJQAAAABGA14LBgAlABUm
AAAAAEYDYQz5ASUApyUAAAAARgPWDPkBJgAoJgAAAAAGGA0JLQInADcmAAAAAAYYDQktAigARiYA
AAAABgjIASsBKQBsJgAAAAAGCAIMKwEpAJImAAAAABEYEwnRASkAoyYAAAAABhgNCQYAKQCsJgAA
AAAWCNgENAIpAAgnAAAAAMYCBQsiASkAFicAAAAAxgKYAScBKgAeJwAAAACDAAoCOQIqAConAAAA
AMYCNAUrASoANCcAAAAAEQDlAD4CKgBUJwAAAAABANEARgIrALogAAAAAAYYDQkGACwAYCcAAAAA
Awh/AUoALACUJwAAAAAGGA0JBgAsAAAAAQD1BAAAAQDxDAAAAQDLAAAAAgDNAAAAAQBvCAAAAgDN
CgAAAwCdBwAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQBvCAAAAgDNCgAAAwCdBwAAAQD1BAAA
AQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQD1
BAAAAQD1BAAAAQD1BAAAAQD1BAAAAQC5AAAAAgDWAQAAAwBvCAAABACdBwAAAQBLCwAAAgAiCQAA
AwAkCwAABACdBwAAAQBvCAAAAQDxDAAAAQD4CwAAAQD4CwAAAQCNBwAAAQCPAQAAAQCPAQkADQkB
ABEADQkGABkADQkKACkADQkQADEADQkQADkADQkQAEEADQkQAEkADQkQAFEADQkQAFkADQkVAGEA
DQkVAGkADQkQAHEADQkQAHkADQkQAIEADQkaAJEADQkgAKkADQkGALEADQkGALkADQkGANEADQkm
AOkADQkQAAEBDQkGAEkBDQkGAJkADQkGAKEADQkGAAwADQkGABQADQkGABwADQkGACQADQkGAAwA
fwFKABQAfwFKABwAfwFKACQAfwFKAMEADQkGANkAtgFPANkAJw1XAPEADQldAAkBDQllAGEBswty
AHEBJgV9AHkBZwKEAHkBigiLAAkBNweXABkBRQmjABEBXAGnACEBDQmsACEBbwi4ACEBzQq9ACkB
PQXBACEBlgbGACkBZADLACEBrgbQACEBnQYBAIEBDQkQACEB7QzaACEBpwvaACEBzwwGACEBpAsG
ADkBDQkGAJkBBQveADkB4QrmACkBlAvaADkBwQDxADkBtwr5AKkBpQb/ADkBugwGAbEBiwwMAXkB
NAUTAckB7AQYAUEBDQkGANEB3QgdAdEBuQsdAcEABQsiAcEAmAEnAcEANAUrAdkBcAE3ATQAgQxO
ATwA2ARKADwA4gRlATwADQkGACkAqwATBC4ACwCMAi4AEwCVAi4AGwC0Ai4AIwC9Ai4AKwDmAi4A
MwDmAi4AOwC9Ai4AQwDsAi4ASwDmAi4AUwADAy4AWwDmAi4AYwAJAy4AawAzAy4AcwBAA0AAiwCK
A0AAgwCPA0MAewCYA0MAgwCPA0kAqwAkBGMAewCYA2MAgwCPA2kAqwA4BIAAiwCKA4MAkwCKA4MA
mwCKA4MAewCYA4kAqwBFBKAAiwCKA6kAgwC0AsAAiwCKA8MAswCKA8MAUwDmAskAgwC0AuAAiwCK
A+MAUwDmAgMBUwDmAiMBUwDmAkMBUwDmAmMBUwDmAqMBgwCPA6MBowCxA8MBgwCPA8MBWwDmAmkE
uwCKAwAHUwDmAiAHUwDmAuAHgwCPA+AHiwCKAwAIgwCPAwAIiwCKAyAIgwCPAyAIiwCKA0AIgwCP
A0AIiwCKA2AIiwCKA4AIiwCKA6AIiwCKA6AIgwCPA8AIiwCKA+AIiwCKA+AIgwCPA2wAkADWAOwA
LwFCAQQAAQAFAAUABwAHAAgAEwALACEADAAjAA4AJAAAAPIITgIAAAEHUwIAANgIWAIAAIYJXQIA
AHoIYgIAAC4CZwIAANcHbAIAADMGcAIAAMoAdAIAAN4FcAIAAM4HbAIAACMGcAIAALEAdAIAANkF
cAIAAM0LeAIAAGwGcAIAAEwBdAIAAAEGcAIAADoMeAIAAH4GcAIAAFgBeAIAABQGcAIAAFcLfgIA
AEgGcAIAACANdAIAAI8GcAIAALEAdAIAANkFcAIAAI0LdAIAAFoGcAIAABsBdAIAAOwFcAIAAMwB
bAIAAAYMbAIAAPUEggIAAIMBhwICAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQAB
AAsADQACABAADwACABEAEQACABIAEwACABMAFQACABQAFwACABUAGQACABYAGwACABcAHQABABgA
HwABABkAIQABABoAIwABABsAJQABAB8AJwABACAAKQABACEAKwABACIALQABACMALwABACQAMQAB
ACUAMwABACYANQABACcANwABACgAOQABACkAOwABACoAPQABACsAPwABACwAQQACADoAQwACADsA
RQACAD4ARwACAEYASQAuADUAPABDADQBRwFWAV0BBIAAAAEAAAAAAAAAAAAAAAAAbQAAAAQAAAAA
AAAAAAAAAGsB+AAAAAAABAAAAAAAAAAAAAAAawG3BgAAAAAKAAAAAAAAAAAAAAB0AQEBAAAAAA4A
AAAAAAAAAAAAAH0BDwwAAAAADgAAAAAAAAAAAAAAfQFADAAAAAAOAAAAAAAAAAAAAAB9AacHAAAA
AAAAAAABAAAAcAoAAA0ABAAOAAQAAAAQABwAzwAAABAAhwDPAAAAAACJAM8AmQA9AZkAYAEAAAAA
AElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAw
AENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEdldEludDMyAFNDXzVm
ZTQ1NGY5ZTlmNDRiYTdhNWRmOWMxMGU1ZDQ5NWI0ADxNb2R1bGU+AGdldF9JRABnZXRfQmF0Y2hJ
RABzZXRfQmF0Y2hJRABJbnB1dElEAEdldE91dHB1dElEAE0AVABEaXNwb3NlX19JbnN0YW5jZV9f
AENyZWF0ZV9fSW5zdGFuY2VfXwBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAc2V0X0xp
Y0xvYWRlZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAHNldF9FbGFwc2VkAHNl
dF9FbmQAUm91bmQAQ29tcGFyZU1ldGhvZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UA
aW5zdGFuY2UAR2V0SGFzaENvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
Z2V0X0JhdGNoTmFtZQBJbnB1dE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAR2V0VHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBBcHBs
aWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGVpbERhdGUAVG9EYXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJh
dGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFt
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0
ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQnl0ZQBtX1ZhbHVlAGdldF9WYWx1ZQBzZXRf
VmFsdWUAR2V0T2JqZWN0VmFsdWUAU3lzdGVtLlRocmVhZGluZwBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAENvbXBhcmVTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAE1hdGgATWljcm9zb2Z0LlZp
c3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzVm
ZTQ1NGY5ZTlmNDRiYTdhNWRmOWMxMGU1ZDQ5NWI0LmRsbABnZXRfSURfSXNOdWxsAGdldF9CYXRj
aElEX0lzTnVsbABzZXRfQmF0Y2hJRF9Jc051bGwAc2V0X0xpY0xvYWRlZF9Jc051bGwAc2V0X0Vs
YXBzZWRfSXNOdWxsAHNldF9FbmRfSXNOdWxsAGdldF9TdGVwX0lzTnVsbABnZXRfVGltZVN0YW1w
X0lzTnVsbABzZXRfU3RhdHVzX0lzTnVsbABzZXRfTGljU2V0X0lzTnVsbABzZXRfTW9tZW50X0lz
TnVsbABzZXRfU3RhcnRfSXNOdWxsAHNldF9SZWZLZXlfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0A
c2V0X0l0ZW0AU3lzdGVtAFRpbWVTcGFuAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2Ny
aXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBvcF9TdWJ0cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABn
ZXRfU3RlcABnZXRfVGltZVN0YW1wAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJv
dmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3Zp
ZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBCYXRjaEJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBUb0ludGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAGdldF9Vc2VyAEVudGVyAGdldF9D
b21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9y
AE91dHB1dElEcwBHZXRNcwBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1RvdGFsU2Vjb25kcwBNaWNy
b3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBN
aWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5J
bnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzVmZTQ1NGY5
ZTlmNDRiYTdhNWRmOWMxMGU1ZDQ5NWI0Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTQ181ZmU0
NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJzaW9ucwBDb25uZWN0aW9u
cwBCdWZmZXJzAFJ1bnRpbWVIZWxwZXJzAE9wZXJhdG9ycwBGaW5pc2hPdXRwdXRzAHNldF9TdGF0
dXMAQ3JlYXRlTmV3T3V0cHV0Um93cwBtX1N5bmNPYmplY3QATXlQcm9qZWN0AHNldF9MaWNTZXQA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AFNwbGl0AEV4aXQAc2V0X01vbWVudABQcmV2
TW9tZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRf
RXhlY1Jvb3QATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABzZXRfU3RhcnQAUHJvY1N0YXJ0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJp
bWVPdXRwdXQAbV9Db250ZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZh
bENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRS
b3cATmV4dFJvdwBTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5NeQBzZXRfUmVm
S2V5AGdldF9Bc3NlbWJseQAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8A
dQByAGMAZQBzAAADLgAAC1MAdABhAHIAdAAAHUwAaQBjAGUAbgBzAGUAIABsAG8AYQBkAGUAZAAA
F0wAaQBjAGUAbgBzAGUAIABzAGUAdAAAHU4AbwAgAGwAaQBjAGUAbgBzAGUAIABzAGUAdAAAB0UA
bgBkAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUA
dAAgADAAAAtCAGEAdABjAGgAABNCAGEAdABjAGgATgBhAG0AZQAAEUUAeABlAGMAUgBvAG8AdAAA
AADK/0JcHeNwR45vGmlWoJROAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUH
IAQBDg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcAARJtEYCpBSAAEoCtByAC
AQ4SgK0GIAMBCAgIBQcCHQ4OCgAEHQ4ODggRgLUGAAMIDg4CBgABEYCFDgQAAQgOBgcCChGAjQsA
AhGAjRGAhRGAhQMgAA0EAAENDQsgAwESgJUdCBKAmQQGEoCVAwYdCAQgAQ4IBCABAggEIAEICAUg
AgEIHAMHAQIDIAACByACAg4RgNEFIAEdCAgEBwIICAcAAggSgJkOBSAAEoDVBiABEoDZHAUAABKA
3QYgARwSgOEEAAEOHAQAARwcBAABARwEIAECHAMgAAgDIAAOBAcBHgACHgAFEAEAHgAECgEeAAQH
ARMABhUSOAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6
CImEXc2AgMyRBwYVEjgBEgwHBhUSOAESCAcGFRI4ARJlBwYVEjgBEjQDBhJ5AwYSfQQGEYCFAgYK
AgYIAwYSKAMGEiwDBhIgBAYSgJ0DBhIwAgYcAwAAAQQAABIMBAAAEggEAAASZQQAABI0BAAAEnkE
AAASfQUAAQESfQUgAQESHAcgAgoRgIUIBiABARGAhQQgAQEFCyAEAQgOEoCVEoCZDSAEAQgdCB0S
gJUSgJkGIAEBEoCdBAAAEjAEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAAS
NAQIABJ5BAgAEn0DKAAOAygAAgMoAAgFKAARgIUDKAAFBAgAEjAEKAATAAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNWZlNDU0ZjllOWY0NGJh
N2E1ZGY5YzEwZTVkNDk1YjQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEA
JGQwYWU2OTAwLTBhMjgtNDJhZi1iNTEwLTM3NjE1ZmM2MGNlMQAADAEABzEuMC4wLjAAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC41BAEAAAAIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5
c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRl
X19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5N
eS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAAxKAAAAAAAAAAAAACZKAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYSgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1AGYA
ZQA0ADUANABmADkAZQA5AGYANAA0AGIAYQA3AGEANQBkAGYAOQBjADEAMABlADUAZAA0ADkANQBi
ADQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBlADkAZgA0
ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQBmAGUANAA1ADQAZgA5
AGUAOQBmADQANABiAGEANwBhADUAZABmADkAYwAxADAAZQA1AGQANAA5ADUAYgA0AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBl
ADkAZgA0ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAODoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_5fe454f9e9f44ba7a5df9c10e5d495b4</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::BatchName,$Package::ExecRoot</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">05</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[TimeStamp]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              name="Moment" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              name="Elapsed" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch]"
                          hasSideEffects="true"
                          name="Batch">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]"
                              name="Start" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]"
                              name="End" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              name="RefKey" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              name="LicSet" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              name="LicLoaded" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Doc Logging?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Doc Logging?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Nee]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Nee"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]} &lt;= 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ID &lt;= 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Error Status"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Error Status"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ErrorCodes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ErrorCodes]) [refTable]
where [refTable].[Name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Inserted" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Insert"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              name="Error Status ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Not Found]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Not Found"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Filter Onzin"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Filter Onzin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Correct Version]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Correct Version"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression"> FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression"> FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Zinvol]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Zinvol"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Known Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Known Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[No]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL([Error Status ID])</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Merge Batch Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Batch Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[RefKey]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicLoaded]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Merge Doc Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Doc Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">2</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              name="Doc ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\ProcessDetail"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ProcessDetail"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessDetails]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="ui1"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              dataType="dbTimeStamp"
                              name="Moment" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[FileSize_KB]"
                              dataType="i4"
                              name="FileSize_KB" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              dataType="i4"
                              name="Elapsed" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc/Klant]"
                              dataType="i4"
                              name="Doc/Klant" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Read Err"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Err"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Read Err.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Err]"
                          connectionManagerRefId="Package.ConnectionManagers[Err]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              length="4000"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              name="Line"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="Line" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Read Log"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Log"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Read Log.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Log]"
                          connectionManagerRefId="Package.ConnectionManagers[Log]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              name="File"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              name="TimeStamp"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              name="Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TimeStamp" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set ErrCode Unexpected"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">8</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">8</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Set Error Code Name"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Error Code Name"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              name="ErrCode Description"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,8000,1252)([REPLACENULL](#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]},"") == "" ? "No Error" : #{Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,8000,1252)(REPLACENULL(ErrMsg,"") == "" ? "No Error" : ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              name="RefKey"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort ErrMsg"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort Log"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Log"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Step"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Step"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ProcessSteps]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ProcessSteps]) [refTable]
where [refTable].[Name] = ? and [refTable].[Main] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Sort" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Main" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMainStep" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]};#{Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Step.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input].Columns[Main Step]"
                              cachedDataType="ui1"
                              cachedName="Main Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Main</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              name="Step ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Unexpected Errors"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Unexpected Errors"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Error" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Moment]"
                              cachedDataType="date"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]"
                              name="File" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              dataType="date"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              name="Moment" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              name="Step ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              name="Error Status ID" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Update Batch"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Batch"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Batches] SET
  Status = ?
, ProcStart = ?
, ProcEnd = ?
, Error = ?
, Success = ?
, [License loaded] = ?
, [License set] = ?
WHERE ID = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Success]"
                              cachedDataType="bool"
                              cachedName="Success"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output].Columns[Success]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="ui1"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="dbTimeStamp"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              dataType="dbTimeStamp"
                              name="Param_2">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Param_3">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              dataType="bool"
                              name="Param_4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              dataType="i4"
                              name="Param_5">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              dataType="i4"
                              name="Param_6">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              dataType="i4"
                              name="Param_7">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Batch]"
                      endId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input]"
                      name="Batch"
                      startId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output]"
                      endId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output2]"
                      endId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output3]"
                      endId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[ErrMsg]"
                      endId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]"
                      name="ErrMsg"
                      startId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output]"
                      endId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Insert]"
                      endId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]"
                      name="Insert"
                      startId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Ja]"
                      endId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Ja1]"
                      endId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Ja2]"
                      endId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Lookup Match Output]"
                      endId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input]"
                      name="Lookup Match Output"
                      startId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output]"
                      endId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 1]"
                      endId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 2]"
                      endId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 2"
                      startId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[No]"
                      endId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[No1]"
                      endId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Output 0]"
                      endId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]"
                      name="Output 0"
                      startId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output2]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output3]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Union All Output 1]"
                      endId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input]"
                      name="Union All Output 1"
                      startId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Zinvol]"
                      endId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0]"
                      name="Zinvol"
                      startId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Zinvol]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{FB987EAC-79B2-4BF9-8D40-ABA95BCE3B35}"
              DTS:EvalOp="1"
              DTS:Expression="@[$Package::MainStep]==18"
              DTS:From="Package\For each finished batch\Load Log\Dispatch"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\For each finished batch\Load Log\XML" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{64DFB8C1-167F-460B-A6AA-3A1E432F9E5C}"
              DTS:EvalOp="1"
              DTS:Expression="@[$Package::MainStep]==16"
              DTS:From="Package\For each finished batch\Load Log\Dispatch"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\For each finished batch\Load Log\SAF" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{FAC64857-DA73-4DCA-9143-2ADB35B803D7}"
              DTS:EvalOp="1"
              DTS:Expression="@[$Package::MainStep]==17"
              DTS:From="Package\For each finished batch\Load Log\Dispatch"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\For each finished batch\Load Log\PDF" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Move Files to LogProcessed Folder"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{37991FD0-0CA0-44AB-B12F-87152C251B80}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Files to LogProcessed Folder">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{794709FC-A0B4-4527-985E-ACB4031F923C}"
            DTS:ObjectName="{794709FC-A0B4-4527-985E-ACB4031F923C}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::ExecRoot]+"\\03-Finished"</DTS:PropertyExpression>
            <DTS:PropertyExpression
              DTS:Name="FileSpec">@[User::BatchName]+".*"</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="E:\Scripts\03-XML\03-Finished" />
                <FEFEProperty
                  FileSpec="B000125.*" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Move Files to LogProcessed Folder\Move File"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:Description="File System Task"
              DTS:DTSID="{03590DED-46CD-483E-B2ED-0E5C26F75EB6}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskSourcePath="User::VanFile"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::NaarFile"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{9B59A761-E912-427B-BA73-C22C87F97818}"
              DTS:ObjectName="{9B59A761-E912-427B-BA73-C22C87F97818}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::FileName" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Purge OK File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{3B1D1F4D-807A-4A69-B72D-3AE546720131}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Purge OK File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::BatchOK"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Update Documents"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4B5FF8B5-8212-407B-B080-2BFDFAFB0634}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Documents"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}"
              SQLTask:SqlStatementSource="UPDATE       Documents&#xA;SET                ProcStatus = E.Status&#xA;FROM            Documents INNER JOIN&#xA;                         ProcessDetails AS P ON Documents.ID = P.Doc INNER JOIN&#xA;                         ProcessSteps AS S ON P.Step = S.ID INNER JOIN&#xA;                         ErrorCodes AS E ON P.Status = E.ID&#xA;WHERE (S.Name = ?) AND (P.Batch = ?) AND (S.Main = Documents.CurrentStep)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::BatchID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ProcDetailName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B117382E-B896-4702-98C4-301FBDD9D34A}"
          DTS:From="Package\For each finished batch\Load Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\For each finished batch\Purge OK File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7825AD7F-F8E8-472D-94DB-1ADE236F9B5F}"
          DTS:From="Package\For each finished batch\Load Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\For each finished batch\Create Dir" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{66EA8EE4-F1A8-4266-8A7C-38ABA1B92C13}"
          DTS:From="Package\For each finished batch\Create Dir"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\For each finished batch\Move Files to LogProcessed Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{B515E672-677B-4C3B-B403-05B91B69A4EB}"
          DTS:From="Package\For each finished batch\Purge OK File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\For each finished batch\Move Files to LogProcessed Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{11A825D4-B491-4CE9-A9E5-3016C70F77B8}"
          DTS:From="Package\For each finished batch\Load Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\For each finished batch\Update Documents" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E041CBB5-A971-4285-BDB1-3137D6DC1DB4}"
          DTS:ObjectName="{E041CBB5-A971-4285-BDB1-3137D6DC1DB4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::BatchName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="129,42"
          Id="Package\For each finished batch\Create Dir"
          TopLeft="574,135" />
        <NodeLayout
          Size="122,143"
          Id="Package\For each finished batch\Load Log\Dispatch"
          TopLeft="32,21" />
        <NodeLayout
          Size="101,42"
          Id="Package\For each finished batch\Load Log\PDF"
          TopLeft="230,80" />
        <NodeLayout
          Size="100,42"
          Id="Package\For each finished batch\Load Log\SAF"
          TopLeft="231,17" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\XML"
          TopLeft="227,144" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint]"
          TopLeft="154,126.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73,38.75"
              Start="0,0"
              End="65.5,38.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.2242562929062,0" />
                  <mssgle:CubicBezierSegment
                    Point1="21.2242562929062,0"
                    Point2="25.2242562929062,0"
                    Point3="25.2242562929062,4" />
                  <mssgle:LineSegment
                    End="25.2242562929062,34.75" />
                  <mssgle:CubicBezierSegment
                    Point1="25.2242562929062,34.75"
                    Point2="25.2242562929062,38.75"
                    Point3="29.2242562929062,38.75" />
                  <mssgle:LineSegment
                    End="65.5,38.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.2242562929062,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 1]"
          TopLeft="154,58.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77,-20.75"
              Start="0,0"
              End="69.5,-20.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.6064073226545,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.6064073226545,0"
                    Point2="26.6064073226545,0"
                    Point3="26.6064073226545,-4" />
                  <mssgle:LineSegment
                    End="26.6064073226545,-16.75" />
                  <mssgle:CubicBezierSegment
                    Point1="26.6064073226545,-16.75"
                    Point2="26.6064073226545,-20.75"
                    Point3="30.6064073226545,-20.75" />
                  <mssgle:LineSegment
                    End="69.5,-20.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.6064073226545,1,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 2]"
          TopLeft="154,92.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76,8.5"
              Start="0,0"
              End="68.5,8.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34,0" />
                  <mssgle:CubicBezierSegment
                    Point1="34,0"
                    Point2="38,0"
                    Point3="38,4" />
                  <mssgle:LineSegment
                    End="38,4.5" />
                  <mssgle:CubicBezierSegment
                    Point1="38,4.5"
                    Point2="38,8.5"
                    Point3="42,8.5" />
                  <mssgle:LineSegment
                    End="68.5,8.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="30,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="394,221"
          Size="394,264"
          Id="Package\For each finished batch\Load Log"
          TopLeft="29,18" />
        <NodeLayout
          Size="149,42"
          Id="Package\For each finished batch\Move Files to LogProcessed Folder\Move File"
          TopLeft="32,20" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="209,86"
          Size="209,129"
          Id="Package\For each finished batch\Move Files to LogProcessed Folder"
          TopLeft="529,337" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Purge OK File"
          TopLeft="288,382" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Update Documents"
          TopLeft="30,379" />
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint]"
          TopLeft="290.333333333333,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.6666666666667,100"
              Start="0,0"
              End="62.6666666666667,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.2426693629929" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.2426693629929"
                    Point2="0,40.2426693629929"
                    Point3="4,40.2426693629929" />
                  <mssgle:LineSegment
                    End="58.6666666666667,40.2426693629929" />
                  <mssgle:CubicBezierSegment
                    Point1="58.6666666666667,40.2426693629929"
                    Point2="62.6666666666667,40.2426693629929"
                    Point3="62.6666666666667,44.2426693629929" />
                  <mssgle:LineSegment
                    End="62.6666666666667,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 1]"
          TopLeft="423,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151,0"
              Start="0,0"
              End="143.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="143.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 2]"
          TopLeft="636,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,160"
              Start="0,0"
              End="0,152.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,152.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 3]"
          TopLeft="418,402.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="111,0"
              Start="0,0"
              End="103.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="103.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 4]"
          TopLeft="161.666666666667,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.1666666666667,97"
              Start="0,0"
              End="-64.1666666666667,89.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.0353892821031" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.0353892821031"
                    Point2="0,39.0353892821031"
                    Point3="-4,39.0353892821031" />
                  <mssgle:LineSegment
                    End="-60.1666666666667,39.0353892821031" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.1666666666667,39.0353892821031"
                    Point2="-64.1666666666667,39.0353892821031"
                    Point3="-64.1666666666667,43.0353892821031" />
                  <mssgle:LineSegment
                    End="-64.1666666666667,89.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="782,517"
          Size="782,560"
          Id="Package\For each finished batch"
          TopLeft="56,32" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\For each finished batch\Load Log\PDF">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\For each finished batch\Load Log\PDF\Read Log"
          TopLeft="56,57" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\PDF\Set Error Code Name"
          TopLeft="274,285" />
        <NodeLayout
          Size="119,42"
          Id="Package\For each finished batch\Load Log\PDF\Defaults"
          TopLeft="279,55" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\PDF\Doc Logging?"
          TopLeft="504,170" />
        <NodeLayout
          Size="142,42"
          Id="Package\For each finished batch\Load Log\PDF\Merge  Batch Info"
          TopLeft="909,657" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\PDF\Read Err"
          TopLeft="515,777" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\PDF\ProcessDetail"
          TopLeft="264,534" />
        <NodeLayout
          Size="108,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort 1"
          TopLeft="923,61" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected"
          TopLeft="765,531" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Merge Doc Info"
          TopLeft="48,288" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\PDF\Multicast"
          TopLeft="777,405" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Determine Elapse"
          TopLeft="506,59" />
        <NodeLayout
          Size="120,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort Log"
          TopLeft="52,169" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\PDF\Error Status"
          TopLeft="509,288" />
        <NodeLayout
          Size="146,42"
          Id="Package\For each finished batch\Load Log\PDF\Known Error?"
          TopLeft="511,404" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort ErrMsg"
          TopLeft="51,406" />
        <NodeLayout
          Size="114,42"
          Id="Package\For each finished batch\Load Log\PDF\Concat"
          TopLeft="56,776" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\PDF\Union All"
          TopLeft="521,530" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Update Batch"
          TopLeft="704,778" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\PDF\Step"
          TopLeft="285,167" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Derived Column"
          TopLeft="915,778" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Load Log\PDF\Filter Onzin"
          TopLeft="270,775" />
        <NodeLayout
          Size="99,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort"
          TopLeft="353,655" />
        <NodeLayout
          Size="141,42"
          Id="Package\For each finished batch\Load Log\PDF\Batch Error?"
          TopLeft="43,654" />
        <NodeLayout
          Size="143,42"
          Id="Package\For each finished batch\Load Log\PDF\Unexpected Errors"
          TopLeft="763,286" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Zinvol]"
          TopLeft="270,796.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100,0"
              Start="0,0"
              End="-92.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-92.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.839296875,5,27.17859375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Union All Output 1]"
          TopLeft="521,553">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output3]"
          TopLeft="452,677">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="457,0"
              Start="0,0"
              End="449.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="449.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output2]"
          TopLeft="978.5,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,554"
              Start="0,0"
              End="0,546.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,546.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output1]"
          TopLeft="112.5,211">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output]"
          TopLeft="116.5,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-76"
              Start="0,0"
              End="0,-68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Output 0]"
          TopLeft="574.25,101">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,25.033203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[No1]"
          TopLeft="657,425.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,0"
              Start="0,0"
              End="112.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.70796875,5,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[No]"
          TopLeft="116.75,654">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-206"
              Start="0,0"
              End="0,-198.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-198.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.54203125,-103.9609375,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 2]"
          TopLeft="836.5,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-77"
              Start="0,0"
              End="0,-69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 1]"
          TopLeft="838.5,447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output1]"
          TopLeft="178,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output]"
          TopLeft="980,699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Lookup Match Output]"
          TopLeft="285,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-113,0"
              Start="0,0"
              End="-105.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-105.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Ja2]"
          TopLeft="583.25,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3750390625,33.5390625,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Ja1]"
          TopLeft="184,675.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,0"
              Start="0,0"
              End="161.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="161.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.3749609375,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Ja]"
          TopLeft="504,189.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117,0"
              Start="0,0"
              End="-109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1250390625,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Insert]"
          TopLeft="581,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output1]"
          TopLeft="515,797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output]"
          TopLeft="183,77">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[ErrMsg]"
          TopLeft="113.25,776">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80"
              Start="0,0"
              End="0,-72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.55298828125,-41.91796875,31.1059765625,11.3359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output3]"
          TopLeft="412,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97,0"
              Start="0,0"
              End="89.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="89.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output2]"
          TopLeft="915,799">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81,0"
              Start="0,0"
              End="-73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output1]"
          TopLeft="765,551.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121,0"
              Start="0,0"
              End="-113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output]"
          TopLeft="398,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108,0"
              Start="0,0"
              End="100.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Batch]"
          TopLeft="636,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="287,0"
              Start="0,0"
              End="279.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="279.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="127.09806640625,5,25.3038671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\PDF.Paths[Insert]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\PDF.Paths[Lookup Match Output]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\PDF\ProcessDetail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\PDF\Error Status">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ErrorCodes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\PDF\Step">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProcessSteps]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\For each finished batch\Load Log\SAF">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Error Status"
          TopLeft="509,300" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\SAF\Update Batch"
          TopLeft="759,64" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Sort ErrMsg"
          TopLeft="51,418" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\SAF\Union All"
          TopLeft="789,430" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Unexpected Errors"
          TopLeft="1031,186" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Load Log\SAF\Filter Onzin"
          TopLeft="273,541" />
        <NodeLayout
          Size="127,42"
          Id="Package\For each finished batch\Load Log\SAF\Read Log"
          TopLeft="56,69" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\SAF\Doc Logging?"
          TopLeft="504,182" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Set Error Code Name"
          TopLeft="274,297" />
        <NodeLayout
          Size="119,42"
          Id="Package\For each finished batch\Load Log\SAF\Defaults"
          TopLeft="279,67" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\SAF\ProcessDetail"
          TopLeft="779,542" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\SAF\Step"
          TopLeft="285,179" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected"
          TopLeft="1033,431" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\SAF\Read Err"
          TopLeft="518,543" />
        <NodeLayout
          Size="133,42"
          Id="Package\For each finished batch\Load Log\SAF\Merge Join"
          TopLeft="48,300" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\SAF\Multicast"
          TopLeft="1045,305" />
        <NodeLayout
          Size="120,42"
          Id="Package\For each finished batch\Load Log\SAF\Sort Log"
          TopLeft="62,180" />
        <NodeLayout
          Size="146,42"
          Id="Package\For each finished batch\Load Log\SAF\Known Error?"
          TopLeft="779,304" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\SAF\Determine Elapse"
          TopLeft="515,63" />
        <NodeLayout
          Size="114,42"
          Id="Package\For each finished batch\Load Log\SAF\Concat"
          TopLeft="66,540" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 2]"
          TopLeft="1103.25,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-77"
              Start="0,0"
              End="0,-69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 1]"
          TopLeft="1106.5,347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Merge Join Output]"
          TopLeft="181,319.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,0"
              Start="0,0"
              End="85.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="85.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Lookup Match Output]"
          TopLeft="285,200.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103,0"
              Start="0,0"
              End="-95.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-95.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Ja1]"
          TopLeft="504,201.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117,0"
              Start="0,0"
              End="-109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1250390625,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Ja]"
          TopLeft="851.25,346">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3750390625,33.5390625,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Insert]"
          TopLeft="647,323">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132,0"
              Start="0,0"
              End="124.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="124.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output1]"
          TopLeft="183,89">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output]"
          TopLeft="518,563">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[ErrMsg]"
          TopLeft="121.5,540">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80"
              Start="0,0"
              End="0,-72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.55298828125,-41.91796875,31.1059765625,11.3359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output2]"
          TopLeft="398,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117,0"
              Start="0,0"
              End="109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output1]"
          TopLeft="1033,451.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121,0"
              Start="0,0"
              End="-113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output]"
          TopLeft="412,319.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97,0"
              Start="0,0"
              End="89.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="89.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Batch]"
          TopLeft="645,84.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114,0"
              Start="0,0"
              End="106.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="106.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="40.59806640625,5,25.3038671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Zinvol]"
          TopLeft="273,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-93,0"
              Start="0,0"
              End="-85.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-85.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-56.339296875,5,27.17859375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Union All Output 1]"
          TopLeft="851.5,472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Sort Output1]"
          TopLeft="117.25,418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-76"
              Start="0,0"
              End="0,-68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Sort Output]"
          TopLeft="118.25,222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Output 0]"
          TopLeft="578.75,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,29.033203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[No]"
          TopLeft="925,325.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,0"
              Start="0,0"
              End="112.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.70796875,5,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\SAF.Paths[Lookup Match Output]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\SAF.Paths[Insert]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\SAF\Error Status">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ErrorCodes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\SAF\ProcessDetail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\SAF\Step">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProcessSteps]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\For each finished batch\Load Log\XML">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\For each finished batch\Load Log\XML\Read Log"
          TopLeft="56,57" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\XML\Set Error Code Name"
          TopLeft="274,285" />
        <NodeLayout
          Size="119,42"
          Id="Package\For each finished batch\Load Log\XML\Defaults"
          TopLeft="279,55" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\XML\Doc Logging?"
          TopLeft="504,170" />
        <NodeLayout
          Size="131,42"
          Id="Package\For each finished batch\Load Log\XML\Merge Batch Info"
          TopLeft="909,657" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\XML\Read Err"
          TopLeft="515,777" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\XML\ProcessDetail"
          TopLeft="264,534" />
        <NodeLayout
          Size="108,42"
          Id="Package\For each finished batch\Load Log\XML\Sort 1"
          TopLeft="923,61" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected"
          TopLeft="765,531" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Merge Doc Info"
          TopLeft="48,288" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\XML\Multicast"
          TopLeft="777,405" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Determine Elapse"
          TopLeft="506,59" />
        <NodeLayout
          Size="120,42"
          Id="Package\For each finished batch\Load Log\XML\Sort Log"
          TopLeft="58,168" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\XML\Error Status"
          TopLeft="509,288" />
        <NodeLayout
          Size="146,42"
          Id="Package\For each finished batch\Load Log\XML\Known Error?"
          TopLeft="511,404" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\XML\Sort ErrMsg"
          TopLeft="51,406" />
        <NodeLayout
          Size="114,42"
          Id="Package\For each finished batch\Load Log\XML\Concat"
          TopLeft="56,776" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\XML\Union All"
          TopLeft="521,530" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Update Batch"
          TopLeft="704,778" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\XML\Step"
          TopLeft="285,167" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Derived Column"
          TopLeft="915,778" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Load Log\XML\Filter Onzin"
          TopLeft="270,775" />
        <NodeLayout
          Size="99,42"
          Id="Package\For each finished batch\Load Log\XML\Sort"
          TopLeft="353,655" />
        <NodeLayout
          Size="141,42"
          Id="Package\For each finished batch\Load Log\XML\Batch Error?"
          TopLeft="43,654" />
        <NodeLayout
          Size="143,42"
          Id="Package\For each finished batch\Load Log\XML\Unexpected Errors"
          TopLeft="763,286" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Zinvol]"
          TopLeft="270,796.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100,0"
              Start="0,0"
              End="-92.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-92.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.839296875,5,27.17859375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Union All Output 1]"
          TopLeft="521,553">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output3]"
          TopLeft="452,677">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="457,0"
              Start="0,0"
              End="449.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="449.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output2]"
          TopLeft="975.75,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,554"
              Start="0,0"
              End="0,546.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,546.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output1]"
          TopLeft="115.5,210">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output]"
          TopLeft="116.5,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-76"
              Start="0,0"
              End="0,-68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Output 0]"
          TopLeft="574.25,101">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,25.033203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[No1]"
          TopLeft="657,425.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,0"
              Start="0,0"
              End="112.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.70796875,5,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[No]"
          TopLeft="116.75,654">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-206"
              Start="0,0"
              End="0,-198.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-198.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.54203125,-103.9609375,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 2]"
          TopLeft="836.5,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-77"
              Start="0,0"
              End="0,-69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 1]"
          TopLeft="838.5,447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output1]"
          TopLeft="178,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output]"
          TopLeft="977.25,699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Lookup Match Output]"
          TopLeft="285,188.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-107,0"
              Start="0,0"
              End="-99.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-99.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Ja2]"
          TopLeft="583.25,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3750390625,33.5390625,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Ja1]"
          TopLeft="184,675.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,0"
              Start="0,0"
              End="161.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="161.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.3749609375,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Ja]"
          TopLeft="504,189.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117,0"
              Start="0,0"
              End="-109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1250390625,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Insert]"
          TopLeft="581,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output1]"
          TopLeft="515,797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output]"
          TopLeft="183,77">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[ErrMsg]"
          TopLeft="113.25,776">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80"
              Start="0,0"
              End="0,-72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.55298828125,-41.91796875,31.1059765625,11.3359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output3]"
          TopLeft="412,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97,0"
              Start="0,0"
              End="89.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="89.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output2]"
          TopLeft="915,799">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81,0"
              Start="0,0"
              End="-73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output1]"
          TopLeft="765,551.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121,0"
              Start="0,0"
              End="-113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output]"
          TopLeft="398,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108,0"
              Start="0,0"
              End="100.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Batch]"
          TopLeft="636,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="287,0"
              Start="0,0"
              End="279.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="279.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="127.09806640625,5,25.3038671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\XML.Paths[Insert]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\XML.Paths[Lookup Match Output]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\XML\ProcessDetail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\XML\Error Status">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ErrorCodes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\XML\Step">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProcessSteps]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>