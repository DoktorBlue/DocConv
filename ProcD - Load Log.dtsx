<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/8/2019 8:49:29 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="VMT010140177175"
  DTS:CreatorName="TEST\bla061"
  DTS:DTSID="{57861177-5D90-486F-9BCA-FA9BA227A262}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1043"
  DTS:ObjectName="ProcD - Load Log"
  DTS:PackageType="5"
  DTS:VersionBuild="101"
  DTS:VersionGUID="{9CDF463F-51A1-4F2D-B922-027AF9CE3119}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Err]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{587A10EB-75B0-4D85-A06E-753F1911A5EC}"
      DTS:ObjectName="Err">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ExecRoot]+"\\03-Finished\\" +  @[User::BatchName] + ".err"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1043"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\Scripts\01-Unzip\03-Finished\B000208.err">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Line"
              DTS:DTSID="{EA6AABA6-5207-4E79-8C34-1C30341B1F9C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Log]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F8F3F8FB-EA5B-4A49-88DE-FD7B7A6663A8}"
      DTS:ObjectName="Log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ExecRoot]+"\\03-Finished\\" +  @[User::BatchName] + ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1043"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\Scripts\01-Unzip\03-Finished\B000208.log">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ID"
              DTS:DTSID="{B8F18EF2-86A1-4BF2-8652-9C9315EC1F9E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TimeStamp"
              DTS:DTSID="{31BAB9BA-0DC9-409D-9F1E-644B2AF6316E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x007C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{15F0DC99-CB52-4813-AB97-465CD9A6B13F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="File"
              DTS:DTSID="{84186A32-8622-40AB-AE7D-6E7AA780F757}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="MigLog"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{72937D8F-6601-41AF-A814-216CD116637C}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2010AC45-8EA8-49E3-AA7E-B1DCA7EEE618}"
      DTS:ObjectName="ExecRoot"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">E:\Scripts\01-Unzip</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="17"
      DTS:DTSID="{F48C03A3-7772-4446-BD31-B0D110E1D98D}"
      DTS:ObjectName="MainStep"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="17"
        DTS:Name="ParameterValue">16</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E3EACE6-26A3-4F72-871F-3104B5817169}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_I4) SUBSTRING( @[User::BatchName] , 2, 9)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchID">
      <DTS:VariableValue
        DTS:DataType="3">208</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19A2A32B-DF1A-4D92-A963-6A22F5B82231}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchName">
      <DTS:VariableValue
        DTS:DataType="8">B000208</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB09165B-B772-4D3E-99DF-470A0C443B7B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ExecRoot]+&quot;\\03-Finished\\&quot;+  @[User::BatchName]+&quot;.OK&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BatchOK">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\01-Unzip\03-Finished\B000208.OK</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41138C6E-B0EB-423C-B69B-0A0196FAA7D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9DD1E76-6899-49B9-9C79-115C8EBE7C16}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ExecRoot]+&quot;\\04-LogProcessed\\&quot;+ @[User::BatchName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NaarDir">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\01-Unzip\04-LogProcessed\B000208</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8E886B58-DCEF-435C-AA95-FE60B5DF30B7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::NaarDir] +&quot;\\&quot;+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NaarFile">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\01-Unzip\04-LogProcessed\B000208\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DBF21E36-2EA7-4B31-9742-8183CD83C426}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcDetailName">
      <DTS:VariableValue
        DTS:DataType="8">End</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AAA1871-72F8-4579-A9E7-5108F03F8C0E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ExecRoot]+&quot;\\03-Finished\\&quot;+ @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VanFile">
      <DTS:VariableValue
        DTS:DataType="8">E:\Scripts\01-Unzip\03-Finished\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnQueryCancel,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{72937D8F-6601-41AF-A814-216CD116637C}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Log"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{d5748669-33a9-4f2e-b8fe-3482f2a57ad9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}"
          SQLTask:SqlStatementSource="DELETE FROM [dbo].[SysSSisLog]&#xA;WHERE StartTime &lt; DateAdd(Day,-1, GetDate())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\For each finished batch"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{8997374B-C81E-4B74-AB75-DDA25DAA2C15}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="For each finished batch">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{B20E22F6-C13C-4BD6-A27E-CF065C8371C2}"
        DTS:ObjectName="{B20E22F6-C13C-4BD6-A27E-CF065C8371C2}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Package::ExecRoot]+"\\03-Finished"</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="E:\Scripts\01-Unzip\03-Finished" />
            <FEFEProperty
              FileSpec="*.OK" />
            <FEFEProperty
              FileNameRetrievalType="2" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Create Dir"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{A00B25FE-3461-4937-89C6-A596AA1F1D88}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Dir"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="CreateDirectory"
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::NaarDir"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Load Log"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{C029235C-72EB-498D-8AA5-B96DFDB43617}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Log">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\Dispatch"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{7A55EB5F-A696-4A0E-970A-D66F8912C7C8}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Dispatch"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::ProcDetailName] = &quot;End&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\PDF"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{086ef5ad-acbd-4297-b75c-a4a8937f0bd0}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="PDF"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Batch Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Batch Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Ja]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]} == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">[Doc ID] == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[No]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Concat"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Concat"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cb1f493a-4194-4276-8679-f040bb536b21}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_f61f4f10aed14e22bfec206935f3157a</RootNamespace>
    <AssemblyName>SC_f61f4f10aed14e22bfec206935f3157a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e14602c5-72ce-4833-adba-28a9af30651c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public ErrMsgBuffer As ErrMsgBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If ErrMsgBuffer IsNot Nothing Then
            ErrMsgBuffer.SetEndOfRowset
            ErrMsgBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "ErrMsg") Then
                ErrMsgBuffer = New ErrMsgBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ErrMsg As String = vbNullString

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim ID As Integer
        If Left(Row.Line, 10) = "DocConvID=" Then
            ID = CInt(Split(Row.Line, "=")(1))
            ErrMsgBuffer.AddRow()
            ErrMsgBuffer.DocID = CInt(IIf(ID < 0, 0, ID))
            ErrMsgBuffer.ErrMsg = Mid(ErrMsg, vbNewLine.Length + 1)
            ErrMsgBuffer.Step = "End"

            ErrMsg = vbNullString
        Else
            ErrMsg = ErrMsg & vbNewLine & Row.Line
        End If
    End Sub
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class ErrMsgBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [ErrMsg]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [ErrMsg_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [DocID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [DocID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Step]() As String
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Step_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f61f4f10aed14e22bfec206935f3157a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f61f4f10aed14e22bfec206935f3157a</msb:DisplayName>
    <msb:ProjectId>{DA5B2E82-84EF-47F0-8BC2-A8DA6E821CB0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f61f4f10aed14e22bfec206935f3157a.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABf0/FwAAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAmkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
QQAAAAAAAEgAAAACAAUA9CQAAJwbAAABAAAAAAAAAJBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqOgIoHQAABgIUfQcAAAQqEzAEAL4AAAABAAARA28PAAAG
HwooJgAACnIzAABwFignAAAKOoQAAAADbw8AAAZySQAAcBUWKCgAAAoXmigpAAAKCgJ7CgAABG8a
AAAGAnsKAAAEBhb+BBaMLgAAAQaMLgAAASgqAAAKKCsAAApvFgAABgJ7CgAABAJ7BwAABHJNAABw
KCwAAAoX1igtAAAKbxQAAAYCewoAAARyUwAAcG8YAAAGAhR9BwAABCoCAnsHAAAEck0AAHADbw8A
AAYoLgAACn0HAAAEKioCAwQFKC8AAAoqUgJ7MAAACgJ7MQAAChaUbzIAAAoqIgIWKDMAAAoqABMw
AQAJAAAAAgAAEQIoNAAACgoGKgAAABMwAQAJAAAAAgAAEQIoNQAACgoGKiYCFgMoNgAACipaAywI
AhYoNwAACipyWwAAcHM4AAAKejoCFwOMLgAAASg2AAAKKloDLAgCFyg3AAAKKnJbAABwczgAAAp6
JgIYAyg2AAAKKloDLAgCGCg3AAAKKnJbAABwczgAAAp6HgIoOQAACioeAig6AAAKKgAAABMwAQAJ
AAAAAgAAEQIoNQAACgoGKpoCKDsAAAoCAnMlAAAGfQgAAAQCAnMmAAAGfQkAAAQCFn0LAAAEKhMw
BABPAAAAAAAAAARy+AAAcBpvPAAACiwVAgUCAyg9AAAKDgRzDgAABm8jAAAGBW8+AAAKLCMCAnsL
AAAEF9Z9CwAABAJ7CwAABBczDAJvHwAABgIoIAAABioGKm4CewoAAAQsEgJ7CgAABG8bAAAGAhR9
CgAABCoAAAATMAUAQQAAAAMAABEDF9oKFgsrLgQHlA4EcggBAHAoPwAACjMZAgUHmgIEB5QoPQAA
Cg4EcxMAAAZ9CgAABAcX1gsHBjHOAm8iAAAGKkorBwIDbyQAAAYDbxEAAAYt8So6AigiAAAKAgN9
DAAABCo6AigiAAAKAgN9DQAABCpCcyIAAAooQAAACoAPAAAEKh4CKEEAAAoqABswAQA/AAAAAAAA
AH4OAAAELTJ+DwAABChAAAAKKEIAAAp+DgAABC0ccygAAAaADgAABN4Qfg8AAAQoQAAACihDAAAK
3H4OAAAEKgABEAAAAgAdAAwpABAAAAAANgIDKEAAAAooRAAACioeAihFAAAKKi7QDQAAAigjAAAK
Kh4CKEYAAAoqAAATMAEAFAAAAAQAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMw
AgAoAAAABQAAEQJ7SAAACm9JAAAKCgaMCAAAGy0SKAIAACsKAntIAAAKBm9KAAAKBipKAigiAAAK
AnNLAAAKfUgAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABgLAAAjfgAA
hAsAAPAKAAAjU3RyaW5ncwAAAAB0FgAAGAEAACNVUwCMFwAAEAAAACNHVUlEAAAAnBcAAAAEAAAj
QmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA1AAAADgAAABAAAAAyAAAAHQAAAEsA
AAA+AAAABQAAAAYAAAAQAAAAEQAAAAgAAAABAAAABQAAAAEAAAACAAAAAwAAAAIAAAAAAAwFAQAA
AAAABgBuA1gIBgAYBFgIBgBFApkHDwD+CAAABgCGAgsGBgBRAwsGBgD/AwsGBgCOAwsGBgCnAwsG
BgDNAgsGBgDCA4gFBgByAhIIBgDuARIIBgAZAwsGBgDoAnYECgARAikHCgDZAfYECgBZAvYEDgCx
AegHDgBfB6wHBgABA5kHDgCdAjEIDgC1Aq4ABgC+CYgFDgBFB+gHDgA2A64ABgCIAYgFDgABAMwE
CgD8AY8FBgAPB3gIBgBIBuoFEgDYA2QBBgC8BIgFEgD+BmQBFgDiBmQBEgBUBmQBEgAcCmQBCgDB
AdUFBgAoApkHBgAtAYgFBgDlCgsGDgA8Ca4ADgCFCTEIDgDrAK4ADgBWCTEIBgArAIgFDgD/Ba4A
BgCqBIgFBgAdBogFBgA3BogFBgB2CVgIBgCHB2UEBgBwB4gFAAAAADEAAAAAAAEAAQAAAAAAxwW6
Ck0AAQABAAAAAABdB7oKUQABAAIAAAEQAMUJugphAAEAAwAAAAAAugiJCGEABQAIAAEAAACsBYEA
JAAHAAwAAQAAANUGgQCJAAgADgABAAAA8QaBAIkACAATAAEAAAD+CYEAlQAIAB0AAQAAAGIJgQBh
AAwAJQABAAAADQmBAGEADQAmAAABEABECYEAmQAOACcABQEAANoHAABhABAAKgAFAQAAEAAAAGEA
EAAxADEAngZPATEAdQZXATEAiQZfATEAtwZnAREAaAdvAREApQFzAQEAtQR3AQYAYgl6AQYADQl+
AQYA8QaCAQEAxACGAQEADAqJAQEADAqJAREANgSOAREAuAmSASEAigoXAVAgAAAAAAYYegcGAAEA
WCAAAAAABhh6BwYAAQBgIAAAAAARGIAHlQEBAIogAAAAABMIUAeZAQEAliAAAAAAEwi3BZ4BAQCi
IAAAAAATCEEHowEBAK4gAAAAABMIygeoAQEAuiAAAAAAAxh6BwYAAQDCIAAAAAAWCAsHrQEBAO4g
AAAAABYIjQGyAQEA9SAAAAAAFgiZAbcBAQD9IAAAAAAGGHoHBgACAAwhAAAAAMYCmwq9AQIA1iEA
AAAABhh6B50AAwDhIQAAAAAGCFsB9AAGAPYhAAAAAAYIRQXAAAYAACIAAAAAhgCyCsAABgAYIgAA
AACGAOIJwAAGANYhAAAAAAYYegedAAYALSIAAAAABgixBBAACQA3IgAAAAAGCFUFFQAKAE4iAAAA
AAYIOgABAAsAXSIAAAAABgg0BRUADAB0IgAAAAAGCGwGEAANAH4iAAAAAAYIZwUVAA4AlSIAAAAA
hgCUCgYADwCdIgAAAACGAN8JBgAPAKgiAAAAAIYA4gnAAA8AvSIAAAAABhh6BwYADwDkIgAAAADG
AnEKwwEPAD8jAAAAAEYDjwkGABMAQSMAAAAAAQDTAAYAEwBgIwAAAADGAn4KzwETAD8jAAAAAEYD
nQkGABcArSMAAAAARgNqCr0BFwA/IwAAAABGA5sKvQEYAMAjAAAAAAYYegfdARkAzyMAAAAABhh6
B90BGgDeIwAAAAARGIAHlQEbAO8jAAAAAAYYegcGABsA+CMAAAAAFgg+BOQBGwBUJAAAAADGAk8J
7wAbAGIkAAAAAMYCIQGSABwAaiQAAAAAgwCFAekBHAB2JAAAAADGAp4E9AAcAIAkAAAAABEAbgDu
ARwAoCQAAAAAAQBaAPYBHQC6IAAAAAAGGHoHBgAeAKwkAAAAAAMICAFKAB4A4CQAAAAABhh6BwYA
HgAAAAEAWwQAAAEAtgoAAAEABAcAAAIAFwkAAAMAYgYAAAEABAcAAAIAFwkAAAMAYgYAAAEAWwQA
AAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEARAAAAAIAUQEAAAMABAcAAAQAYgYAAAEA
lQkAAAIAjwcAAAMAbgkAAAQAYgYAAAEABAcAAAEAtgoAAAEAIgoAAAEAIgoAAAEAUgYAAAEAGAEA
AAEAGAEJAHoHAQARAHoHBgAZAHoHCgApAHoHEAAxAHoHEAA5AHoHEABBAHoHEABJAHoHEABRAHoH
EABZAHoHFQBhAHoHFQBpAHoHEABxAHoHEAB5AHoHEACBAHoHGgCRAHoHIACpAHoHBgCxAHoHBgC5
AHoHBgDRAHoHJgDpAHoHEAABAXoHBgA5AXoHBgCZAHoHBgChAHoHBgAMAHoHBgAUAHoHBgAcAHoH
BgAkAHoHBgAMAAgBSgAUAAgBSgAcAAgBSgAkAAgBSgDBAHoHBgDZAD8BTwDZAOEKVwDxAHoHXQBR
Ae4JaQBZAZAEbwBRAfMJdgBpAR8HgQB5AWEEhgBpAR8HjQCBAcEEkgBRAecAaQCBAbEJlgARAXoH
nQARAQQHqQARARcJrgAZAacEsgARAXAFtwARAbIKwAARAeIJwAARAX8FxAARAXcFAQCJAXoHEAAR
AZQKBgARAd8JBgApAXoHBgCBAU8JygApASsJ0gAZAc8JwAApAUwA3QCZAVIE5QAxAXoHBgChAUoH
6gChAfkJ6gDBAE8J7wDBACEBkgDBAJ4E9ACpAfkAAAE0AIoKFwE8AD4ESgA8AEgELgE8AHoHBgAp
AKsAuQMuAAsAMgIuABMAOwIuABsAWgIuACMAYwIuACsAjAIuADMAjAIuADsAYwIuAEMAkgIuAEsA
jAIuAFMAqQIuAFsAjAIuAGMArwIuAGsA2QIuAHMA5gJAAIsAMANAAIMANQNDAHsAPgNDAIMANQNJ
AKsAygNjAHsAPgNjAIMANQNpAKsA3gOAAIsAMAODAJMAMAODAJsAMAODAHsAPgOJAKsA6wOgAIsA
MAOpAIMAWgLAAIsAMAPDALMAMAPDAFMAjALJAIMAWgLgAIsAMAPjAFMAjAIDAVMAjAIjAVMAjAJD
AVMAjAJjAVMAjAKjAYMANQOjAaMAVwPDAYMANQPDAVsAjALpAbsAMAOgBFMAjALABFMAjAJABYMA
NQNABYsAMANgBYMANQNgBYsAMAOABYMANQOABYsAMAOgBYMANQOgBYsAMAPABYsAMAPgBYsAMAMA
BosAMAMABoMANQMgBosAMANABosAMANABoMANQNlALwA2AD4AAsBBAABAAUABQAHAAcACAAJAAwA
DwAOABAAAABfB/4BAADJBQMCAABFBwgCAADcBw0CAAAPBxICAACpARcCAABfARwCAABJBSACAAC1
BBwCAABZBSACAAA+ACQCAAA4BSACAABwBhwCAABrBSACAABbBCgCAAAMAS0CAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAPAA8AAgAQABEAAQAUABMAAQAVABUAAQAW
ABcAAQAXABkAAQAYABsAAQAZAB0AAgApAB8AAgAxACEALgA1ADwAQwD9ABABHwEmAQSAAAABAAAA
AAAAAAAAAAAAAIEAAAAEAAAAAAAAAAAAAAA0AaUAAAAAAAQAAAAAAAAAAAAAADQBiAUAAAAACgAA
AAAAAAAAAAAAPQGuAAAAAAAOAAAAAAAAAAAAAABGASwKAAAAAA4AAAAAAAAAAAAAAEYBSQoAAAAA
AAAAAAEAAADGCAAADQAEAA4ABAAAABAAHABYAAAAEABdAFgAAAAAAF8AWACPAAYBjwApAQAAAENv
bnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEludDMyADxNb2R1bGU+AHNl
dF9Eb2NJRABJbnB1dElEAEdldE91dHB1dElEAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVf
X0luc3RhbmNlX18AU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAbXNjb3JsaWIA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQA
TWlkAENvbXBhcmVNZXRob2QAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNl
AEdldEhhc2hDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFt
ZQBnZXRfTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3
b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21W
aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5
RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlh
bnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBJSWYAU3lzdGVtLlRocmVhZGluZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAENvbXBhcmVTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5n
AHNldF9FcnJNc2cATWF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mNjFmNGYxMGFlZDE0ZTIyYmZl
YzIwNjkzNWYzMTU3YS5kbGwAc2V0X0RvY0lEX0lzTnVsbABnZXRfTGluZV9Jc051bGwAc2V0X0Vy
ck1zZ19Jc051bGwAc2V0X1N0ZXBfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBs
aWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBJbnRlcmFj
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0Nv
bXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAc2V0X1N0ZXAAbV9B
cHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAEVyck1zZ0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0lu
dGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAT3V0cHV0
SURzAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRf
V2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRp
b25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15LlJl
c291cmNlcwBNeVJlc291cmNlcwBTQ19mNjFmNGYxMGFlZDE0ZTIyYmZlYzIwNjkzNWYzMTU3YS5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJz
aW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAFJ1bnRpbWVIZWxwZXJzAE9wZXJhdG9ycwBGaW5pc2hP
dXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AExlZnQAU3BsaXQARXhpdABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lu
cHV0AFByaW1lT3V0cHV0AG1fQ29udGV4dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15AGdldF9Bc3NlbWJs
eQAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABVE
AG8AYwBDAG8AbgB2AEkARAA9AAADPQAABQ0ACgAAB0UAbgBkAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAA1FAHIAcgBNAHMAZwAAAACf
Z+O6eBJ8Qb9Dagl/NdRgAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQB
Dg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcAARJtEYChBSAAEoClByACAQ4S
gKUDBwEIBQACDg4IBgADCA4OAgoABB0ODg4IEYCxBAABCA4GAAMcAhwcBAABCBwDIAAIBgADDg4O
DgsgAwESgI0dCBKAkQQGEoCNAwYdCAQgAQ4IBCABAggDBwECAyAAAgUgAgEIHAcgAgIOEYDJBSAB
HQgIBAcCCAgHAAIIEoCRDgQAARwcBAABARwEIAECHAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4ABAcB
EwAGFRI4ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoI
iYRdzYCAzJEHBhUSOAESDAcGFRI4ARIIBwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9AgYOAwYSKAMG
EiwDBhIgAgYIBAYSgJUDBhIwAgYcAwAAAQQAABIMBAAAEggEAAASZQQAABI0BAAAEnkEAAASfQUA
AQESfQUgAQESHAsgBAEIDhKAjRKAkQ0gBAEIHQgdEoCNEoCRBiABARKAlQQAABIwBCAAEm0HEAEB
HgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEjQECAASeQQIABJ9AygADgMoAAIDKAAIBAgA
EjAEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxOQAABQEAAQAAKQEAJGUxNDYwMmM1LTcyY2UtNDgzMy1hZGJhLTI4YTlhZjMwNjUx
YwAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAIAQABAAAAAAAYAQAKTXlUZW1w
bGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRw
Q2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQ
AQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5X
ZWJTZXJ2aWNlcwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwQQAAAAAAAAAAAACKQQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAfEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGYANgAxAGYANABmADEAMABhAGUAZAAxADQAZQAyADIAYgBmAGUAYwAyADAANgA5ADMANQBmADMA
MQA1ADcAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZgA2ADEAZgA0AGYAMQAwAGEA
ZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADYAMQBmADQA
ZgAxADAAYQBlAGQAMQA0AGUAMgAyAGIAZgBlAGMAMgAwADYAOQAzADUAZgAzADEANQA3AGEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZgA2ADEAZgA0AGYA
MQAwAGEAZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACcMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f61f4f10aed14e22bfec206935f3157a</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">EB</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg]"
                          hasSideEffects="true"
                          name="ErrMsg">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              name="ErrMsg" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              name="Doc ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]"
                              name="Step" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              name="Batch ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)[SUBSTRING](@[User::BatchName],2,99)</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)SUBSTRING(@[User::BatchName],2,99)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              dataType="ui1"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              name="Main Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::MainStep]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::MainStep]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              dataType="bool"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              name="Success"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Determine Elapse"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Determine Elapse"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d0ae6900-0a28-42af-b510-37615fc60ce1")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public BatchBuffer As BatchBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If BatchBuffer IsNot Nothing Then
            BatchBuffer.SetEndOfRowset
            BatchBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Batch") Then
                BatchBuffer = New BatchBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

    Public ReadOnly Property [BatchName]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("BatchName").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

    Public ReadOnly Property [ExecRoot]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("ExecRoot").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ReadOnly PeilDate As New DateTime(2019, 5, 1)
    Private PrevMoment As Long = 0
    Private ProcStart As Date, LicLoaded As Integer, LicSet As Integer

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim V() As String
        '    ComponentMetaData.FireWarning(1, Row.ID.ToString, Row.TimeStamp & ": " & PrevMoment.ToString, "", 0)
        V = Split(Row.TimeStamp, ".")

        If Row.ID <= 0 Then
            Select Case Row.Step
                Case "Start"
                    ProcStart = Convert.ToDateTime(Row.TimeStamp)
                Case "License loaded"
                    LicLoaded = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "License set", "No license set"
                    LicSet = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "End"
                    BatchBuffer.AddRow()
                    BatchBuffer.BatchID = Row.BatchID
                    BatchBuffer.Start = ProcStart
                    BatchBuffer.End = Convert.ToDateTime(Row.TimeStamp)
                    BatchBuffer.Status = 4
                    BatchBuffer.LicLoaded = LicLoaded
                    BatchBuffer.LicSet = LicSet
                    BatchBuffer.RefKey = 0
            End Select
        Else
            Row.Moment = Convert.ToDateTime(Row.TimeStamp)
            Row.Elapsed = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
        End If
        PrevMoment = GetMs(CDate(V(0)), CInt(V(1)))
    End Sub

    Private Function GetMs(D As Date, M As Int32) As Long
        GetMs = CLng((D - PeilDate).TotalSeconds * 1000 + M)
    End Function
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [TimeStamp]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [TimeStamp_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [ID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public ReadOnly Property [Step]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(2))
        End Get
    End Property
    Public ReadOnly Property [Step_IsNull] As Boolean
        Get
            Return IsNull(2)
        End Get
    End Property

    Public ReadOnly Property [BatchID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(3))
        End Get
    End Property
    Public ReadOnly Property [BatchID_IsNull] As Boolean
        Get
            Return IsNull(3)
        End Get
    End Property

    Public WriteOnly Property [Moment]() As DateTime
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Moment_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Elapsed]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Elapsed_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class BatchBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Start]() As DateTime
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Start_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [End]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [End_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Status]() As Byte
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Status_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [RefKey]() As Int32
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [RefKey_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [BatchID]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [BatchID_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicSet]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [LicSet_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicLoaded]() As Int32
        Set
            Me(6) = Value
        End Set
    End Property
    Public WriteOnly Property [LicLoaded_IsNull] As Boolean
        Set
            If (value)
                SetNull(6)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:DisplayName>
    <msb:ProjectId>{046B206C-5504-45DF-90B4-B297395E287B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ac4d6e4-cd2d-40be-a3d4-f10c3f51b1e0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</RootNamespace>
    <AssemblyName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP/zjV0AAAAAAAAAAOAAIiALAVAAACwAAAAIAAAAAAAAVkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAARKAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
SgAAAAAAAEgAAAACAAUAsCcAAJwhAAABAAAAAAAAAExJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqhgIoMAAABgIg4wcAABsXcyYAAAp9BwAABAIWan0IAAAE
KgATMAUAqgEAAAEAABEDbxAAAAZyMwAAcBUWKCcAAAoKA28SAAAGFj05AQAAA28UAAAGCwdyNwAA
cBYoKAAACiw9B3JDAABwFigoAAAKLEUHcmEAAHAWKCgAAAosYAdyeQAAcBYoKAAACixSB3KXAABw
FigoAAAKLG04HAEAAAIDbxAAAAYoKQAACn0JAAAEOAYBAAACAgYWmigqAAAKBheaKCsAAAooDgAA
BgJ7CAAABNq3fQoAAAQ43QAAAAICBhaaKCoAAAoGF5ooKwAACigOAAAGAnsIAAAE2rd9CwAABDi0
AAAAAnsOAAAEby0AAAYCew4AAAQDbxYAAAZvJwAABgJ7DgAABAJ7CQAABG8fAAAGAnsOAAAEA28Q
AAAGKCkAAApvIQAABgJ7DgAABBpvIwAABgJ7DgAABAJ7CgAABG8rAAAGAnsOAAAEAnsLAAAEbykA
AAYCew4AAAQWbyUAAAYrNQMDbxAAAAYoKQAACm8YAAAGAwIGFpooKgAACgYXmigrAAAKKA4AAAYC
ewgAAATat28aAAAGAgIGFpooKgAACgYXmigrAAAKKA4AAAZ9CAAABCoAABMwAgAqAAAAAgAAEQMC
ewcAAAQoLAAACgsSASgtAAAKIwAAAAAAQI9AWgRsWCguAAAKuQoGKioCAwQFKC8AAAoqUgJ7MAAA
CgJ7MQAAChaUbzIAAAoqIgIWKDMAAAoqUgJ7MAAACgJ7MQAACheUbzQAAAoqIgIXKDMAAAoqUgJ7
MAAACgJ7MQAAChiUbzIAAAoqIgIYKDMAAAoqUgJ7MAAACgJ7MQAAChmUbzQAAAoqIgIZKDMAAAoq
OgIaA4whAAABKDUAAAoqWgMsCAIaKDYAAAoqcp8AAHBzNwAACno6AhsDjDIAAAEoNQAACipaAywI
AhsoNgAACipynwAAcHM3AAAKegAAABMwAQAJAAAAAwAAEQIoOAAACgoGKgAAABMwAQAJAAAAAwAA
EQIoOQAACgoGKjoCFgOMIQAAASg1AAAKKloDLAgCFig2AAAKKnKfAABwczcAAAp6OgIXA4whAAAB
KDUAAAoqWgMsCAIXKDYAAAoqcp8AAHBzNwAACno6AhgDjDMAAAEoNQAACipaAywIAhgoNgAACipy
nwAAcHM3AAAKejoCGQOMMgAAASg1AAAKKloDLAgCGSg2AAAKKnKfAABwczcAAAp6OgIaA4wyAAAB
KDUAAAoqWgMsCAIaKDYAAAoqcp8AAHBzNwAACnpaAywIAhsoNgAACipynwAAcHM3AAAKejoCHAOM
MgAAASg1AAAKKloDLAgCHCg2AAAKKnKfAABwczcAAAp6HgIoOgAACioeAig7AAAKKhMwAQAJAAAA
AwAAEQIoOQAACgoGKpoCKDwAAAoCAnM4AAAGfQwAAAQCAnM5AAAGfQ0AAAQCFn0PAAAEKhMwBABP
AAAAAAAAAARyPAEAcBpvPQAACiwVAgUCAyg+AAAKDgRzDwAABm82AAAGBW8/AAAKLCMCAnsPAAAE
F9Z9DwAABAJ7DwAABBczDAJvMgAABgIoMwAABioGKm4Cew4AAAQsEgJ7DgAABG8uAAAGAhR9DgAA
BCoAAAATMAUAQQAAAAQAABEDF9oKFgsrLgQHlA4EckwBAHAoQAAACjMZAgUHmgIEB5QoPgAACg4E
cx4AAAZ9DgAABAcX1gsHBjHOAm81AAAGKkorBwIDbzcAAAYDbxwAAAYt8So6AigiAAAKAgN9EAAA
BCo6AigiAAAKAgN9EQAABCqWAnsRAAAEb0EAAApyWAEAcG9CAAAKKEMAAApvRAAACihFAAAKKpYC
exEAAARvQQAACnJsAQBwb0IAAAooQwAACm9EAAAKKEUAAAoqQnMiAAAKKEYAAAqAEwAABCoeAihH
AAAKKgAbMAEAPwAAAAAAAAB+EgAABC0yfhMAAAQoRgAACihIAAAKfhIAAAQtHHM9AAAGgBIAAATe
EH4TAAAEKEYAAAooSQAACtx+EgAABCoAARAAAAIAHQAMKQAQAAAAADYCAyhGAAAKKEoAAAoqHgIo
SwAACiou0A0AAAIoIwAACioeAihMAAAKKgAAEzABABQAAAAFAAARAowFAAAbLQgoAQAAKworAgIK
BioiA/4VBQAAGyoAAAATMAIAKAAAAAYAABECe04AAApvTwAACgoGjAgAABstEigCAAArCgJ7TgAA
CgZvUAAACgYqSgIoIgAACgJzUQAACn1OAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAEDgAAI34AAHAOAABADQAAI1N0cmluZ3MAAAAAsBsAAIABAAAjVVMAMB0AABAAAAAj
R1VJRAAAAEAdAABcBAAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJDwAAAPoBMwAWAAABAAAAPAAAAA4A
AAAUAAAARwAAACsAAABRAAAAPgAAAAYAAAAHAAAAJAAAACUAAAAIAAAAAQAAAAYAAAABAAAAAgAA
AAMAAAACAAAAAACOBQEAAAAAAAYABQQECgYArwQECgYA3AI0CQ8AqgoAAAYAHQNIBwYA6ANIBwYA
lgRIBwYAJQRIBwYAPgRIBwYAZANIBwYAWQS5BgYACQO+CQYAhQK+CQYAsANIBwYAfwMOBQoAqAKW
CAoAcAJ4BQoA8AJ4BQ4AOAKUCQ4A9AhYCQYAmAM0CQ4ANAPdCQ4ATAMBAQYAegu5Bg4A2giUCQ4A
zQMBAQYADwK5Bg4AOgBOBQoAkwLJBgYAfAgkCgYAhQckBxIAbwTrAQYA4gG5BgYASQW5BgYAwAa5
BhIAawjrARYAUAjrARIAkQfrARIA9AvrAQoASAIPBwYAvwI0CQYApAG5BgYANQ1IBw4A9AoBAQ4A
YgEBAQ4APQvdCQYAQgy5Bg4ADgvdCQYAWge5BgYAZwC5BgYAzQS5BgYAQgW5BgYAdAe5BhoAEQCu
CBoAAQCuCJ8AqQwAABoAIgCuCAYALgsECgYAHAn9BAYABQm5BgAAAACRAAAAAAABAAEAAAAAAAEH
/wxNAAEAAQAAAAAA8gj/DFEAAQACAAABEACBC/8MYQABAAMAAAAAAGYKNQphAAUACAABAAAA5gZt
ACQABwAMAAEAAABDCG0AkQAMAA8AAQAAAF8IbQCRAAwAHgABAAAA1gttAJ0ADAAwAAEAAAAaC20A
YQAQADgAAQAAAMUKbQBhABEAOQAAARAA/AptAKEAEgA8AAUBAACGCQAAYQAUAD8ABQEAAEkAAABh
ABQARgAxAAwIhgExAOMHjgExAPcHlgExACUIngERAP0IpgERACwCqgEhAGACrgEBAMsLswEBADgM
rgEBABsBtgEBAI8LtgEGABoLuQEGAMUKvQEGAF8IwQEBACUBtgEBAOQLxQEBAOQLxQERANIEygER
AHQLzgEhAIsMTgFQIAAAAAAGGA8JBgABAFggAAAAAAYYDwkGAAEAYCAAAAAAERgVCdEBAQCKIAAA
AAATCOUI1QEBAJYgAAAAABMI8QbaAQEAoiAAAAAAEwjWCN8BAQCuIAAAAAATCHYJ5AEBALogAAAA
AAMYDwkGAAEAwiAAAAAAFgh4COkBAQDuIAAAAAAWCBQC7gEBAPUgAAAAABYIIALzAQEA/SAAAAAA
BhgPCQYAAgAgIQAAAADGAuAM+QECANgiAAAAAAEALgn/AQMADiMAAAAABhgPCawABQAZIwAAAAAG
CNUHKwEIAC4jAAAAAAYIMQbaAAgANyMAAAAABgiaACcBCABMIwAAAAAGCLYF2gAIAFUjAAAAAAYI
zAcrAQgAaiMAAAAABgghBtoACABzIwAAAAAGCKEAJwEIAIgjAAAAAAYIxAXaAAgAkSMAAAAABgjA
CwcCCACgIwAAAAAGCGoGFQAJALcjAAAAAAYISAEBAAoAxiMAAAAABgj/BRUACwDgIwAAAACGAPcM
2gAMAPgjAAAAAIYAqQvaAAwADiMAAAAABhgPCawADAANJAAAAAAGCC4MBwIPABwkAAAAAAYIfAYV
ABAAMyQAAAAABghUAQcCEQBCJAAAAAAGCBIGFQASAFkkAAAAAAYIVQsOAhMAaCQAAAAABghGBhUA
FAB/JAAAAAAGCCYNAQAVAI4kAAAAAAYIjQYVABYApSQAAAAABgitAAEAFwC0JAAAAAAGCNcFFQAY
ALcjAAAAAAYIiwsBABkAyyQAAAAABghYBhUAGgDiJAAAAAAGCBcBAQAbAPEkAAAAAAYI6gUVABwA
CCUAAAAAhgDZDAYAHQAQJQAAAACGAKYLBgAdABglAAAAAIYAqQvaAB0ALSUAAAAABhgPCQYAHQBU
JQAAAADGAnIMEwIdAK8lAAAAAEYDRwsGACEAsSUAAAAAAQA0AQYAIQDQJQAAAADGAn8MHwIhAK8l
AAAAAEYDYAsGACUAHSYAAAAARgNrDPkBJQCvJQAAAABGA+AM+QEmADAmAAAAAAYYDwktAicAPyYA
AAAABhgPCS0CKABOJgAAAAAGCMgBKwEpAHQmAAAAAAYIBAwrASkAmiYAAAAAERgVCdEBKQCrJgAA
AAAGGA8JBgApALQmAAAAABYI2gQ0AikAECcAAAAAxgIHCyIBKQAeJwAAAADGApgBJwEqACYnAAAA
AIMADAI5AioAMicAAAAAxgI2BSsBKgA8JwAAAAARAOUAPgIqAFwnAAAAAAEA0QBGAisAuiAAAAAA
BhgPCQYALABoJwAAAAADCH8BSgAsAJwnAAAAAAYYDwkGACwAAAABAPcEAAABAPsMAAABAMsAAAAC
AM0AAAABAHEIAAACAM8KAAADAJ8HAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAHEIAAACAM8K
AAADAJ8HAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAAB
APcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABALkAAAACANYBAAADAHEIAAAEAJ8H
AAABAE0LAAACACQJAAADACYLAAAEAJ8HAAABAHEIAAABAPsMAAABAPoLAAABAPoLAAABAI8HAAAB
AI8BAAABAI8BCQAPCQEAEQAPCQYAGQAPCQoAKQAPCRAAMQAPCRAAOQAPCRAAQQAPCRAASQAPCRAA
UQAPCRAAWQAPCRUAYQAPCRUAaQAPCRAAcQAPCRAAeQAPCRAAgQAPCRoAkQAPCSAAqQAPCQYAsQAP
CQYAuQAPCQYA0QAPCSYA6QAPCRAAAQEPCQYASQEPCQYAmQAPCQYAoQAPCQYADAAPCQYAFAAPCQYA
HAAPCQYAJAAPCQYADAB/AUoAFAB/AUoAHAB/AUoAJAB/AUoAwQAPCQYA2QC2AU8A2QAxDVcA8QAP
CV0ACQEPCWUAYQG1C3IAcQEoBX0AeQHgAYQAgQFpAoQAgQGMCIsACQE5B5cAGQFHCaMAEQFcAacA
IQEPCawAIQFxCLgAIQHPCr0AKQE/BcEAIQGYBsYAKQFkAMsAIQGwBtAAIQGfBgEAiQEPCRAAIQH3
DNoAIQGpC9oAIQHZDAYAIQGmCwYAOQEPCQYAoQEHC94AOQHjCuYAKQGWC9oAOQHBAPEAOQG5CvkA
sQGnBv8AOQHEDAYBuQGVDAwBgQE2BRMB0QHuBBgBQQEPCQYA2QHfCB0B2QG7Cx0BwQAHCyIBwQCY
AScBwQA2BSsB4QFwATcBNACLDE4BPADaBEoAPADkBGUBPAAPCQYAKQCrABMELgALAIwCLgATAJUC
LgAbALQCLgAjAL0CLgArAOYCLgAzAOYCLgA7AL0CLgBDAOwCLgBLAOYCLgBTAAMDLgBbAOYCLgBj
AAkDLgBrADMDLgBzAEADQACLAIoDQACDAI8DQwB7AJgDQwCDAI8DSQCrACQEYwB7AJgDYwCDAI8D
aQCrADgEgACLAIoDgwCTAIoDgwCbAIoDgwB7AJgDiQCrAEUEoACLAIoDqQCDALQCwACLAIoDwwCz
AIoDwwBTAOYCyQCDALQC4ACLAIoD4wBTAOYCAwFTAOYCIwFTAOYCQwFTAOYCYwFTAOYCowGDAI8D
owGjALEDwwGDAI8DwwFbAOYCaQS7AIoDAAdTAOYCIAdTAOYC4AeDAI8D4AeLAIoDAAiDAI8DAAiL
AIoDIAiDAI8DIAiLAIoDQAiDAI8DQAiLAIoDYAiLAIoDgAiLAIoDoAiLAIoDoAiDAI8DwAiLAIoD
4AiLAIoD4AiDAI8DbACQANYA7AAvAUIBBAABAAUABQAHAAcACAATAAsAIQAMACMADgAkAAAA9AhO
AgAAAwdTAgAA2ghYAgAAiAldAgAAfAhiAgAAMAJnAgAA2QdsAgAANQZwAgAAygB0AgAA4AVwAgAA
0AdsAgAAJQZwAgAAsQB0AgAA2wVwAgAAzwt4AgAAbgZwAgAATAF0AgAAAwZwAgAAPAx4AgAAgAZw
AgAAWAF4AgAAFgZwAgAAWQt+AgAASgZwAgAAKg10AgAAkQZwAgAAsQB0AgAA2wVwAgAAjwt0AgAA
XAZwAgAAGwF0AgAA7gVwAgAAzAFsAgAACAxsAgAA9wSCAgAAgwGHAgIABAADAAIABQAFAAIABgAH
AAIABwAJAAIACQALAAIACgANAAEACwANAAIAEAAPAAIAEQARAAIAEgATAAIAEwAVAAIAFAAXAAIA
FQAZAAIAFgAbAAIAFwAdAAEAGAAfAAEAGQAhAAEAGgAjAAEAGwAlAAEAHwAnAAEAIAApAAEAIQAr
AAEAIgAtAAEAIwAvAAEAJAAxAAEAJQAzAAEAJgA1AAEAJwA3AAEAKAA5AAEAKQA7AAEAKgA9AAEA
KwA/AAEALABBAAIAOgBDAAIAOwBFAAIAPgBHAAIARgBJAC4ANQA8AEMANAFHAVYBXQEEgAAAAQAA
AAAAAAAAAAAAAABtAAAABAAAAAAAAAAAAAAAawH4AAAAAAAEAAAAAAAAAAAAAABrAbkGAAAAAAoA
AAAAAAAAAAAAAHQBAQEAAAAADgAAAAAAAAAAAAAAfQERDAAAAAAOAAAAAAAAAAAAAAB9AUoMAAAA
AA4AAAAAAAAAAAAAAH0BqQcAAAAAAAAAAAEAAAByCgAADQAEAA4ABAAAABAAHADPAAAAEACHAM8A
AAAAAIkAzwCbAD0BmwBgAQAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURU
U0V2YWx1YXRvckNvbnRleHQxMDAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3Zp
ZGVyYDEAR2V0SW50MzIAU0NfNWZlNDU0ZjllOWY0NGJhN2E1ZGY5YzEwZTVkNDk1YjQAPE1vZHVs
ZT4AZ2V0X0lEAGdldF9CYXRjaElEAHNldF9CYXRjaElEAElucHV0SUQAR2V0T3V0cHV0SUQATQBU
AERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAG1zY29ybGliAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYwBzZXRfTGljTG9hZGVkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmlu
aXNoZWQAc2V0X0VsYXBzZWQAc2V0X0VuZABSb3VuZABDb21wYXJlTWV0aG9kAENyZWF0ZUluc3Rh
bmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfQmF0Y2hOYW1lAElucHV0TmFtZQBUb0RhdGVUaW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAEdldFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAX3Jlc0N1bHR1cmUAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AFBlaWxEYXRlAFRvRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBL
ZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBD
b21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVB
dHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2Vt
Ymx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21w
bGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEJ5dGUA
bV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRp
bmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAEdldFN0
cmluZwBNYXRoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5kbGwA
Z2V0X0lEX0lzTnVsbABnZXRfQmF0Y2hJRF9Jc051bGwAc2V0X0JhdGNoSURfSXNOdWxsAHNldF9M
aWNMb2FkZWRfSXNOdWxsAHNldF9FbGFwc2VkX0lzTnVsbABzZXRfRW5kX0lzTnVsbABnZXRfU3Rl
cF9Jc051bGwAZ2V0X1RpbWVTdGFtcF9Jc051bGwAc2V0X1N0YXR1c19Jc051bGwAc2V0X0xpY1Nl
dF9Jc051bGwAc2V0X01vbWVudF9Jc051bGwAc2V0X1N0YXJ0X0lzTnVsbABzZXRfUmVmS2V5X0lz
TnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUaW1lU3BhbgBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRp
b24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rp
b24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21w
YXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRFRTUnVudGltZVdyYXAAZ2V0X1N0ZXAAZ2V0X1RpbWVTdGFtcABtX0FwcE9iamVjdFBy
b3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015
V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAQmF0
Y2hCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9JbnRlZ2VyAFN5c3Rl
bS5Db2RlRG9tLkNvbXBpbGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBl
cgBnZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEFjdGl2YXRv
cgAuY3RvcgAuY2N0b3IATW9uaXRvcgBPdXRwdXRJRHMAR2V0TXMAU3lzdGVtLkRpYWdub3N0aWNz
AGdldF9Ub3RhbFNlY29uZHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dlYlNl
cnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2Vy
dmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5NeS5SZXNvdXJj
ZXMATXlSZXNvdXJjZXMAU0NfNWZlNDU0ZjllOWY0NGJhN2E1ZGY5YzEwZTVkNDk1YjQuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFN0cmluZ3MATXlTZXR0aW5ncwBFcXVhbHMA
Q29udmVyc2lvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMA
RmluaXNoT3V0cHV0cwBzZXRfU3RhdHVzAENyZWF0ZU5ld091dHB1dFJvd3MAbV9TeW5jT2JqZWN0
AE15UHJvamVjdABzZXRfTGljU2V0AGdldF9FbmRPZlJvd3NldABTZXRFbmRPZlJvd3NldABTcGxp
dABFeGl0AHNldF9Nb21lbnQAUHJldk1vbWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVu
dABTY3JpcHRDb21wb25lbnQAZ2V0X0V4ZWNSb290AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3Jp
cHQAc2V0X1N0YXJ0AFByb2NTdGFydABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxp
bmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAbV9Db250ZXh0AEdldFZhbHVl
V2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRl
eHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBTQ181ZmU0NTRmOWU5ZjQ0
YmE3YTVkZjljMTBlNWQ0OTViNC5NeQBzZXRfUmVmS2V5AGdldF9Bc3NlbWJseQAAAAAxTQB5AC4A
UgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAAAMuAAALUwB0AGEAcgB0
AAAdTABpAGMAZQBuAHMAZQAgAGwAbwBhAGQAZQBkAAAXTABpAGMAZQBuAHMAZQAgAHMAZQB0AAAd
TgBvACAAbABpAGMAZQBuAHMAZQAgAHMAZQB0AAAHRQBuAGQAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAC0IAYQB0AGMAaAAAE0IAYQB0
AGMAaABOAGEAbQBlAAARRQB4AGUAYwBSAG8AbwB0AAAAAILDtQT3SQFIlydBG+eGKloABCABAQgD
IAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSOAESDAYVEjgBEggGFRI4
ARJlBhUSOAESNAQgABMABwABEm0RgKkFIAASgK0HIAIBDhKArQYgAwEICAgFBwIdDg4KAAQdDg4O
CBGAtQYAAwgODgIGAAERgIUOBAABCA4GBwIKEYCNCwACEYCNEYCFEYCFAyAADQQAAQ0NCyADARKA
lR0IEoCZBAYSgJUDBh0IBCABDggEIAECCAQgAQgIBSACAQgcAwcBAgMgAAIHIAICDhGA1QUgAR0I
CAQHAggIBwACCBKAmQ4FIAASgNkGIAESgN0cBQAAEoDhBiABHBKA5QQAAQ4cBAABHBwEAAEBHAQg
AQIcAyAACAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRI4ARMABwYVEnEBEwAGFRJxARMA
AhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEHBhUSOAESDAcGFRI4ARII
BwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9BAYRgIUCBgoCBggDBhIoAwYSLAMGEiAEBhKAnQMGEjAC
BhwDAAABBAAAEgwEAAASCAQAABJlBAAAEjQEAAASeQQAABJ9BQABARJ9BSABARIcByACChGAhQgG
IAEBEYCFBCABAQULIAQBCA4SgJUSgJkNIAQBCB0IHRKAlRKAmQYgAQESgJ0EAAASMAQgABJtBxAB
AR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABI0BAgAEnkECAASfQMoAA4DKAACAygACAUo
ABGAhQMoAAUECAASMAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNAAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDE5AAAFAQABAAApAQAkZDBhZTY5MDAtMGEyOC00MmFmLWI1MTAt
Mzc2MTVmYzYwY2UxAAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAgBAAEAAAAA
ABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2Nv
bHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5z
dGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNl
cgAAEwEADk15LldlYlNlcnZpY2VzAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAALEoAAAAAAAAAAAAARkoAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADhKAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1AGYA
ZQA0ADUANABmADkAZQA5AGYANAA0AGIAYQA3AGEANQBkAGYAOQBjADEAMABlADUAZAA0ADkANQBi
ADQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBlADkAZgA0
ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQBmAGUANAA1ADQAZgA5
AGUAOQBmADQANABiAGEANwBhADUAZABmADkAYwAxADAAZQA1AGQANAA5ADUAYgA0AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBl
ADkAZgA0ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAWDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_5fe454f9e9f44ba7a5df9c10e5d495b4</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::BatchName,$Package::ExecRoot</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">05</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[TimeStamp]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              name="Moment" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              name="Elapsed" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch]"
                          hasSideEffects="true"
                          name="Batch">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              name="Start" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]"
                              name="End" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              name="RefKey" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              name="LicSet" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              name="LicLoaded" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Doc Logging?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Doc Logging?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Nee]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Nee"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]} &lt;= 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ID &lt;= 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Error Status"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Error Status"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ErrorCodes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ErrorCodes]) [refTable]
where [refTable].[Name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Inserted" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Insert"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              name="Error Status ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Not Found]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Not Found"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Filter Onzin"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Filter Onzin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Correct Version]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Correct Version"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression"> FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression"> FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Zinvol]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Zinvol"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Known Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Known Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[No]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL([Error Status ID])</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge  Batch Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[RefKey]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicLoaded]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Doc Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">2</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              name="Doc ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\ProcessDetail"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ProcessDetail"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessDetails]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="ui1"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              dataType="dbTimeStamp"
                              name="Moment" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[FileSize_KB]"
                              dataType="i4"
                              name="FileSize_KB" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              dataType="i4"
                              name="Elapsed" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc/Klant]"
                              dataType="i4"
                              name="Doc/Klant" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Read Err"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Err"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Read Err.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Err]"
                          connectionManagerRefId="Package.ConnectionManagers[Err]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              length="4000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              name="Line"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="Line" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Read Log"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Log"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Read Log.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Log]"
                          connectionManagerRefId="Package.ConnectionManagers[Log]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              name="File"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              name="TimeStamp"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              name="Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TimeStamp" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set ErrCode Unexpected"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">8</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">8</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Error Code Name"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              name="ErrCode Description"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,8000,1252)([REPLACENULL](#{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]},"") == "" ? "No Error" : #{Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,8000,1252)(REPLACENULL(ErrMsg,"") == "" ? "No Error" : ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              name="RefKey"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[RefKey]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort ErrMsg"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Sort Log"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Log"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Step"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Step"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ProcessSteps]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ProcessSteps]) [refTable]
where [refTable].[Name] = ? and [refTable].[Main] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Sort" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Main" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMainStep" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]};#{Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Step.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input].Columns[Main Step]"
                              cachedDataType="ui1"
                              cachedName="Main Step"
                              lineageId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output].Columns[Main Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Main</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              name="Step ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Unexpected Errors"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Error" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[File]"
                              name="File" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              name="Step ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              name="Error Status ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              name="Moment" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\PDF\Update Batch"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Batch"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Batches] SET
  Status = ?
, ProcStart = ?
, ProcEnd = ?
, Error = ?
, Success = ?
, [License loaded] = ?
, [License set] = ?
WHERE ID = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Success]"
                              cachedDataType="bool"
                              cachedName="Success"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output].Columns[Success]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              lineageId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="ui1"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="dbTimeStamp"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              dataType="dbTimeStamp"
                              name="Param_2">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Param_3">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              dataType="bool"
                              name="Param_4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              dataType="i4"
                              name="Param_5">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              dataType="i4"
                              name="Param_6">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              dataType="i4"
                              name="Param_7">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\PDF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Batch]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort 1.Inputs[Sort Input]"
                      name="Batch"
                      startId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Batch]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Inputs[Input 0]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 2]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output2]"
                      endId="Package\For each finished batch\Load Log\PDF\Update Batch.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output3]"
                      endId="Package\For each finished batch\Load Log\PDF\Error Status.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[ErrMsg]"
                      endId="Package\For each finished batch\Load Log\PDF\Batch Error?.Inputs[Conditional Split Input]"
                      name="ErrMsg"
                      startId="Package\For each finished batch\Load Log\PDF\Concat.Outputs[ErrMsg]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Defaults.Inputs[Derived Column Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\PDF\Read Log.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Inputs[Conditional Split Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\PDF\Read Err.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Insert]"
                      endId="Package\For each finished batch\Load Log\PDF\Known Error?.Inputs[Conditional Split Input]"
                      name="Insert"
                      startId="Package\For each finished batch\Load Log\PDF\Error Status.Outputs[Insert]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Ja]"
                      endId="Package\For each finished batch\Load Log\PDF\Step.Inputs[Lookup Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Ja1]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort.Inputs[Sort Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Ja2]"
                      endId="Package\For each finished batch\Load Log\PDF\Union All.Inputs[Union All Input 1]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Lookup Match Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort Log.Inputs[Sort Input]"
                      name="Lookup Match Output"
                      startId="Package\For each finished batch\Load Log\PDF\Step.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Set Error Code Name.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 1]"
                      endId="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 2]"
                      endId="Package\For each finished batch\Load Log\PDF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 2"
                      startId="Package\For each finished batch\Load Log\PDF\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[No]"
                      endId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Inputs[Sort Input]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\PDF\Batch Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[No1]"
                      endId="Package\For each finished batch\Load Log\PDF\Multicast.Inputs[Multicast Input 1]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\PDF\Known Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Output 0]"
                      endId="Package\For each finished batch\Load Log\PDF\Doc Logging?.Inputs[Conditional Split Input]"
                      name="Output 0"
                      startId="Package\For each finished batch\Load Log\PDF\Determine Elapse.Outputs[Output 0]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort ErrMsg.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output1]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge Doc Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort Log.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output2]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort 1.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Sort Output3]"
                      endId="Package\For each finished batch\Load Log\PDF\Merge  Batch Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\PDF\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Union All Output 1]"
                      endId="Package\For each finished batch\Load Log\PDF\ProcessDetail.Inputs[OLE DB Destination Input]"
                      name="Union All Output 1"
                      startId="Package\For each finished batch\Load Log\PDF\Union All.Outputs[Union All Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\PDF.Paths[Zinvol]"
                      endId="Package\For each finished batch\Load Log\PDF\Concat.Inputs[Input 0]"
                      name="Zinvol"
                      startId="Package\For each finished batch\Load Log\PDF\Filter Onzin.Outputs[Zinvol]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\SAF"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{d30a7f28-9d3c-4c28-9ff9-63f7312b113c}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="SAF"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Concat"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Concat"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_c9cf6266c904420ab46fd31b8f865af5")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_c9cf6266c904420ab46fd31b8f865af5")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("a728c98a-3234-4a90-b239-68ee1778cc4c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public ErrMsgBuffer As ErrMsgBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If ErrMsgBuffer IsNot Nothing Then
            ErrMsgBuffer.SetEndOfRowset
            ErrMsgBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "ErrMsg") Then
                ErrMsgBuffer = New ErrMsgBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ErrMsg As String = vbNullString

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        On Error GoTo ErrHandler
        'ComponentMetaData.FireWarning(1, "Row", Row.Line, "", 0)
        If Left(Row.Line, 10) = "DocConvID=" Then
            ErrMsgBuffer.AddRow()
            ErrMsgBuffer.DocID = CInt(Split(Row.Line, "=")(1))
            If ErrMsg <> vbNullString Then ErrMsgBuffer.ErrMsg = Left(Mid(ErrMsg, vbNewLine.Length + 1), 8000)

            ErrMsg = vbNullString
        Else
            ErrMsg = ErrMsg & vbNewLine & Row.Line
        End If
        Exit Sub
ErrHandler:
        Debug.Print(Err.Description)
        Resume
    End Sub
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_c9cf6266c904420ab46fd31b8f865af5.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{44e000b8-da55-43ef-a0a3-bcac3f368318}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_c9cf6266c904420ab46fd31b8f865af5</RootNamespace>
    <AssemblyName>SC_c9cf6266c904420ab46fd31b8f865af5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class ErrMsgBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [ErrMsg]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [ErrMsg_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [DocID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [DocID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_c9cf6266c904420ab46fd31b8f865af5</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_c9cf6266c904420ab46fd31b8f865af5</msb:DisplayName>
    <msb:ProjectId>{697F1F47-E91D-4648-A58B-8C373CFDE8E4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_c9cf6266c904420ab46fd31b8f865af5.vbproj" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_c9cf6266c904420ab46fd31b8f865af5.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABbBi10AAAAAAAAAAOAAIiALAVAAACQAAAAIAAAAAAAAIkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANBBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAKCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAE
QgAAAAAAAEgAAAACAAUAnCUAAHwbAAABAAAAAAAAABhBAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqOgIoGwAABgIUfQcAAAQqGzAFAGkBAAABAAARKCYAAAoY
ChgMA28PAAAGHwooJwAACnIzAABwFigoAAAKLX0ZDAJ7CgAABG8YAAAGGgwCewoAAAQDbw8AAAZy
SQAAcBUWKCkAAAoXmigqAAAKbxYAAAYbDAJ7BwAABBQWKCgAAAosLhwMAnsKAAAEAnsHAAAEck0A
AHAoKwAAChfWKCwAAAogQB8AACgnAAAKbxQAAAYdDAIUfQcAAAQrNx8JDAICewcAAARyTQAAcANv
DwAABigtAAAKfQcAAAQrFh8LDCgmAAAKBy0QIBQACoAoLgAACnrdhAAAAAcrAwcXWBYLRQ0AAAAA
AAAA4/7//+r+//8G////E////zn///9K////eP///7r///+D////uv///6T///+6////3jYICwZF
AwAAAAAAAACs////jv///94gdTAAAAEU/gMGFv4DXwcW/gFf/hF0MAAAASgvAAAK3sogMwAKgCgu
AAAKegcsBSgmAAAKKgAAAEEcAAABAAAAAAAAADUBAABJAQAADAAAADUBAAAqAgMEBSgwAAAKKlIC
ezEAAAoCezIAAAoWlG8zAAAKKiICFig0AAAKKgAAABMwAQAJAAAAAgAAEQIoNQAACgoGKgAAABMw
AQAJAAAAAgAAEQIoNgAACgoGKiYCFgMoNwAACipaAywIAhYoOAAACipyUwAAcHM5AAAKejoCFwOM
MgAAASg3AAAKKloDLAgCFyg4AAAKKnJTAABwczkAAAp6HgIoOgAACioeAig7AAAKKhMwAQAJAAAA
AgAAEQIoNgAACgoGKpoCKDwAAAoCAnMjAAAGfQgAAAQCAnMkAAAGfQkAAAQCFn0LAAAEKhMwBABP
AAAAAAAAAARy8AAAcBpvPQAACiwVAgUCAyg+AAAKDgRzDgAABm8hAAAGBW8/AAAKLCMCAnsLAAAE
F9Z9CwAABAJ7CwAABBczDAJvHQAABgIoHgAABioGKm4CewoAAAQsEgJ7CgAABG8ZAAAGAhR9CgAA
BCoAAAATMAUAQQAAAAMAABEDF9oKFgsrLgQHlA4EcgABAHAoQAAACjMZAgUHmgIEB5QoPgAACg4E
cxMAAAZ9CgAABAcX1gsHBjHOAm8gAAAGKkorBwIDbyIAAAYDbxEAAAYt8So6AigiAAAKAgN9DAAA
BCo6AigiAAAKAgN9DQAABCpCcyIAAAooQQAACoAPAAAEKh4CKEIAAAoqABswAQA/AAAAAAAAAH4O
AAAELTJ+DwAABChBAAAKKEMAAAp+DgAABC0ccyYAAAaADgAABN4Qfg8AAAQoQQAACihEAAAK3H4O
AAAEKgABEAAAAgAdAAwpABAAAAAANgIDKEEAAAooRQAACioeAihGAAAKKi7QDQAAAigjAAAKKh4C
KEcAAAoqAAATMAEAFAAAAAQAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMwAgAo
AAAABQAAEQJ7SQAACm9KAAAKCgaMCAAAGy0SKAIAACsKAntJAAAKBm9LAAAKBipKAigiAAAKAnNM
AAAKfUkAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOQKAAAjfgAAUAsA
AAgLAAAjU3RyaW5ncwAAAABYFgAAEAEAACNVUwBoFwAAEAAAACNHVUlEAAAAeBcAAAQEAAAjQmxv
YgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA2AAAADgAAABAAAAAwAAAAGwAAAEwAAAA+
AAAABQAAAAYAAAAOAAAADwAAAAgAAAABAAAABQAAAAEAAAACAAAAAwAAAAIAAAAAABQFAQAAAAAA
BgB6A3AIBgAkBHAIBgBRArEHDwAWCQAABgCSAvcFBgBdA/cFBgALBPcFBgCaA/cFBgCzA/cFBgDZ
AvcFBgDOA4AFBgB+AioIBgD6ASoIBgAlA/cFBgD0An4ECgAdAgwHCgDlAf4ECgBlAv4EDgC9AQAI
DgBCB8QHBgANA7EHDgCpAkkIDgDBAroABgDWCYAFDgAoBwAIDgBCA7oABgCUAYAFDgABANQECgAI
AocFBgDyBpAIBgA0BuIFEgDkA3ABBgDEBIAFEgDhBnABFgDFBnABEgBABnABEgA0CnABCgDNAc0F
BgA0ArEHBgA5AYAFBgD9CvcFDgClAEkIDgBUCboADgCdCUkIDgD3ALoADgBuCUkIBgCyBIAFBgAZ
BoAFBgAJBoAFBgArAIAFBgAjBoAFBgCOCXAIBgCfB20EBgCIB4AFAAAAAFUAAAAAAAEAAQAAAAAA
vwXSCk0AAQABAAAAAABAB9IKUQABAAIAAAEQAN0J0gphAAEAAwAAAAAA0gihCGEABQAIAAEAAACk
BTEAJAAHAAwAAQAAALgGMQCJAAgADgABAAAA1AYxAIkACAATAAEAAAAWCjEAlQAIABsAAQAAAHoJ
MQBhAAwAIwABAAAAJQkxAGEADQAkAAABEABcCTEAmQAOACUABQEAAPIHAABhABAAKAAFAQAAEAAA
AGEAEAAvADEAgQZXATEAWAZfATEAbAZnATEAmgZvAREASwd3AREAsQF7AQEAvQR/AQYAegmCAQYA
JQmGAQYA1AaKAQEA0ACOAQEAJAqRAQEAJAqRAREAQgSWAREA0AmaASEAogofAVAgAAAAAAYYkgcG
AAEAWCAAAAAABhiSBwYAAQBgIAAAAAARGJgHawABAIogAAAAABMIMwedAQEAliAAAAAAEwivBaIB
AQCiIAAAAAATCCQHpwEBAK4gAAAAABMI4gesAQEAuiAAAAAAAxiSBwYAAQDCIAAAAAAWCO4GsQEB
AO4gAAAAABYImQG2AQEA9SAAAAAAFgilAbsBAQD9IAAAAAAGGJIHBgACAAwhAAAAAMYCswrBAQIA
oCIAAAAABhiSB6UAAwCrIgAAAAAGCGcB/AAGAMAiAAAAAAYITQXIAAYAzCIAAAAAhgDKCsgABgDk
IgAAAACGAPoJyAAGAKAiAAAAAAYYkgelAAYA+SIAAAAABgi5BBAACQADIwAAAAAGCF0FFQAKABoj
AAAAAAYIXgABAAsAKSMAAAAABgg8BRUADABAIwAAAACGAKwKBgANAEgjAAAAAIYA9wkGAA0AUCMA
AAAAhgD6CcgADQBlIwAAAAAGGJIHBgANAIwjAAAAAMYCiQrHAQ0A5yMAAAAARgOnCQYAEQDpIwAA
AAABAN8ABgARAAgkAAAAAMYClgrTAREA5yMAAAAARgO1CQYAFQBVJAAAAABGA4IKwQEVAOcjAAAA
AEYDswrBARYAaCQAAAAABhiSB+EBFwB3JAAAAAAGGJIH4QEYAIYkAAAAABEYmAdrABkAlyQAAAAA
BhiSBwYAGQCgJAAAAAAWCEoE6AEZAPwkAAAAAMYCZwn3ABkACiUAAAAAxgItAYwAGgASJQAAAACD
AJEB7QEaAB4lAAAAAMYCpgT8ABoAKCUAAAAAEQCSAPIBGgBIJQAAAAABAH4A+gEbALogAAAAAAYY
kgcGABwAVCUAAAAAAwgUAUoAHACIJQAAAAAGGJIHBgAcAAAAAQBnBAAAAQDOCgAAAQDnBgAAAgAv
CQAAAwBOBgAAAQDnBgAAAgAvCQAAAwBOBgAAAQBnBAAAAQBnBAAAAQBnBAAAAQBnBAAAAQBoAAAA
AgBdAQAAAwDnBgAABABOBgAAAQCtCQAAAgCnBwAAAwCGCQAABABOBgAAAQDnBgAAAQDOCgAAAQA6
CgAAAQA6CgAAAQA+BgAAAQAkAQAAAQAkAQkAkgcBABEAkgcGABkAkgcKACkAkgcQADEAkgcQADkA
kgcQAEEAkgcQAEkAkgcQAFEAkgcQAFkAkgcVAGEAkgcVAGkAkgcQAHEAkgcQAHkAkgcQAIEAkgca
AJEAkgcgAKkAkgcGALEAkgcGALkAkgcGANEAkgcmAOkAkgcQAAEBkgcGADkBkgcGAJkAkgcGAKEA
kgcGAAwAkgcGABQAkgcGABwAkgcGACQAkgcGAAwAFAFKABQAFAFKABwAFAFKACQAFAFKAMEAkgcG
ANkASwFPANkA+QpXAPEAkgddAFEBZgdrAFkBBgpvAGEBmAR1AFkBCwp8AHEBAgeHAHkByQSMAFkB
8wBvAHkByQmQAFEBUweXAFEBeAeeABEBkgelABEB5waxABEBLwm2ABkBrwS6ABEBaAW/ABEBygrI
ABEB+gnIABEBdwXMABEBbwUBAIkBkgcQABEBrAoGABEB9wkGACkBkgcGAHkBZwnSACkBQwnaABkB
5wnIACkBcADlAKEBXgTtADEBkgcGAKkBLQfyAKkBEQryAMEAZwn3AMEALQGMAMEApgT8ALEBBQEI
ATQAogofATwASgRKADwAVAQ2ATwAkgcGACkAqwC9Ay4ACwA2Ai4AEwA/Ai4AGwBeAi4AIwBnAi4A
KwCQAi4AMwCQAi4AOwBnAi4AQwCWAi4ASwCQAi4AUwCtAi4AWwCQAi4AYwCzAi4AawDdAi4AcwDq
AkAAiwA0A0AAgwA5A0MAewBCA0MAgwA5A0kAqwDOA2MAewBCA2MAgwA5A2kAqwDiA4AAiwA0A4MA
kwA0A4MAmwA0A4MAewBCA4kAqwDvA6AAiwA0A6kAgwBeAsAAiwA0A8MAswA0A8MAUwCQAskAgwBe
AuAAiwA0A+MAUwCQAgMBUwCQAiMBUwCQAkMBUwCQAmMBUwCQAqMBgwA5A6MBowBbA6kBuwA0A8MB
gwA5A8MBWwCQAmAEUwCQAoAEUwCQAgAFgwA5AwAFiwA0AyAFgwA5AyAFiwA0A0AFgwA5A0AFiwA0
A2AFgwA5A2AFiwA0A4AFiwA0A6AFiwA0A8AFiwA0A8AFgwA5A+AFiwA0AwAGiwA0AwAGgwA5A2UA
xADgAAABEwEEAAEABQAFAAcABwAIAAkADAANAA4ADgAAAEIHAgIAAMEFBwIAACgHDAIAAPQHEQIA
APIGFgIAALUBGwIAAGsBIAIAAFEFJAIAAL0EIAIAAGEFJAIAAGIAKAIAAEAFJAIAAGcELAIAABgB
MQICAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQABAAsADQACAA8ADwACABAAEQAB
ABQAEwABABUAFQABABYAFwABABcAGQACACcAGwACAC8AHQAuADUAPABDAAUBGAEnAS4BBIAAAAEA
AAAAAAAAAAAAAAAAMQAAAAQAAAAAAAAAAAAAADwBsQAAAAAABAAAAAAAAAAAAAAAPAGABQAAAAAK
AAAAAAAAAAAAAABFAboAAAAAAA4AAAAAAAAAAAAAAE4BRAoAAAAADgAAAAAAAAAAAAAATgFhCgAA
AAAAAAAAAQAAAN4IAAANAAQADgAEAAAAEAAcAHwAAAAQAFkAfAAAAAAAWwB8AJEADgGRADEBAAAA
Q29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEASW50MzIAU0NfYzljZjYy
NjZjOTA0NDIwYWI0NmZkMzFiOGY4NjVhZjUAPE1vZHVsZT4Ac2V0X0RvY0lEAElucHV0SUQAR2V0
T3V0cHV0SUQAVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwBQcm9qZWN0
RGF0YQBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMASW5wdXRzRmluaXNoZWQATWFya091
dHB1dHNGaW5pc2hlZABNaWQAQ29tcGFyZU1ldGhvZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5z
dGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUASW5wdXROYW1lAGdldF9MaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AEdldFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAQXBwbGljYXRpb25C
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAEd1aWRBdHRy
aWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBTdGFu
ZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5BdHRy
aWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5U
aHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5n
AEdldFN0cmluZwBzZXRfRXJyTXNnAE1hdGgAZ2V0X0xlbmd0aABNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfYzljZjYyNjZj
OTA0NDIwYWI0NmZkMzFiOGY4NjVhZjUuZGxsAHNldF9Eb2NJRF9Jc051bGwAZ2V0X0xpbmVfSXNO
dWxsAHNldF9FcnJNc2dfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFN5c3RlbS5Db21w
b25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlv
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAbV9BcHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmpl
Y3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJvdmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0
UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAEVyck1zZ0J1ZmZlcgBTY3JpcHRC
dWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0ludGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGls
ZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBDcmVhdGVQ
cm9qZWN0RXJyb3IAQ2xlYXJQcm9qZWN0RXJyb3IAU2V0UHJvamVjdEVycm9yAEFjdGl2YXRvcgAu
Y3RvcgAuY2N0b3IATW9uaXRvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jv
c29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVy
b3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYzljZjYyNjZjOTA0
NDIwYWI0NmZkMzFiOGY4NjVhZjUuTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNDX2M5Y2Y2MjY2
YzkwNDQyMGFiNDZmZDMxYjhmODY1YWY1LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTdHJpbmdz
AE15U2V0dGluZ3MARXF1YWxzAENvbnZlcnNpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMAUnVudGlt
ZUhlbHBlcnMAT3BlcmF0b3JzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25j
YXQAbV9TeW5jT2JqZWN0AE15UHJvamVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQA
TGVmdABTcGxpdABFeGl0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAbV9Db250ZXh0AEFkZFJv
dwBJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAU0NfYzljZjYyNjZjOTA0NDIwYWI0NmZk
MzFiOGY4NjVhZjUuTXkAZ2V0X0Fzc2VtYmx5AAAAADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAu
AE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAFUQAbwBjAEMAbwBuAHYASQBEAD0AAAM9AAAFDQAKAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAA
AA1FAHIAcgBNAHMAZwAAAAACS0f4VYy1SIf3gr45ZgM9AAQgAQEIAyAAAQUgAQEREQQgAQEOBCAB
AQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcA
ARJtEYChBSAAEoClByACAQ4SgKUFBwMICAgDAAABBQACDg4IBgADCA4OAgoABB0ODg4IEYC1BAAB
CA4DIAAIBgADDg4ODgYAARKAwQgGAAEBEoDBCyADARKAjR0IEoCRBAYSgI0DBh0IBCABDggEIAEC
CAMHAQIDIAACBSACAQgcByACAg4RgM0FIAEdCAgEBwIICAcAAggSgJEOBAABHBwEAAEBHAQgAQIc
AyAADgQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEjgBEwAHBhUScQETAAYVEnEBEwACEwAECgET
AAUgAQETAAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQcGFRI4ARIMBwYVEjgBEggHBhUSOAES
ZQcGFRI4ARI0AwYSeQMGEn0CBg4DBhIoAwYSLAMGEiACBggEBhKAlQMGEjACBhwEAAASDAQAABII
BAAAEmUEAAASNAQAABJ5BAAAEn0FAAEBEn0FIAEBEhwLIAQBCA4SgI0SgJENIAQBCB0IHRKAjRKA
kQYgAQESgJUEAAASMAQgABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABI0BAgA
EnkECAASfQMoAA4DKAACAygACAQIABIwBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2M5Y2Y2MjY2YzkwNDQyMGFiNDZmZDMxYjhmODY1
YWY1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAAUBAAEAACkBACRhNzI4Yzk4YS0zMjM0
LTRhOTAtYjIzOS02OGVlMTc3OGNjNGMAAAwBAAcxLjAuMC4wAABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQB
AAAACAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEBADRTeXN0ZW0uV2ViLlNlcnZp
Y2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNE
aXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24A
AAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA+EEAAAAAAAAA
AAAAEkIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARCAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
YwA5AGMAZgA2ADIANgA2AGMAOQAwADQANAAyADAAYQBiADQANgBmAGQAMwAxAGIAOABmADgANgA1
AGEAZgA1AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBjADkAYwBmADYAMgA2ADYAYwA5
ADAANAA0ADIAMABhAGIANAA2AGYAZAAzADEAYgA4AGYAOAA2ADUAYQBmADUALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGMAOQBjAGYANgAy
ADYANgBjADkAMAA0ADQAMgAwAGEAYgA0ADYAZgBkADMAMQBiADgAZgA4ADYANQBhAGYANQAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBjADkAYwBmADYAMgA2
ADYAYwA5ADAANAA0ADIAMABhAGIANAA2AGYAZAAzADEAYgA4AGYAOAA2ADUAYQBmADUAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_c9cf6266c904420ab46fd31b8f865af5</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">14</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg]"
                          hasSideEffects="true"
                          name="ErrMsg">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              name="ErrMsg" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              name="Doc ID" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]"
                              name="Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,50,1252)"End"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,50,1252)"End"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              name="Batch ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)[SUBSTRING](@[User::BatchName],2,99)</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)SUBSTRING(@[User::BatchName],2,99)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              dataType="ui1"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              name="Main Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::MainStep]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::MainStep]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Determine Elapse"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Determine Elapse"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1524eeec902345afb3af34218bd72cb8.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7740cf9e-e6a8-4740-9e09-699134683bc3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_1524eeec902345afb3af34218bd72cb8</RootNamespace>
    <AssemblyName>SC_1524eeec902345afb3af34218bd72cb8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_1524eeec902345afb3af34218bd72cb8")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_1524eeec902345afb3af34218bd72cb8")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("ee4356d7-ccee-4b5b-88bd-f135028bb369")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public BatchBuffer As BatchBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If BatchBuffer IsNot Nothing Then
            BatchBuffer.SetEndOfRowset
            BatchBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Batch") Then
                BatchBuffer = New BatchBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

    Public ReadOnly Property [BatchName]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("BatchName").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

    Public ReadOnly Property [ExecRoot]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("ExecRoot").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ReadOnly PeilDate As New DateTime(Year(Now), Month(Now), DateAndTime.Day(Now))
    Private PrevMoment As Long
    Private ProcStart As Date
    Private GenErr As String

    Public Overrides Sub PreExecute()
        MyBase.PreExecute()

        Dim FILE_NAME As String = Variables.ExecRoot & "\03-Finished\" & Variables.BatchName & ".GenErr"
        Dim objReader As New System.IO.StreamReader(FILE_NAME)

        GenErr = vbNullString
        Do While objReader.Peek() <> -1
            GenErr = GenErr & vbNewLine & objReader.ReadLine()
            If GenErr.Length > 8000 Then Exit Do
        Loop
        objReader.Close()

        PrevMoment = 0 : GenErr = Left(GenErr, 8000)
    End Sub

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim V() As String
        On Error GoTo ErrHandler
        ' ComponentMetaData.FireWarning(1, Row.ID.ToString, Row.TimeStamp & ": " & PrevMoment.ToString, "", 0)
        V = Split(Row.TimeStamp, ".")

        If Row.ID = 0 Then
            Select Case Row.Status
                Case "Start"
                    ProcStart = Convert.ToDateTime(Row.TimeStamp)
                Case "End"
                    BatchBuffer.AddRow()
                    BatchBuffer.BatchID = Row.BatchID
                    BatchBuffer.Start = ProcStart
                    BatchBuffer.End = Convert.ToDateTime(Row.TimeStamp)
                    BatchBuffer.Status = 4

                    If GenErr = vbNullString Then
                        BatchBuffer.Success = True
                    Else
                        BatchBuffer.Success = False
                        BatchBuffer.GenErr = Mid(GenErr, Len(vbNewLine) + 1)
                    End If
            End Select
        Else
            Row.Moment = Convert.ToDateTime(Row.TimeStamp)
            Row.Elapsed = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
        End If
        PrevMoment = GetMs(CDate(V(0)), CInt(V(1)))
        Exit Sub
ErrHandler:
        ComponentMetaData.FireError(1, Row.ID.ToString, Err.Description, "", 0, True)
        ' Resume
    End Sub

    Private Function GetMs(D As Date, M As Int32) As Long
        GetMs = CLng((D - PeilDate).TotalSeconds * 1000 + M)
    End Function
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [ID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [TimeStamp]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [TimeStamp_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public ReadOnly Property [Status]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(2))
        End Get
    End Property
    Public ReadOnly Property [Status_IsNull] As Boolean
        Get
            Return IsNull(2)
        End Get
    End Property

    Public ReadOnly Property [BatchID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(3))
        End Get
    End Property
    Public ReadOnly Property [BatchID_IsNull] As Boolean
        Get
            Return IsNull(3)
        End Get
    End Property

    Public WriteOnly Property [Elapsed]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Elapsed_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Moment]() As DateTime
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Moment_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class BatchBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Status]() As Byte
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Status_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [End]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [End_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Start]() As DateTime
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Start_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [GenErr]() As String
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [GenErr_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [BatchID]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [BatchID_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Success]() As Boolean
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Success_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_1524eeec902345afb3af34218bd72cb8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_1524eeec902345afb3af34218bd72cb8</msb:DisplayName>
    <msb:ProjectId>{8317F2CA-0419-42B6-AED2-9959F4751147}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_1524eeec902345afb3af34218bd72cb8.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1524eeec902345afb3af34218bd72cb8.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANTqjV0AAAAAAAAAAOAAIiALAVAAAC4AAAAIAAAAAAAAPk0A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOxMAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARC0AAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
TQAAAAAAAEgAAAACAAUAfCgAALgjAAABAAAAAAAAADRMAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqwgIoLwAABgIoJgAACignAAAKKCYAAAooKAAACigmAAAK
KCkAAApzKgAACn0HAAAEKgAAEzAEAJgAAAABAAARAigrAAAKAnsMAAAEbzoAAAZyMwAAcAJ7DAAA
BG85AAAGck8AAHAoLAAACgoGcy0AAAoLAhR9CgAABCsuAgJ7CgAABHJfAABwB28uAAAKKC8AAAp9
CgAABAJ7CgAABG8wAAAKIEAfAAAwCQdvMQAAChUzyQdvMgAACgIWan0IAAAEAgJ7CgAABCBAHwAA
KDMAAAp9CgAABCobMAcAzgEAAAIAABEoNAAAChgKA28TAAAGcmUAAHAVFig1AAAKDANvEQAABjra
AAAAA28VAAAGDQlyaQAAcBYoNgAACiwTCXJ1AABwFig2AAAKLBs45wAAAAIDbxMAAAYoNwAACn0J
AAAEONEAAAACew0AAARvLAAABgJ7DQAABANvFwAABm8oAAAGAnsNAAAEAnsJAAAEbyQAAAYCew0A
AAQDbxMAAAYoNwAACm8iAAAGAnsNAAAEGm8gAAAGAnsKAAAEFBYoNgAACi0OAnsNAAAEF28qAAAG
K2UCew0AAAQWbyoAAAYCew0AAAQCewoAAARyXwAAcCg4AAAKF9YoOQAACm8mAAAGKzUDA28TAAAG
KDcAAApvGwAABgMCCBaaKDoAAAoIF5ooOwAACigPAAAGAnsIAAAE2rdvGQAABgICCBaaKDoAAAoI
F5ooOwAACigPAAAGfQgAAAQrMAIoPAAAChcDbxEAAAYTBRIFKD0AAAooPgAACm8/AAAKcn0AAHAW
FxMEEgRvQAAACt5BFQsGRQMAAAAAAAAAAAAAALr////eIHU5AAABFP4DBhb+A18HFv4BX/4RdDkA
AAEoQQAACt7KIDMACoAoQgAACnoHLAUoNAAACioAAEEcAAABAAAAAAAAAJoBAACuAQAADAAAAJoB
AAATMAIAKgAAAAMAABEDAnsHAAAEKEMAAAoLEgEoRAAACiMAAAAAAECPQFoEbFgoRQAACrkKBioq
AgMEBShGAAAKKlICe0cAAAoCe0gAAAoWlG9JAAAKKiICFihKAAAKKlICe0cAAAoCe0gAAAoXlG9L
AAAKKiICFyhKAAAKKlICe0cAAAoCe0gAAAoYlG9LAAAKKiICGChKAAAKKlICe0cAAAoCe0gAAAoZ
lG9JAAAKKiICGShKAAAKKjoCGgOMNgAAAShMAAAKKloDLAgCGihNAAAKKnJ/AABwc04AAAp6OgIb
A4whAAABKEwAAAoqWgMsCAIbKE0AAAoqcn8AAHBzTgAACnoAAAATMAEACQAAAAQAABECKE8AAAoK
BioAAAATMAEACQAAAAQAABECKFAAAAoKBio6AhYDjDsAAAEoTAAACipaAywIAhYoTQAACipyfwAA
cHNOAAAKejoCFwOMIQAAAShMAAAKKloDLAgCFyhNAAAKKnJ/AABwc04AAAp6OgIYA4whAAABKEwA
AAoqWgMsCAIYKE0AAAoqcn8AAHBzTgAACnomAhkDKEwAAAoqWgMsCAIZKE0AAAoqcn8AAHBzTgAA
CnpaAywIAhooTQAACipyfwAAcHNOAAAKejoCGwOMPAAAAShMAAAKKloDLAgCGyhNAAAKKnJ/AABw
c04AAAp6HgIoUQAACioeAihSAAAKKgAAABMwAQAJAAAABAAAEQIoUAAACgoGKpoCKFMAAAoCAnM3
AAAGfQsAAAQCAnM4AAAGfQwAAAQCFn0OAAAEKhMwBABPAAAAAAAAAARyHAEAcBpvVAAACiwVAgUC
AyhVAAAKDgRzEAAABm81AAAGBW9WAAAKLCMCAnsOAAAEF9Z9DgAABAJ7DgAABBczDAJvMQAABgIo
MgAABioGKm4Cew0AAAQsEgJ7DQAABG8tAAAGAhR9DQAABCoAAAATMAUAQQAAAAUAABEDF9oKFgsr
LgQHlA4EciwBAHAoVwAACjMZAgUHmgIEB5QoVQAACg4Ecx8AAAZ9DQAABAcX1gsHBjHOAm80AAAG
KkorBwIDbzYAAAYDbx0AAAYt8So6AigiAAAKAgN9DwAABCo6AigiAAAKAgN9EAAABCqWAnsQAAAE
b1gAAApyOAEAcG9ZAAAKKFoAAApvWwAACihcAAAKKpYCexAAAARvWAAACnJMAQBwb1kAAAooWgAA
Cm9bAAAKKFwAAAoqQnMiAAAKKF0AAAqAEgAABCoeAiheAAAKKgAbMAEAPwAAAAAAAAB+EQAABC0y
fhIAAAQoXQAACihfAAAKfhEAAAQtHHM8AAAGgBEAAATeEH4SAAAEKF0AAAooYAAACtx+EQAABCoA
ARAAAAIAHQAMKQAQAAAAADYCAyhdAAAKKGEAAAoqHgIoYgAACiou0A0AAAIoIwAACioeAihjAAAK
KgAAEzABABQAAAAGAAARAowFAAAbLQgoAQAAKworAgIKBioiA/4VBQAAGyoAAAATMAIAKAAAAAcA
ABECe2UAAApvZgAACgoGjAgAABstEigCAAArCgJ7ZQAACgZvZwAACgYqSgIoIgAACgJzaAAACn1l
AAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACcDgAAI34AAAgPAACQDgAA
I1N0cmluZ3MAAAAAmB0AAGABAAAjVVMA+B4AABAAAAAjR1VJRAAAAAgfAACwBAAAI0Jsb2IAAAAA
AAAAAgAAAVcVogkJDwAAAPoBMwAWAAABAAAARAAAAA4AAAATAAAARgAAACkAAABoAAAAPgAAAAcA
AAAHAAAAIgAAACMAAAAIAAAAAQAAAAcAAAABAAAAAgAAAAMAAAACAAAAAAAFBgEAAAAAAAYAWwQx
CwYABQUxCwYAMgNhCg8A1wsAAAYAcwPFBwYAPgTFBwYA7ATFBwYAewTFBwYAlATFBwYAugPFBwYA
rwQeBwYAXwPrCgYA2wLrCgYABgTFBwYA1QNvBQoA/gJQCQoAxgLvBQoARgPvBQ4AiALBCg4A1wmF
CgYA7gNhCg4AigMKCw4AogNGAQYAzwweBw4AvQnBCg4AIwRGAQYAXwIeBw4AUwDFBQoA6QI6BwYA
NglRCwYAEgihBxIAxQQ7AgYAKQIeBwYAqgUeBwYAkAjoAAYALQceBxIAJQk7AhYACgk7AhIAHgg7
AhIAQw07AgoAmAKMBwYAFQNhCgYA3wEeBwYAhQ7FBw4AGwJGAQYAowUeBw4AIQxGAQ4AMQEKCw4A
nQFGAQ4AagwKCwYAkQ0eBw4AOwwKCxoAAQCQCQYAgAAeBw4AgAdGAQ4AzAxGAQYA5wceBwYA1wce
BwYALgUeBwYAJQceBwYAAQgeBx4AKgBoCR4AGgBoCaMA+A0AAB4AOwBoCQYAWwwxCwYAPgpeBQYA
JwoeBwAAAACqAAAAAAABAAEAAAAAAHIHVg5NAAEAAQAAAAAA1QlWDlEAAQACAAABEADWDFYOYQAB
AAMAAAAAAJMLYgthAAUACAABAAAAVweGACQABwAMAAEAAAD9CIYAlQALABAAAQAAABkJhgCVAAsA
HwABAAAAJQ2GAKEACwAvAAEAAABHDIYAYQAPADcAAQAAAPILhgBhABAAOAAAARAAKQyGAKUAEQA7
AAUBAACzCgAAYQATAD4ABQEAAGIAAABhABMARQAxAMYI3AExAJ0I5AExALEI7AExAN8I9AERAOAJ
/AERAHwCAAIhALYCBAIBABoNCQIBAIcNBAIBAEoKDAIGAEcMDwIGAPILEwIGABkJFwIBAFwBGwIB
ADMNHgIBADMNHgIRADMFIwIRAL8MJwIhANoNpAFQIAAAAAAGGDEKBgABAFggAAAAAAYYMQoGAAEA
YCAAAAAAERg3CqcAAQCKIAAAAAATCMgJKgIBAJYgAAAAABMIYgcvAgEAoiAAAAAAEwi5CTQCAQCu
IAAAAAATCKMKOQIBALogAAAAAAMYMQoGAAEAwiAAAAAAFggyCT4CAQDuIAAAAAAWCGQCQwIBAPUg
AAAAABYIcAJIAgEA/SAAAAAABhgxCgYAAgAwIQAAAADGAiMFBgACANQhAAAAAMYCNw5OAgIAzCMA
AAAAAQBbClQCAwACJAAAAAAGGDEKCgEFAA0kAAAAAAYIswCTAAgAIiQAAAAABggtBjgBCAArJAAA
AAAGCH0IiAAIAEAkAAAAAAYIgwY4AQgASSQAAAAABgiODIgACABeJAAAAAAGCL0GOAEIAGckAAAA
AAYIugCTAAgAfCQAAAAABgg7BjgBCACFJAAAAAAGCH8BAQAIAJQkAAAAAAYIYQYVAAkAqyQAAAAA
BggPDVwCCgC6JAAAAAAGCOEGFQALANQkAAAAAIYATg44AQwA7CQAAAAAhgDzDDgBDAACJAAAAAAG
GDEKCgEMAAElAAAAAAYImQxjAg8AECUAAAAABgjPBhUAEAAnJQAAAAAGCI8BXAIRADYlAAAAAAYI
dAYVABIATSUAAAAABgh9DVwCEwBcJQAAAAAGCPMGFQAUAHMlAAAAAAYIRgoQABUAfSUAAAAABgiY
BhUAFgCFJAAAAAAGCMYAAQAXAJQlAAAAAAYITgYVABgAqyUAAAAABgh0DBUAGQC6JQAAAAAGCKoG
FQAaANElAAAAAIYAMA4GABsA2SUAAAAAhgDwDAYAGwDkJQAAAACGAPMMOAEbAPklAAAAAAYYMQoG
ABsAICYAAAAAxgLBDWgCGwB7JgAAAABGA4AMBgAfAH0mAAAAAAEAawEGAB8AnCYAAAAAxgLODXQC
HwB7JgAAAABGA6QMBgAjAOkmAAAAAEYDug1OAiMAeyYAAAAARgM3Dk4CJAD8JgAAAAAGGDEKggIl
AAsnAAAAAAYYMQqCAiYAGicAAAAABggDAogAJwBAJwAAAAAGCFMNiAAnAGYnAAAAABEYNwqnACcA
dycAAAAABhgxCgYAJwCAJwAAAAAWCDsFiQInANwnAAAAAMYCNAyAAScA6icAAAAAxgLTAZMAKADy
JwAAAACDAFwCjgIoAP4nAAAAAMYClwWIACgACCgAAAAAEQAIAZMCKAAoKAAAAAABAPQAmwIpALog
AAAAAAYYMQoGACoANCgAAAAAAwi6AUoAKgBoKAAAAAAGGDEKBgAqAAAAAQBYBQAAAQBSDgAAAQDk
AAAAAgDmAAAAAQArCQAAAgD8CwAAAwAsCAAAAQBYBQAAAQBYBQAAAQBYBQAAAQBYBQAAAQArCQAA
AgD8CwAAAwAsCAAAAQBYBQAAAQBYBQAAAQBYBQAAAQBYBQAAAQBYBQAAAQBYBQAAAQBYBQAAAQBY
BQAAAQBYBQAAAQBYBQAAAQBYBQAAAQBYBQAAAQDSAAAAAgARAgAAAwArCQAABAAsCAAAAQCGDAAA
AgBRCgAAAwBTDAAABAAsCAAAAQArCQAAAQBSDgAAAQBJDQAAAQBJDQAAAQAcCAAAAQDKAQAAAQDK
AQkAMQoBABEAMQoGABkAMQoKACkAMQoQADEAMQoQADkAMQoQAEEAMQoQAEkAMQoQAFEAMQoQAFkA
MQoVAGEAMQoVAGkAMQoQAHEAMQoQAHkAMQoQAIEAMQoaAJEAMQogAKkAMQoGALEAMQoGALkAMQoG
ANEAMQomAOkAMQoQAAEBMQoGAFEBMQoGAJkAMQoGAKEAMQoGAAwAMQoGABQAMQoGABwAMQoGACQA
MQoGAAwAugFKABQAugFKABwAugFKACQAugFKAMEAMQoGANkA8QFPANkAgQ5XAPEAMQpdAGkBKA5l
AGkBiwhrAGkBugVrAGkBfQ5rAAkBMQpyAEEBIwUGAHEBuAyAABkBMQoQABkBMgKIAHEBuAyMAHEB
rwWTABkBwAWTABkBsAIGAHkB/wyXAIEBBQqnAHkBBA2rAJEBiQW2AJkBJwK9AHkBNgfEAHkBiwGX
AKEBvwK9AKEBRgnEAEEBGwHJALEBlwWIALkBTQrPAMEB8QeIAKkB6AnVAIEBFwrgAIEB8gnnAAkB
tgf1ACEBdAoBAREBlwEFASkBMQoKASkBKwkWASkB/AsbATEBfQAfASkB/QYkATEBoAUpASkBFQcu
ASkBBAcBANEBMQoQACkBTg44ASkB8ww4ASkBMA4GACkB8AwGAEEBMQoGAHEBNAw8AUEBEAxEATEB
4Aw4AUEB2gBPAUEB5gtXAfEBDAddAUEBEw5kAfkB5A1qAaEBlwVxARECTwV2AUkBMQoGABkCwgl7
ARkCCg17AcEANAyAAcEA0wGTAMEAlwWIACECqwGNATQA2g2kATwAOwVKADwARQW7ATwAMQoGACkA
qwBoBC4ACwDhAi4AEwDqAi4AGwAJAy4AIwASAy4AKwA7Ay4AMwA7Ay4AOwASAy4AQwBBAy4ASwA7
Ay4AUwBYAy4AWwA7Ay4AYwBeAy4AawCIAy4AcwCVA0AAiwDfA0AAgwDkA0MAewDtA0MAgwDkA0kA
qwB5BGMAewDtA2MAgwDkA2kAqwCNBIAAiwDfA4MAkwDfA4MAmwDfA4MAewDtA4kAqwCaBKAAiwDf
A6kAgwAJA8AAiwDfA8MAswDfA8MAUwA7A8kAgwAJA+AAiwDfA+MAUwA7AwMBUwA7AyMBUwA7A0MB
UwA7A2MBUwA7A6MBgwDkA6MBowAGBMMBgwDkA8MBWwA7AykEuwDfA+AGUwA7AwAHUwA7A8AHgwDk
A8AHiwDfA+AHgwDkA+AHiwDfAwAIgwDkAwAIiwDfAyAIgwDkAyAIiwDfA0AIiwDfA2AIiwDfA4AI
iwDfA4AIgwDkA6AIiwDfA8AIiwDfA8AIgwDkA3kAnQDuADQBSgGFAZgBBAABAAUABQAHAAcACAAT
AAsAHwAMACEADgAiAAAA1wmjAgAAdAeoAgAAvQmtAgAAtQqyAgAANgm3AgAAgAK8AgAA4wDBAgAA
VwbFAgAAgQjJAgAAhwbFAgAAnQzJAgAA0wbFAgAAygDBAgAAUgbFAgAAgwHBAgAAZQbFAgAAHg3N
AgAA5QbFAgAAnQzTAgAA0wbFAgAAkwHNAgAAeAbFAgAAiw3NAgAA9wbFAgAASgrJAgAAnAbFAgAA
ygDBAgAAUgbFAgAAeAzFAgAArgbFAgAABwLJAgAAVw3JAgAAWAXXAgAAvgHcAgIABAADAAIABQAF
AAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIAEQAPAAIAEgARAAIAEwATAAIAFAAVAAIA
FQAXAAIAFgAZAAIAFwAbAAIAGAAdAAEAGQAfAAEAGgAhAAEAGwAjAAEAHAAlAAEAIAAnAAEAIQAp
AAEAIgArAAEAIwAtAAEAJAAvAAEAJQAxAAEAJgAzAAEAJwA1AAEAKAA3AAEAKQA5AAEAKgA7AAEA
KwA9AAIAOQA/AAIAOgBBAAIAPQBDAAIARQBFAC4ANQA8AEMAigGdAawBswEEgAAAAQAAAAAAAAAA
AAAAAACGAAAABAAAAAAAAAAAAAAAwQE9AQAAAAAEAAAAAAAAAAAAAADBAR4HAAAAAAoAAAAAAAAA
AAAAAMoBRgEAAAAADgAAAAAAAAAAAAAA0wFgDQAAAAAOAAAAAAAAAAAAAADTAZkNAAAAAA4AAAAA
AAAAAAAAANMBWQgAAAAADgAAAAAAAAAAAAAA0wE2CAAAAAAAAAAAAQAAAJ8LAAANAAQADgAEAAAA
EAAcAPIAAAAQAIUA8gAAAAAAhwDyAMkAkwHJALYBAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGEx
MDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQx
MDAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3ZpZGVyYDEAR2V0SW50MzIAU0Nf
MTUyNGVlZWM5MDIzNDVhZmIzYWYzNDIxOGJkNzJjYjgAPE1vZHVsZT4AZ2V0X0lEAGdldF9CYXRj
aElEAHNldF9CYXRjaElEAElucHV0SUQAR2V0T3V0cHV0SUQATQBTeXN0ZW0uSU8AVABEaXNwb3Nl
X19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwBnZXRfQ29tcG9uZW50TWV0YURhdGEAUHJv
amVjdERhdGEAbXNjb3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAElucHV0c0ZpbmlzaGVkAE1h
cmtPdXRwdXRzRmluaXNoZWQAc2V0X0VsYXBzZWQATWlkAHNldF9FbmQAUm91bmQAQ29tcGFyZU1l
dGhvZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0JhdGNoTmFtZQBJbnB1dE5h
bWUARGF0ZUFuZFRpbWUAVG9EYXRlVGltZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZQBHZXRUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAEFw
cGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBQZWlsRGF0ZQBUb0Rh
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0
ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVN
b2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9u
QXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRl
AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAEJ5dGUAbV9W
YWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAEdldFN0cmlu
ZwBNYXRoAGdldF9MZW5ndGgATW9udGgAUGVlawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2
aWNlcy5JbnRlcm5hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMTUyNGVlZWM5MDIzNDVhZmIz
YWYzNDIxOGJkNzJjYjguZGxsAGdldF9JRF9Jc051bGwAZ2V0X0JhdGNoSURfSXNOdWxsAHNldF9C
YXRjaElEX0lzTnVsbABzZXRfRWxhcHNlZF9Jc051bGwAc2V0X0VuZF9Jc051bGwAZ2V0X1RpbWVT
dGFtcF9Jc051bGwAc2V0X0dlbkVycl9Jc051bGwAc2V0X1N1Y2Nlc3NfSXNOdWxsAGdldF9TdGF0
dXNfSXNOdWxsAHNldF9TdGF0dXNfSXNOdWxsAHNldF9Nb21lbnRfSXNOdWxsAHNldF9TdGFydF9J
c051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AQm9vbGVhbgBUaW1lU3BhbgBM
ZW4AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlv
bgBNeUFwcGxpY2F0aW9uAEluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVy
YXRpb25FeGNlcHRpb24AZ2V0X0Rlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1l
V3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABnZXRfVGltZVN0YW1wAFll
YXIAU3RyZWFtUmVhZGVyAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIA
bV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAElu
cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBCYXRjaEJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBUb0ludGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lLldyYXBwZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVyAE15Q29tcHV0ZXIAX3Jl
c01ncgBGaXJlRXJyb3IAQ3JlYXRlUHJvamVjdEVycm9yAENsZWFyUHJvamVjdEVycm9yAFNldFBy
b2plY3RFcnJvcgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAc2V0X0dlbkVycgBPdXRw
dXRJRHMAR2V0TXMAU3lzdGVtLkRpYWdub3N0aWNzAGdldF9Ub3RhbFNlY29uZHMATWljcm9zb2Z0
LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dlYlNlcnZpY2VzAE15V2ViU2VydmljZXMATWljcm9z
b2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJv
cFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18xNTI0ZWVlYzkwMjM0
NWFmYjNhZjM0MjE4YmQ3MmNiOC5NeS5SZXNvdXJjZXMATXlSZXNvdXJjZXMAU0NfMTUyNGVlZWM5
MDIzNDVhZmIzYWYzNDIxOGJkNzJjYjguUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFN0cmluZ3MATXlTZXR0aW5ncwBFcXVhbHMAQ29udmVyc2lvbnMAQ29ubmVjdGlvbnMAQnVm
ZmVycwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMAc2V0X1N1Y2Nlc3MARmluaXNoT3V0cHV0cwBn
ZXRfU3RhdHVzAHNldF9TdGF0dXMAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQAbV9TeW5jT2Jq
ZWN0AEVyck9iamVjdABNeVByb2plY3QAZ2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AExl
ZnQAU3BsaXQARXhpdABzZXRfTW9tZW50AFByZXZNb21lbnQAVXNlckNvbXBvbmVudABQYXJlbnRD
b21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9FeGVjUm9vdABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AHNldF9TdGFydABQcm9jU3RhcnQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFByaW1lT3V0cHV0AG1fQ29udGV4dABH
ZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0
b3JDb250ZXh0AGdldF9Ob3cAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBT
Q18xNTI0ZWVlYzkwMjM0NWFmYjNhZjM0MjE4YmQ3MmNiOC5NeQBEYXkAZ2V0X0Fzc2VtYmx5AAAA
ADFNAHkALgBSAGUAcwBvAHUAcgBjAGUAcwAuAE0AeQBSAGUAcwBvAHUAcgBjAGUAcwAAG1wAMAAz
AC0ARgBpAG4AaQBzAGgAZQBkAFwAAQ8uAEcAZQBuAEUAcgByAAAFDQAKAAADLgAAC1MAdABhAHIA
dAAAB0UAbgBkAAABAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8A
dAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2
AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAP
SQBuAHAAdQB0ACAAMAAAC0IAYQB0AGMAaAAAE0IAYQB0AGMAaABOAGEAbQBlAAARRQB4AGUAYwBS
AG8AbwB0AAAAAJnIJQrNOK1EhaJsCAc/FcYABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEO
DgUgAQERRQcgBAEODg4OBhUSOAESDAYVEjgBEggGFRI4ARJlBhUSOAESNAQgABMABwABEm0RgK0F
IAASgLEHIAIBDhKAsQUAABGAhQYAAQgRgIUGIAMBCAgIBgcCDhKAjQcABA4ODg4OAyAADgYAAw4O
Dg4DIAAIBQACDg4ICQcGCAgdDg4CCAMAAAEKAAQdDg4OCBGAxQYAAwgODgIGAAERgIUOBAABCA4F
IAASgNUFAAASgOEKIAYBCA4ODggQAgYAAQESgOUGAAESgOUIBgcCChGAkQsAAhGAkRGAhRGAhQMg
AA0EAAENDQsgAwESgJkdCBKAnQQGEoCZAwYdCAQgAQgIBCABAggEIAEOCAUgAgEIHAMHAQIDIAAC
ByACAg4RgPUFIAEdCAgEBwIICAcAAggSgJ0OBSAAEoD5BiABEoD9HAUAABKBAQYgARwSgQUEAAEO
HAQAARwcBAABARwEIAECHAQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEjgBEwAHBhUScQETAAYV
EnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQcGFRI4ARIMBwYV
EjgBEggHBhUSOAESZQcGFRI4ARI0AwYSeQMGEn0EBhGAhQIGCgIGDgMGEigDBhIsAwYSIAIGCAQG
EoChAwYSMAIGHAQAABIMBAAAEggEAAASZQQAABI0BAAAEnkEAAASfQUAAQESfQUgAQESHAcgAgoR
gIUIBiABARGAhQQgAQEFCyAEAQgOEoCZEoCdDSAEAQgdCB0SgJkSgJ0GIAEBEoChBAAAEjAEIAAS
bQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASNAQIABJ5BAgAEn0DKAAIAygAAgMo
AA4FKAARgIUDKAAFBAgAEjAEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfMTUyNGVlZWM5MDIzNDVhZmIzYWYzNDIxOGJkNzJjYjgAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAABQEAAQAAKQEAJGVlNDM1NmQ3LWNjZWUtNGI1Yi04
OGJkLWYxMzUwMjhiYjM2OQAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAIAQAB
AAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJv
dG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2Vf
X0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015
LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAFE0AAAAAAAAAAAAALk0A
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBNAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAA
AAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADEANQAy
ADQAZQBlAGUAYwA5ADAAMgAzADQANQBhAGYAYgAzAGEAZgAzADQAMgAxADgAYgBkADcAMgBjAGIA
OAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAAB
AEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQA1ADIANABlAGUAZQBjADkAMAAyADMA
NAA1AGEAZgBiADMAYQBmADMANAAyADEAOABiAGQANwAyAGMAYgA4AC4AZABsAGwAAABIABIAAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIA
MAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxADUAMgA0AGUAZQBlAGMA
OQAwADIAMwA0ADUAYQBmAGIAMwBhAGYAMwA0ADIAMQA4AGIAZAA3ADIAYwBiADgALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMQA1ADIANABlAGUAZQBjADkA
MAAyADMANAA1AGEAZgBiADMAYQBmADMANAAyADEAOABiAGQANwAyAGMAYgA4AAAANAAIAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABAPQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_1524eeec902345afb3af34218bd72cb8</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::BatchName,$Package::ExecRoot</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">E3</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[TimeStamp]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              name="Moment" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch]"
                          hasSideEffects="true"
                          name="Batch">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[End]"
                              name="End" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Start]"
                              name="Start" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[GenErr]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[GenErr]"
                              name="GenErr" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Success]"
                              dataType="bool"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Success]"
                              name="Success" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Doc Logging?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Doc Logging?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Nee]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Nee"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]} == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ID == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Error Status"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Error Status"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ErrorCodes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ErrorCodes]) [refTable]
where [refTable].[Name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Inserted" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Insert"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              name="Error Status ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Not Found]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Not Found"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Filter Onzin"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Filter Onzin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Correct Version]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Correct Version"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]} == "\tPlease verify that you are using the correct version of SSEUNZIP."</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">Line == "\tPlease verify that you are using the correct version of SSEUNZIP."</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[One File]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="One File"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]} == "Unzipped 1 files."</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">Line == "Unzipped 1 files."</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Zinvol]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Zinvol"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Known Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Known Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[No]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL([Error Status ID])</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 4]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 4"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 5]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 5"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\ProcessDetail"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ProcessDetail"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessDetails]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="ui1"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              dataType="dbTimeStamp"
                              name="Moment" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[FileSize_KB]"
                              dataType="i4"
                              name="FileSize_KB" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              dataType="i4"
                              name="Elapsed" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc/Klant]"
                              dataType="i4"
                              name="Doc/Klant" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Read Err"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Err"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Read Err.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Err]"
                          connectionManagerRefId="Package.ConnectionManagers[Err]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              length="4000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              name="Line"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="Line" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Read Log"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Log"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Read Log.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Log]"
                          connectionManagerRefId="Package.ConnectionManagers[Log]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              name="File"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              name="TimeStamp"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TimeStamp" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set ErrCode Unexpected"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">8</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">8</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Error Code Name"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              name="ErrCode Description"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,8000,1252)(#{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Status]} == "Unzipped" || [ISNULL](#{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]}) ? "No Error" : #{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]} == "SSEUNZIP: Unable to open '" + #{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]} + "'." ? "SSEUNZIP: Unable to open '@SafFile'." : #{Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,8000,1252)(Status == "Unzipped" || ISNULL(ErrMsg) ? "No Error" : ErrMsg == "SSEUNZIP: Unable to open '" + File + "'." ? "SSEUNZIP: Unable to open '@SafFile'." : ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort ErrMsg"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Sort Log"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Log"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Step"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Step"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ProcessSteps]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ProcessSteps]) [refTable]
where [refTable].[Name] = ? and [refTable].[Main] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Sort" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Main" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMainStep" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]};#{Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Step.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input].Columns[Main Step]"
                              cachedDataType="ui1"
                              cachedName="Main Step"
                              lineageId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output].Columns[Main Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Main</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              name="Step ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Unexpected Errors"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Error" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[File]"
                              name="File" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              name="Step ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              name="Error Status ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              name="Moment" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\SAF\Update Batch"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Batch"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Batches] SET
  Status = ?
, ProcStart = ?
, ProcEnd = ?
, Error = ?
, Success = ?
WHERE ID = ?
or id = (select max(id) from Batches)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[GenErr]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="GenErr"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[GenErr]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Success]"
                              cachedDataType="bool"
                              cachedName="Success"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Success]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              lineageId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="ui1"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="dbTimeStamp"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              dataType="dbTimeStamp"
                              name="Param_2">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Param_3">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              dataType="bool"
                              name="Param_4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              dataType="i4"
                              name="Param_5">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\SAF\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Batch]"
                      endId="Package\For each finished batch\Load Log\SAF\Update Batch.Inputs[OLE DB Command Input]"
                      name="Batch"
                      startId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Batch]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Error Status.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output1]"
                      endId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 2]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output2]"
                      endId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Inputs[Input 0]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\SAF\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[ErrMsg]"
                      endId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Inputs[Sort Input]"
                      name="ErrMsg"
                      startId="Package\For each finished batch\Load Log\SAF\Concat.Outputs[ErrMsg]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Inputs[Conditional Split Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\SAF\Read Err.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output1]"
                      endId="Package\For each finished batch\Load Log\SAF\Defaults.Inputs[Derived Column Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\SAF\Read Log.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Insert]"
                      endId="Package\For each finished batch\Load Log\SAF\Known Error?.Inputs[Conditional Split Input]"
                      name="Insert"
                      startId="Package\For each finished batch\Load Log\SAF\Error Status.Outputs[Insert]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Ja1]"
                      endId="Package\For each finished batch\Load Log\SAF\Step.Inputs[Lookup Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Ja]"
                      endId="Package\For each finished batch\Load Log\SAF\Union All.Inputs[Union All Input 1]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Lookup Match Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Sort Log.Inputs[Sort Input]"
                      name="Lookup Match Output"
                      startId="Package\For each finished batch\Load Log\SAF\Step.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Merge Join Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Set Error Code Name.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\SAF\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 1]"
                      endId="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 2]"
                      endId="Package\For each finished batch\Load Log\SAF\Unexpected Errors.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 2"
                      startId="Package\For each finished batch\Load Log\SAF\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[No]"
                      endId="Package\For each finished batch\Load Log\SAF\Multicast.Inputs[Multicast Input 1]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\SAF\Known Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Output 0]"
                      endId="Package\For each finished batch\Load Log\SAF\Doc Logging?.Inputs[Conditional Split Input]"
                      name="Output 0"
                      startId="Package\For each finished batch\Load Log\SAF\Determine Elapse.Outputs[Output 0]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Sort Output1]"
                      endId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\SAF\Sort ErrMsg.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Sort Output]"
                      endId="Package\For each finished batch\Load Log\SAF\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\SAF\Sort Log.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Union All Output 1]"
                      endId="Package\For each finished batch\Load Log\SAF\ProcessDetail.Inputs[OLE DB Destination Input]"
                      name="Union All Output 1"
                      startId="Package\For each finished batch\Load Log\SAF\Union All.Outputs[Union All Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\SAF.Paths[Zinvol]"
                      endId="Package\For each finished batch\Load Log\SAF\Concat.Inputs[Input 0]"
                      name="Zinvol"
                      startId="Package\For each finished batch\Load Log\SAF\Filter Onzin.Outputs[Zinvol]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Load Log\XML"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{d6c9e348-71e9-4d19-a19c-8219b8e075a7}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="XML"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Batch Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Batch Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Ja]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]} == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">[Doc ID] == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[No]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Concat"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Concat"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{cb1f493a-4194-4276-8679-f040bb536b21}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_f61f4f10aed14e22bfec206935f3157a</RootNamespace>
    <AssemblyName>SC_f61f4f10aed14e22bfec206935f3157a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_f61f4f10aed14e22bfec206935f3157a")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e14602c5-72ce-4833-adba-28a9af30651c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public ErrMsgBuffer As ErrMsgBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If ErrMsgBuffer IsNot Nothing Then
            ErrMsgBuffer.SetEndOfRowset
            ErrMsgBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "ErrMsg") Then
                ErrMsgBuffer = New ErrMsgBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ErrMsg As String = vbNullString

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim ID As Integer
        If Left(Row.Line, 10) = "DocConvID=" Then
            ID = CInt(Split(Row.Line, "=")(1))
            ErrMsgBuffer.AddRow()
            ErrMsgBuffer.DocID = CInt(IIf(ID < 0, 0, ID))
            ErrMsgBuffer.ErrMsg = Mid(ErrMsg, vbNewLine.Length + 1)
            ErrMsgBuffer.Step = "End"

            ErrMsg = vbNullString
        Else
            ErrMsg = ErrMsg & vbNewLine & Row.Line
        End If
    End Sub
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [Line]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [Line_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class ErrMsgBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [ErrMsg]() As String
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [ErrMsg_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [DocID]() As Int32
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [DocID_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Step]() As String
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Step_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f61f4f10aed14e22bfec206935f3157a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f61f4f10aed14e22bfec206935f3157a</msb:DisplayName>
    <msb:ProjectId>{DA5B2E82-84EF-47F0-8BC2-A8DA6E821CB0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f61f4f10aed14e22bfec206935f3157a.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f61f4f10aed14e22bfec206935f3157a.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABf0/FwAAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAmkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhBAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
QQAAAAAAAEgAAAACAAUA9CQAAJwbAAABAAAAAAAAAJBAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqOgIoHQAABgIUfQcAAAQqEzAEAL4AAAABAAARA28PAAAG
HwooJgAACnIzAABwFignAAAKOoQAAAADbw8AAAZySQAAcBUWKCgAAAoXmigpAAAKCgJ7CgAABG8a
AAAGAnsKAAAEBhb+BBaMLgAAAQaMLgAAASgqAAAKKCsAAApvFgAABgJ7CgAABAJ7BwAABHJNAABw
KCwAAAoX1igtAAAKbxQAAAYCewoAAARyUwAAcG8YAAAGAhR9BwAABCoCAnsHAAAEck0AAHADbw8A
AAYoLgAACn0HAAAEKioCAwQFKC8AAAoqUgJ7MAAACgJ7MQAAChaUbzIAAAoqIgIWKDMAAAoqABMw
AQAJAAAAAgAAEQIoNAAACgoGKgAAABMwAQAJAAAAAgAAEQIoNQAACgoGKiYCFgMoNgAACipaAywI
AhYoNwAACipyWwAAcHM4AAAKejoCFwOMLgAAASg2AAAKKloDLAgCFyg3AAAKKnJbAABwczgAAAp6
JgIYAyg2AAAKKloDLAgCGCg3AAAKKnJbAABwczgAAAp6HgIoOQAACioeAig6AAAKKgAAABMwAQAJ
AAAAAgAAEQIoNQAACgoGKpoCKDsAAAoCAnMlAAAGfQgAAAQCAnMmAAAGfQkAAAQCFn0LAAAEKhMw
BABPAAAAAAAAAARy+AAAcBpvPAAACiwVAgUCAyg9AAAKDgRzDgAABm8jAAAGBW8+AAAKLCMCAnsL
AAAEF9Z9CwAABAJ7CwAABBczDAJvHwAABgIoIAAABioGKm4CewoAAAQsEgJ7CgAABG8bAAAGAhR9
CgAABCoAAAATMAUAQQAAAAMAABEDF9oKFgsrLgQHlA4EcggBAHAoPwAACjMZAgUHmgIEB5QoPQAA
Cg4EcxMAAAZ9CgAABAcX1gsHBjHOAm8iAAAGKkorBwIDbyQAAAYDbxEAAAYt8So6AigiAAAKAgN9
DAAABCo6AigiAAAKAgN9DQAABCpCcyIAAAooQAAACoAPAAAEKh4CKEEAAAoqABswAQA/AAAAAAAA
AH4OAAAELTJ+DwAABChAAAAKKEIAAAp+DgAABC0ccygAAAaADgAABN4Qfg8AAAQoQAAACihDAAAK
3H4OAAAEKgABEAAAAgAdAAwpABAAAAAANgIDKEAAAAooRAAACioeAihFAAAKKi7QDQAAAigjAAAK
Kh4CKEYAAAoqAAATMAEAFAAAAAQAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMw
AgAoAAAABQAAEQJ7SAAACm9JAAAKCgaMCAAAGy0SKAIAACsKAntIAAAKBm9KAAAKBipKAigiAAAK
AnNLAAAKfUgAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABgLAAAjfgAA
hAsAAPAKAAAjU3RyaW5ncwAAAAB0FgAAGAEAACNVUwCMFwAAEAAAACNHVUlEAAAAnBcAAAAEAAAj
QmxvYgAAAAAAAAACAAABVxWiCQkPAAAA+gEzABYAAAEAAAA1AAAADgAAABAAAAAyAAAAHQAAAEsA
AAA+AAAABQAAAAYAAAAQAAAAEQAAAAgAAAABAAAABQAAAAEAAAACAAAAAwAAAAIAAAAAAAwFAQAA
AAAABgBuA1gIBgAYBFgIBgBFApkHDwD+CAAABgCGAgsGBgBRAwsGBgD/AwsGBgCOAwsGBgCnAwsG
BgDNAgsGBgDCA4gFBgByAhIIBgDuARIIBgAZAwsGBgDoAnYECgARAikHCgDZAfYECgBZAvYEDgCx
AegHDgBfB6wHBgABA5kHDgCdAjEIDgC1Aq4ABgC+CYgFDgBFB+gHDgA2A64ABgCIAYgFDgABAMwE
CgD8AY8FBgAPB3gIBgBIBuoFEgDYA2QBBgC8BIgFEgD+BmQBFgDiBmQBEgBUBmQBEgAcCmQBCgDB
AdUFBgAoApkHBgAtAYgFBgDlCgsGDgA8Ca4ADgCFCTEIDgDrAK4ADgBWCTEIBgArAIgFDgD/Ba4A
BgCqBIgFBgAdBogFBgA3BogFBgB2CVgIBgCHB2UEBgBwB4gFAAAAADEAAAAAAAEAAQAAAAAAxwW6
Ck0AAQABAAAAAABdB7oKUQABAAIAAAEQAMUJugphAAEAAwAAAAAAugiJCGEABQAIAAEAAACsBYEA
JAAHAAwAAQAAANUGgQCJAAgADgABAAAA8QaBAIkACAATAAEAAAD+CYEAlQAIAB0AAQAAAGIJgQBh
AAwAJQABAAAADQmBAGEADQAmAAABEABECYEAmQAOACcABQEAANoHAABhABAAKgAFAQAAEAAAAGEA
EAAxADEAngZPATEAdQZXATEAiQZfATEAtwZnAREAaAdvAREApQFzAQEAtQR3AQYAYgl6AQYADQl+
AQYA8QaCAQEAxACGAQEADAqJAQEADAqJAREANgSOAREAuAmSASEAigoXAVAgAAAAAAYYegcGAAEA
WCAAAAAABhh6BwYAAQBgIAAAAAARGIAHlQEBAIogAAAAABMIUAeZAQEAliAAAAAAEwi3BZ4BAQCi
IAAAAAATCEEHowEBAK4gAAAAABMIygeoAQEAuiAAAAAAAxh6BwYAAQDCIAAAAAAWCAsHrQEBAO4g
AAAAABYIjQGyAQEA9SAAAAAAFgiZAbcBAQD9IAAAAAAGGHoHBgACAAwhAAAAAMYCmwq9AQIA1iEA
AAAABhh6B50AAwDhIQAAAAAGCFsB9AAGAPYhAAAAAAYIRQXAAAYAACIAAAAAhgCyCsAABgAYIgAA
AACGAOIJwAAGANYhAAAAAAYYegedAAYALSIAAAAABgixBBAACQA3IgAAAAAGCFUFFQAKAE4iAAAA
AAYIOgABAAsAXSIAAAAABgg0BRUADAB0IgAAAAAGCGwGEAANAH4iAAAAAAYIZwUVAA4AlSIAAAAA
hgCUCgYADwCdIgAAAACGAN8JBgAPAKgiAAAAAIYA4gnAAA8AvSIAAAAABhh6BwYADwDkIgAAAADG
AnEKwwEPAD8jAAAAAEYDjwkGABMAQSMAAAAAAQDTAAYAEwBgIwAAAADGAn4KzwETAD8jAAAAAEYD
nQkGABcArSMAAAAARgNqCr0BFwA/IwAAAABGA5sKvQEYAMAjAAAAAAYYegfdARkAzyMAAAAABhh6
B90BGgDeIwAAAAARGIAHlQEbAO8jAAAAAAYYegcGABsA+CMAAAAAFgg+BOQBGwBUJAAAAADGAk8J
7wAbAGIkAAAAAMYCIQGSABwAaiQAAAAAgwCFAekBHAB2JAAAAADGAp4E9AAcAIAkAAAAABEAbgDu
ARwAoCQAAAAAAQBaAPYBHQC6IAAAAAAGGHoHBgAeAKwkAAAAAAMICAFKAB4A4CQAAAAABhh6BwYA
HgAAAAEAWwQAAAEAtgoAAAEABAcAAAIAFwkAAAMAYgYAAAEABAcAAAIAFwkAAAMAYgYAAAEAWwQA
AAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEAWwQAAAEARAAAAAIAUQEAAAMABAcAAAQAYgYAAAEA
lQkAAAIAjwcAAAMAbgkAAAQAYgYAAAEABAcAAAEAtgoAAAEAIgoAAAEAIgoAAAEAUgYAAAEAGAEA
AAEAGAEJAHoHAQARAHoHBgAZAHoHCgApAHoHEAAxAHoHEAA5AHoHEABBAHoHEABJAHoHEABRAHoH
EABZAHoHFQBhAHoHFQBpAHoHEABxAHoHEAB5AHoHEACBAHoHGgCRAHoHIACpAHoHBgCxAHoHBgC5
AHoHBgDRAHoHJgDpAHoHEAABAXoHBgA5AXoHBgCZAHoHBgChAHoHBgAMAHoHBgAUAHoHBgAcAHoH
BgAkAHoHBgAMAAgBSgAUAAgBSgAcAAgBSgAkAAgBSgDBAHoHBgDZAD8BTwDZAOEKVwDxAHoHXQBR
Ae4JaQBZAZAEbwBRAfMJdgBpAR8HgQB5AWEEhgBpAR8HjQCBAcEEkgBRAecAaQCBAbEJlgARAXoH
nQARAQQHqQARARcJrgAZAacEsgARAXAFtwARAbIKwAARAeIJwAARAX8FxAARAXcFAQCJAXoHEAAR
AZQKBgARAd8JBgApAXoHBgCBAU8JygApASsJ0gAZAc8JwAApAUwA3QCZAVIE5QAxAXoHBgChAUoH
6gChAfkJ6gDBAE8J7wDBACEBkgDBAJ4E9ACpAfkAAAE0AIoKFwE8AD4ESgA8AEgELgE8AHoHBgAp
AKsAuQMuAAsAMgIuABMAOwIuABsAWgIuACMAYwIuACsAjAIuADMAjAIuADsAYwIuAEMAkgIuAEsA
jAIuAFMAqQIuAFsAjAIuAGMArwIuAGsA2QIuAHMA5gJAAIsAMANAAIMANQNDAHsAPgNDAIMANQNJ
AKsAygNjAHsAPgNjAIMANQNpAKsA3gOAAIsAMAODAJMAMAODAJsAMAODAHsAPgOJAKsA6wOgAIsA
MAOpAIMAWgLAAIsAMAPDALMAMAPDAFMAjALJAIMAWgLgAIsAMAPjAFMAjAIDAVMAjAIjAVMAjAJD
AVMAjAJjAVMAjAKjAYMANQOjAaMAVwPDAYMANQPDAVsAjALpAbsAMAOgBFMAjALABFMAjAJABYMA
NQNABYsAMANgBYMANQNgBYsAMAOABYMANQOABYsAMAOgBYMANQOgBYsAMAPABYsAMAPgBYsAMAMA
BosAMAMABoMANQMgBosAMANABosAMANABoMANQNlALwA2AD4AAsBBAABAAUABQAHAAcACAAJAAwA
DwAOABAAAABfB/4BAADJBQMCAABFBwgCAADcBw0CAAAPBxICAACpARcCAABfARwCAABJBSACAAC1
BBwCAABZBSACAAA+ACQCAAA4BSACAABwBhwCAABrBSACAABbBCgCAAAMAS0CAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAPAA8AAgAQABEAAQAUABMAAQAVABUAAQAW
ABcAAQAXABkAAQAYABsAAQAZAB0AAgApAB8AAgAxACEALgA1ADwAQwD9ABABHwEmAQSAAAABAAAA
AAAAAAAAAAAAAIEAAAAEAAAAAAAAAAAAAAA0AaUAAAAAAAQAAAAAAAAAAAAAADQBiAUAAAAACgAA
AAAAAAAAAAAAPQGuAAAAAAAOAAAAAAAAAAAAAABGASwKAAAAAA4AAAAAAAAAAAAAAEYBSQoAAAAA
AAAAAAEAAADGCAAADQAEAA4ABAAAABAAHABYAAAAEABdAFgAAAAAAF8AWACPAAYBjwApAQAAAENv
bnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEludDMyADxNb2R1bGU+AHNl
dF9Eb2NJRABJbnB1dElEAEdldE91dHB1dElEAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVf
X0luc3RhbmNlX18AU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAbXNjb3JsaWIA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQA
TWlkAENvbXBhcmVNZXRob2QAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNl
AEdldEhhc2hDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFt
ZQBnZXRfTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3
b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21W
aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5
RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlh
bnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBJSWYAU3lzdGVtLlRocmVhZGluZwBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAENvbXBhcmVTdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5n
AHNldF9FcnJNc2cATWF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19mNjFmNGYxMGFlZDE0ZTIyYmZl
YzIwNjkzNWYzMTU3YS5kbGwAc2V0X0RvY0lEX0lzTnVsbABnZXRfTGluZV9Jc051bGwAc2V0X0Vy
ck1zZ19Jc051bGwAc2V0X1N0ZXBfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBs
aWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBJbnRlcmFj
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0Nv
bXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAc2V0X1N0ZXAAbV9B
cHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAEVyck1zZ0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBUb0lu
dGVnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1dGVy
AE15Q29tcHV0ZXIAX3Jlc01ncgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAT3V0cHV0
SURzAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRf
V2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRp
b25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15LlJl
c291cmNlcwBNeVJlc291cmNlcwBTQ19mNjFmNGYxMGFlZDE0ZTIyYmZlYzIwNjkzNWYzMTU3YS5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU3RyaW5ncwBNeVNldHRpbmdzAEVxdWFscwBDb252ZXJz
aW9ucwBDb25uZWN0aW9ucwBCdWZmZXJzAFJ1bnRpbWVIZWxwZXJzAE9wZXJhdG9ycwBGaW5pc2hP
dXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QA
Z2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AExlZnQAU3BsaXQARXhpdABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lu
cHV0AFByaW1lT3V0cHV0AG1fQ29udGV4dABBZGRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AFNDX2Y2MWY0ZjEwYWVkMTRlMjJiZmVjMjA2OTM1ZjMxNTdhLk15AGdldF9Bc3NlbWJs
eQAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAABVE
AG8AYwBDAG8AbgB2AEkARAA9AAADPQAABQ0ACgAAB0UAbgBkAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAA1FAHIAcgBNAHMAZwAAAACf
Z+O6eBJ8Qb9Dagl/NdRgAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQB
Dg4ODgYVEjgBEgwGFRI4ARIIBhUSOAESZQYVEjgBEjQEIAATAAcAARJtEYChBSAAEoClByACAQ4S
gKUDBwEIBQACDg4IBgADCA4OAgoABB0ODg4IEYCxBAABCA4GAAMcAhwcBAABCBwDIAAIBgADDg4O
DgsgAwESgI0dCBKAkQQGEoCNAwYdCAQgAQ4IBCABAggDBwECAyAAAgUgAgEIHAcgAgIOEYDJBSAB
HQgIBAcCCAgHAAIIEoCRDgQAARwcBAABARwEIAECHAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4ABAcB
EwAGFRI4ARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoI
iYRdzYCAzJEHBhUSOAESDAcGFRI4ARIIBwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9AgYOAwYSKAMG
EiwDBhIgAgYIBAYSgJUDBhIwAgYcAwAAAQQAABIMBAAAEggEAAASZQQAABI0BAAAEnkEAAASfQUA
AQESfQUgAQESHAsgBAEIDhKAjRKAkQ0gBAEIHQgdEoCNEoCRBiABARKAlQQAABIwBCAAEm0HEAEB
HgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEjQECAASeQQIABJ9AygADgMoAAIDKAAIBAgA
EjAEKAATAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfZjYxZjRmMTBhZWQxNGUyMmJmZWMyMDY5MzVmMzE1N2EAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxOQAABQEAAQAAKQEAJGUxNDYwMmM1LTcyY2UtNDgzMy1hZGJhLTI4YTlhZjMwNjUx
YwAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAIAQABAAAAAAAYAQAKTXlUZW1w
bGF0ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRw
Q2xpZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQ
AQALTXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5X
ZWJTZXJ2aWNlcwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwQQAAAAAAAAAAAACKQQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAfEEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
AGYANgAxAGYANABmADEAMABhAGUAZAAxADQAZQAyADIAYgBmAGUAYwAyADAANgA5ADMANQBmADMA
MQA1ADcAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZgA2ADEAZgA0AGYAMQAwAGEA
ZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADYAMQBmADQA
ZgAxADAAYQBlAGQAMQA0AGUAMgAyAGIAZgBlAGMAMgAwADYAOQAzADUAZgAzADEANQA3AGEALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZgA2ADEAZgA0AGYA
MQAwAGEAZQBkADEANABlADIAMgBiAGYAZQBjADIAMAA2ADkAMwA1AGYAMwAxADUANwBhAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACcMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f61f4f10aed14e22bfec206935f3157a</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">EB</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0].Columns[Line]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4000"
                              cachedName="Line"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].Columns[Line]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg]"
                          hasSideEffects="true"
                          name="ErrMsg">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]"
                              name="ErrMsg" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]"
                              name="Doc ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]"
                              name="Step" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Defaults"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Defaults"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]"
                              name="Batch ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_I4)[SUBSTRING](@[User::BatchName],2,99)</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_I4)SUBSTRING(@[User::BatchName],2,99)</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              dataType="ui1"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]"
                              name="Main Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[$Package::MainStep]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[$Package::MainStep]</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Derived Column"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              dataType="bool"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output].Columns[Success]"
                              name="Success"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ISNULL(ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Determine Elapse"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Determine Elapse"
                      version="11">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\AssemblyInfo.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("SC_5fe454f9e9f44ba7a5df9c10e5d495b4")> 
<Assembly: AssemblyCopyright("Copyright @  2019")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("d0ae6900-0a28-42af-b510-37615fc60ce1")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> 
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services component wrapper
' This module defines the base class for your component
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper

<CLSCompliant(False)> _
Public Class UserComponent
    Inherits ScriptComponent

    Public Connections As New Connections(Me)
    Public Variables As New Variables(Me)

    Public BatchBuffer As BatchBuffer

    Dim InputsFinished As Integer = 0

    Public Overrides Sub ProcessInput(ByVal InputID As Integer, ByVal InputName As String, ByVal Buffer As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        If InputName.Equals("Input 0", StringComparison.Ordinal) Then
            Input0_ProcessInput(New Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap))
        End If

        If Buffer.EndOfRowset Then
            InputsFinished = InputsFinished + 1
            If InputsFinished = 1 Then
                FinishOutputs()
                MarkOutputsFinished()
            End If
        End If

    End Sub

    Public Overridable Sub FinishOutputs()
    End Sub

    Private Sub MarkOutputsFinished()

        If BatchBuffer IsNot Nothing Then
            BatchBuffer.SetEndOfRowset
            BatchBuffer = Nothing
        End If

    End Sub

    Public Overrides Sub PrimeOutput(ByVal Outputs As Integer, ByVal OutputIDs() As Integer, ByVal Buffers() As PipelineBuffer, ByVal OutputMap As OutputNameMap)

        For I As Integer = 0 To Outputs - 1
            If OutputIDs(I) = GetOutputID(OutputMap, "Batch") Then
                BatchBuffer = New BatchBuffer(Buffers(I), GetColumnIndexes(OutputIDs(I)), OutputMap)
            End If
        Next

        CreateNewOutputRows()

    End Sub

    Public Overridable Sub CreateNewOutputRows()
    End Sub

    Public Overridable Sub Input0_ProcessInput(ByVal Buffer As Input0Buffer)

        While Buffer.NextRow()
            Input0_ProcessInputRow(Buffer)
        End While

    End Sub

    Public Overridable Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)

    End Sub

End Class

<CLSCompliant(False)> _
Public Class Connections

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

End Class

<CLSCompliant(False)> _
Public Class Variables

    Dim ParentComponent As ScriptComponent

    <CLSCompliant(False)> _
    Public Sub New(ByVal Component As ScriptComponent)
        ParentComponent = Component
    End Sub

    Public ReadOnly Property [BatchName]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("BatchName").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

    Public ReadOnly Property [ExecRoot]() As String
        Get
            Return CType(ParentComponent.ReadOnlyVariables("ExecRoot").GetValueWithContext(ScriptComponent.EvaluatorContext), String)
        End Get
    End Property

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper
Imports Microsoft.SqlServer.Dts.Runtime.Wrapper
#End Region

<Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute>
<CLSCompliant(False)>
Public Class ScriptMain
    Inherits UserComponent

    Private ReadOnly PeilDate As New DateTime(2019, 5, 1)
    Private PrevMoment As Long = 0
    Private ProcStart As Date, LicLoaded As Integer, LicSet As Integer

    Public Overrides Sub Input0_ProcessInputRow(ByVal Row As Input0Buffer)
        Dim V() As String
        '    ComponentMetaData.FireWarning(1, Row.ID.ToString, Row.TimeStamp & ": " & PrevMoment.ToString, "", 0)
        V = Split(Row.TimeStamp, ".")

        If Row.ID <= 0 Then
            Select Case Row.Step
                Case "Start"
                    ProcStart = Convert.ToDateTime(Row.TimeStamp)
                Case "License loaded"
                    LicLoaded = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "License set", "No license set"
                    LicSet = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
                Case "End"
                    BatchBuffer.AddRow()
                    BatchBuffer.BatchID = Row.BatchID
                    BatchBuffer.Start = ProcStart
                    BatchBuffer.End = Convert.ToDateTime(Row.TimeStamp)
                    BatchBuffer.Status = 4
                    BatchBuffer.LicLoaded = LicLoaded
                    BatchBuffer.LicSet = LicSet
                    BatchBuffer.RefKey = 0
            End Select
        Else
            Row.Moment = Convert.ToDateTime(Row.TimeStamp)
            Row.Elapsed = CInt(GetMs(CDate(V(0)), CInt(V(1))) - PrevMoment)
        End If
        PrevMoment = GetMs(CDate(V(0)), CInt(V(1)))
    End Sub

    Private Function GetMs(D As Date, M As Int32) As Long
        GetMs = CLng((D - PeilDate).TotalSeconds * 1000 + M)
    End Function
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Settings.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
' Microsoft SQL Server Integration Services buffer wrappers
' This module defines classes for accessing data flow buffers
' THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!


Option Strict Off   ' This allows usage of PipelineBuffer typed accessors.

Imports System
Imports System.Data
Imports Microsoft.SqlServer.Dts.Pipeline
Imports Microsoft.SqlServer.Dts.Pipeline.Wrapper

<CLSCompliant(False)> _
Public Class Input0Buffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public ReadOnly Property [TimeStamp]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(0))
        End Get
    End Property
    Public ReadOnly Property [TimeStamp_IsNull] As Boolean
        Get
            Return IsNull(0)
        End Get
    End Property

    Public ReadOnly Property [ID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(1))
        End Get
    End Property
    Public ReadOnly Property [ID_IsNull] As Boolean
        Get
            Return IsNull(1)
        End Get
    End Property

    Public ReadOnly Property [Step]() As String
        Get
            Return Buffer.GetString(Me.BufferColumnIndexes(2))
        End Get
    End Property
    Public ReadOnly Property [Step_IsNull] As Boolean
        Get
            Return IsNull(2)
        End Get
    End Property

    Public ReadOnly Property [BatchID]() As Int32
        Get
            Return Buffer.GetInt32(Me.BufferColumnIndexes(3))
        End Get
    End Property
    Public ReadOnly Property [BatchID_IsNull] As Boolean
        Get
            Return IsNull(3)
        End Get
    End Property

    Public WriteOnly Property [Moment]() As DateTime
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [Moment_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Elapsed]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [Elapsed_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Function NextRow() As Boolean
        NextRow = MyBase.NextRow()
    End Function

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class

<CLSCompliant(False)> _
Public Class BatchBuffer
    Inherits ScriptBuffer

    Public Sub New(ByVal Buffer As PipelineBuffer, ByVal BufferColumnIndexes As Integer(), ByVal OutputMap As OutputNameMap)
        MyBase.New(Buffer, BufferColumnIndexes, OutputMap)
    End Sub

    Public WriteOnly Property [Start]() As DateTime
        Set
            Me(0) = Value
        End Set
    End Property
    Public WriteOnly Property [Start_IsNull] As Boolean
        Set
            If (value)
                SetNull(0)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [End]() As DateTime
        Set
            Me(1) = Value
        End Set
    End Property
    Public WriteOnly Property [End_IsNull] As Boolean
        Set
            If (value)
                SetNull(1)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [Status]() As Byte
        Set
            Me(2) = Value
        End Set
    End Property
    Public WriteOnly Property [Status_IsNull] As Boolean
        Set
            If (value)
                SetNull(2)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [RefKey]() As Int32
        Set
            Me(3) = Value
        End Set
    End Property
    Public WriteOnly Property [RefKey_IsNull] As Boolean
        Set
            If (value)
                SetNull(3)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [BatchID]() As Int32
        Set
            Me(4) = Value
        End Set
    End Property
    Public WriteOnly Property [BatchID_IsNull] As Boolean
        Set
            If (value)
                SetNull(4)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicSet]() As Int32
        Set
            Me(5) = Value
        End Set
    End Property
    Public WriteOnly Property [LicSet_IsNull] As Boolean
        Set
            If (value)
                SetNull(5)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public WriteOnly Property [LicLoaded]() As Int32
        Set
            Me(6) = Value
        End Set
    End Property
    Public WriteOnly Property [LicLoaded_IsNull] As Boolean
        Set
            If (value)
                SetNull(6)
            Else
                Throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.")
            End If
        End Set
    End Property

    Public Overloads Sub AddRow()
        MyBase.AddRow()
    End Sub

    Public Overloads Sub SetEndOfRowset()
        MyBase.SetEndOfRowset()
    End Sub

    Public Overloads Function EndOfRowset() As Boolean
        EndOfRowset = MyBase.EndOfRowset
    End Function

End Class
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</msb:DisplayName>
    <msb:ProjectId>{BA80907A-51A3-4818-BDBC-2D9FCC8C2197}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj" />
    <msb:File Include="main.vb" />
    <msb:File Include="BufferWrapper.vb" />
    <msb:File Include="My Project\Settings.Designer.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="ComponentWrapper.vb" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.vbproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ac4d6e4-cd2d-40be-a3d4-f10c3f51b1e0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</RootNamespace>
    <AssemblyName>SC_5fe454f9e9f44ba7a5df9c10e5d495b4</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.vb" />
    <Compile Include="BufferWrapper.vb" />
    <Compile Include="ComponentWrapper.vb" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="SSIS_SC140" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="SSIS_SC140" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[My Project\Resources.Designer.vb]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_5fe454f9e9f44ba7a5df9c10e5d495b4.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGj0jV0AAAAAAAAAAOAAIiALAVAAACwAAAAIAAAAAAAAVkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAARKAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
SgAAAAAAAEgAAAACAAUAsCcAAJwhAAABAAAAAAAAAExJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqhgIoMAAABgIg4wcAABsXcyYAAAp9BwAABAIWan0IAAAE
KgATMAUAqgEAAAEAABEDbxAAAAZyMwAAcBUWKCcAAAoKA28SAAAGFj05AQAAA28UAAAGCwdyNwAA
cBYoKAAACiw9B3JDAABwFigoAAAKLEUHcmEAAHAWKCgAAAosYAdyeQAAcBYoKAAACixSB3KXAABw
FigoAAAKLG04HAEAAAIDbxAAAAYoKQAACn0JAAAEOAYBAAACAgYWmigqAAAKBheaKCsAAAooDgAA
BgJ7CAAABNq3fQoAAAQ43QAAAAICBhaaKCoAAAoGF5ooKwAACigOAAAGAnsIAAAE2rd9CwAABDi0
AAAAAnsOAAAEby0AAAYCew4AAAQDbxYAAAZvJwAABgJ7DgAABAJ7CQAABG8fAAAGAnsOAAAEA28Q
AAAGKCkAAApvIQAABgJ7DgAABBpvIwAABgJ7DgAABAJ7CgAABG8rAAAGAnsOAAAEAnsLAAAEbykA
AAYCew4AAAQWbyUAAAYrNQMDbxAAAAYoKQAACm8YAAAGAwIGFpooKgAACgYXmigrAAAKKA4AAAYC
ewgAAATat28aAAAGAgIGFpooKgAACgYXmigrAAAKKA4AAAZ9CAAABCoAABMwAgAqAAAAAgAAEQMC
ewcAAAQoLAAACgsSASgtAAAKIwAAAAAAQI9AWgRsWCguAAAKuQoGKioCAwQFKC8AAAoqUgJ7MAAA
CgJ7MQAAChaUbzIAAAoqIgIWKDMAAAoqUgJ7MAAACgJ7MQAACheUbzQAAAoqIgIXKDMAAAoqUgJ7
MAAACgJ7MQAAChiUbzIAAAoqIgIYKDMAAAoqUgJ7MAAACgJ7MQAAChmUbzQAAAoqIgIZKDMAAAoq
OgIaA4whAAABKDUAAAoqWgMsCAIaKDYAAAoqcp8AAHBzNwAACno6AhsDjDIAAAEoNQAACipaAywI
AhsoNgAACipynwAAcHM3AAAKegAAABMwAQAJAAAAAwAAEQIoOAAACgoGKgAAABMwAQAJAAAAAwAA
EQIoOQAACgoGKjoCFgOMIQAAASg1AAAKKloDLAgCFig2AAAKKnKfAABwczcAAAp6OgIXA4whAAAB
KDUAAAoqWgMsCAIXKDYAAAoqcp8AAHBzNwAACno6AhgDjDMAAAEoNQAACipaAywIAhgoNgAACipy
nwAAcHM3AAAKejoCGQOMMgAAASg1AAAKKloDLAgCGSg2AAAKKnKfAABwczcAAAp6OgIaA4wyAAAB
KDUAAAoqWgMsCAIaKDYAAAoqcp8AAHBzNwAACnpaAywIAhsoNgAACipynwAAcHM3AAAKejoCHAOM
MgAAASg1AAAKKloDLAgCHCg2AAAKKnKfAABwczcAAAp6HgIoOgAACioeAig7AAAKKhMwAQAJAAAA
AwAAEQIoOQAACgoGKpoCKDwAAAoCAnM4AAAGfQwAAAQCAnM5AAAGfQ0AAAQCFn0PAAAEKhMwBABP
AAAAAAAAAARyPAEAcBpvPQAACiwVAgUCAyg+AAAKDgRzDwAABm82AAAGBW8/AAAKLCMCAnsPAAAE
F9Z9DwAABAJ7DwAABBczDAJvMgAABgIoMwAABioGKm4Cew4AAAQsEgJ7DgAABG8uAAAGAhR9DgAA
BCoAAAATMAUAQQAAAAQAABEDF9oKFgsrLgQHlA4EckwBAHAoQAAACjMZAgUHmgIEB5QoPgAACg4E
cx4AAAZ9DgAABAcX1gsHBjHOAm81AAAGKkorBwIDbzcAAAYDbxwAAAYt8So6AigiAAAKAgN9EAAA
BCo6AigiAAAKAgN9EQAABCqWAnsRAAAEb0EAAApyWAEAcG9CAAAKKEMAAApvRAAACihFAAAKKpYC
exEAAARvQQAACnJsAQBwb0IAAAooQwAACm9EAAAKKEUAAAoqQnMiAAAKKEYAAAqAEwAABCoeAihH
AAAKKgAbMAEAPwAAAAAAAAB+EgAABC0yfhMAAAQoRgAACihIAAAKfhIAAAQtHHM9AAAGgBIAAATe
EH4TAAAEKEYAAAooSQAACtx+EgAABCoAARAAAAIAHQAMKQAQAAAAADYCAyhGAAAKKEoAAAoqHgIo
SwAACiou0A0AAAIoIwAACioeAihMAAAKKgAAEzABABQAAAAFAAARAowFAAAbLQgoAQAAKworAgIK
BioiA/4VBQAAGyoAAAATMAIAKAAAAAYAABECe04AAApvTwAACgoGjAgAABstEigCAAArCgJ7TgAA
CgZvUAAACgYqSgIoIgAACgJzUQAACn1OAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAEDgAAI34AAHAOAABADQAAI1N0cmluZ3MAAAAAsBsAAIABAAAjVVMAMB0AABAAAAAj
R1VJRAAAAEAdAABcBAAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJDwAAAPoBMwAWAAABAAAAPAAAAA4A
AAAUAAAARwAAACsAAABRAAAAPgAAAAYAAAAHAAAAJAAAACUAAAAIAAAAAQAAAAYAAAABAAAAAgAA
AAMAAAACAAAAAACOBQEAAAAAAAYABQQECgYArwQECgYA3AI0CQ8AqgoAAAYAHQNIBwYA6ANIBwYA
lgRIBwYAJQRIBwYAPgRIBwYAZANIBwYAWQS5BgYACQO+CQYAhQK+CQYAsANIBwYAfwMOBQoAqAKW
CAoAcAJ4BQoA8AJ4BQ4AOAKUCQ4A9AhYCQYAmAM0CQ4ANAPdCQ4ATAMBAQYAegu5Bg4A2giUCQ4A
zQMBAQYADwK5Bg4AOgBOBQoAkwLJBgYAfAgkCgYAhQckBxIAbwTrAQYA4gG5BgYASQW5BgYAwAa5
BhIAawjrARYAUAjrARIAkQfrARIA9AvrAQoASAIPBwYAvwI0CQYApAG5BgYANQ1IBw4A9AoBAQ4A
YgEBAQ4APQvdCQYAQgy5Bg4ADgvdCQYAWge5BgYAZwC5BgYAzQS5BgYAQgW5BgYAdAe5BhoAEQCu
CBoAAQCuCJ8AqQwAABoAIgCuCAYALgsECgYAHAn9BAYABQm5BgAAAACRAAAAAAABAAEAAAAAAAEH
/wxNAAEAAQAAAAAA8gj/DFEAAQACAAABEACBC/8MYQABAAMAAAAAAGYKNQphAAUACAABAAAA5gZt
ACQABwAMAAEAAABDCG0AkQAMAA8AAQAAAF8IbQCRAAwAHgABAAAA1gttAJ0ADAAwAAEAAAAaC20A
YQAQADgAAQAAAMUKbQBhABEAOQAAARAA/AptAKEAEgA8AAUBAACGCQAAYQAUAD8ABQEAAEkAAABh
ABQARgAxAAwIhgExAOMHjgExAPcHlgExACUIngERAP0IpgERACwCqgEhAGACrgEBAMsLswEBADgM
rgEBABsBtgEBAI8LtgEGABoLuQEGAMUKvQEGAF8IwQEBACUBtgEBAOQLxQEBAOQLxQERANIEygER
AHQLzgEhAIsMTgFQIAAAAAAGGA8JBgABAFggAAAAAAYYDwkGAAEAYCAAAAAAERgVCdEBAQCKIAAA
AAATCOUI1QEBAJYgAAAAABMI8QbaAQEAoiAAAAAAEwjWCN8BAQCuIAAAAAATCHYJ5AEBALogAAAA
AAMYDwkGAAEAwiAAAAAAFgh4COkBAQDuIAAAAAAWCBQC7gEBAPUgAAAAABYIIALzAQEA/SAAAAAA
BhgPCQYAAgAgIQAAAADGAuAM+QECANgiAAAAAAEALgn/AQMADiMAAAAABhgPCawABQAZIwAAAAAG
CNUHKwEIAC4jAAAAAAYIMQbaAAgANyMAAAAABgiaACcBCABMIwAAAAAGCLYF2gAIAFUjAAAAAAYI
zAcrAQgAaiMAAAAABgghBtoACABzIwAAAAAGCKEAJwEIAIgjAAAAAAYIxAXaAAgAkSMAAAAABgjA
CwcCCACgIwAAAAAGCGoGFQAJALcjAAAAAAYISAEBAAoAxiMAAAAABgj/BRUACwDgIwAAAACGAPcM
2gAMAPgjAAAAAIYAqQvaAAwADiMAAAAABhgPCawADAANJAAAAAAGCC4MBwIPABwkAAAAAAYIfAYV
ABAAMyQAAAAABghUAQcCEQBCJAAAAAAGCBIGFQASAFkkAAAAAAYIVQsOAhMAaCQAAAAABghGBhUA
FAB/JAAAAAAGCCYNAQAVAI4kAAAAAAYIjQYVABYApSQAAAAABgitAAEAFwC0JAAAAAAGCNcFFQAY
ALcjAAAAAAYIiwsBABkAyyQAAAAABghYBhUAGgDiJAAAAAAGCBcBAQAbAPEkAAAAAAYI6gUVABwA
CCUAAAAAhgDZDAYAHQAQJQAAAACGAKYLBgAdABglAAAAAIYAqQvaAB0ALSUAAAAABhgPCQYAHQBU
JQAAAADGAnIMEwIdAK8lAAAAAEYDRwsGACEAsSUAAAAAAQA0AQYAIQDQJQAAAADGAn8MHwIhAK8l
AAAAAEYDYAsGACUAHSYAAAAARgNrDPkBJQCvJQAAAABGA+AM+QEmADAmAAAAAAYYDwktAicAPyYA
AAAABhgPCS0CKABOJgAAAAAGCMgBKwEpAHQmAAAAAAYIBAwrASkAmiYAAAAAERgVCdEBKQCrJgAA
AAAGGA8JBgApALQmAAAAABYI2gQ0AikAECcAAAAAxgIHCyIBKQAeJwAAAADGApgBJwEqACYnAAAA
AIMADAI5AioAMicAAAAAxgI2BSsBKgA8JwAAAAARAOUAPgIqAFwnAAAAAAEA0QBGAisAuiAAAAAA
BhgPCQYALABoJwAAAAADCH8BSgAsAJwnAAAAAAYYDwkGACwAAAABAPcEAAABAPsMAAABAMsAAAAC
AM0AAAABAHEIAAACAM8KAAADAJ8HAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAHEIAAACAM8K
AAADAJ8HAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAAB
APcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABAPcEAAABALkAAAACANYBAAADAHEIAAAEAJ8H
AAABAE0LAAACACQJAAADACYLAAAEAJ8HAAABAHEIAAABAPsMAAABAPoLAAABAPoLAAABAI8HAAAB
AI8BAAABAI8BCQAPCQEAEQAPCQYAGQAPCQoAKQAPCRAAMQAPCRAAOQAPCRAAQQAPCRAASQAPCRAA
UQAPCRAAWQAPCRUAYQAPCRUAaQAPCRAAcQAPCRAAeQAPCRAAgQAPCRoAkQAPCSAAqQAPCQYAsQAP
CQYAuQAPCQYA0QAPCSYA6QAPCRAAAQEPCQYASQEPCQYAmQAPCQYAoQAPCQYADAAPCQYAFAAPCQYA
HAAPCQYAJAAPCQYADAB/AUoAFAB/AUoAHAB/AUoAJAB/AUoAwQAPCQYA2QC2AU8A2QAxDVcA8QAP
CV0ACQEPCWUAYQG1C3IAcQEoBX0AeQHgAYQAgQFpAoQAgQGMCIsACQE5B5cAGQFHCaMAEQFcAacA
IQEPCawAIQFxCLgAIQHPCr0AKQE/BcEAIQGYBsYAKQFkAMsAIQGwBtAAIQGfBgEAiQEPCRAAIQH3
DNoAIQGpC9oAIQHZDAYAIQGmCwYAOQEPCQYAoQEHC94AOQHjCuYAKQGWC9oAOQHBAPEAOQG5CvkA
sQGnBv8AOQHEDAYBuQGVDAwBgQE2BRMB0QHuBBgBQQEPCQYA2QHfCB0B2QG7Cx0BwQAHCyIBwQCY
AScBwQA2BSsB4QFwATcBNACLDE4BPADaBEoAPADkBGUBPAAPCQYAKQCrABMELgALAIwCLgATAJUC
LgAbALQCLgAjAL0CLgArAOYCLgAzAOYCLgA7AL0CLgBDAOwCLgBLAOYCLgBTAAMDLgBbAOYCLgBj
AAkDLgBrADMDLgBzAEADQACLAIoDQACDAI8DQwB7AJgDQwCDAI8DSQCrACQEYwB7AJgDYwCDAI8D
aQCrADgEgACLAIoDgwCTAIoDgwCbAIoDgwB7AJgDiQCrAEUEoACLAIoDqQCDALQCwACLAIoDwwCz
AIoDwwBTAOYCyQCDALQC4ACLAIoD4wBTAOYCAwFTAOYCIwFTAOYCQwFTAOYCYwFTAOYCowGDAI8D
owGjALEDwwGDAI8DwwFbAOYCaQS7AIoDAAdTAOYCIAdTAOYC4AeDAI8D4AeLAIoDAAiDAI8DAAiL
AIoDIAiDAI8DIAiLAIoDQAiDAI8DQAiLAIoDYAiLAIoDgAiLAIoDoAiLAIoDoAiDAI8DwAiLAIoD
4AiLAIoD4AiDAI8DbACQANYA7AAvAUIBBAABAAUABQAHAAcACAATAAsAIQAMACMADgAkAAAA9AhO
AgAAAwdTAgAA2ghYAgAAiAldAgAAfAhiAgAAMAJnAgAA2QdsAgAANQZwAgAAygB0AgAA4AVwAgAA
0AdsAgAAJQZwAgAAsQB0AgAA2wVwAgAAzwt4AgAAbgZwAgAATAF0AgAAAwZwAgAAPAx4AgAAgAZw
AgAAWAF4AgAAFgZwAgAAWQt+AgAASgZwAgAAKg10AgAAkQZwAgAAsQB0AgAA2wVwAgAAjwt0AgAA
XAZwAgAAGwF0AgAA7gVwAgAAzAFsAgAACAxsAgAA9wSCAgAAgwGHAgIABAADAAIABQAFAAIABgAH
AAIABwAJAAIACQALAAIACgANAAEACwANAAIAEAAPAAIAEQARAAIAEgATAAIAEwAVAAIAFAAXAAIA
FQAZAAIAFgAbAAIAFwAdAAEAGAAfAAEAGQAhAAEAGgAjAAEAGwAlAAEAHwAnAAEAIAApAAEAIQAr
AAEAIgAtAAEAIwAvAAEAJAAxAAEAJQAzAAEAJgA1AAEAJwA3AAEAKAA5AAEAKQA7AAEAKgA9AAEA
KwA/AAEALABBAAIAOgBDAAIAOwBFAAIAPgBHAAIARgBJAC4ANQA8AEMANAFHAVYBXQEEgAAAAQAA
AAAAAAAAAAAAAABtAAAABAAAAAAAAAAAAAAAawH4AAAAAAAEAAAAAAAAAAAAAABrAbkGAAAAAAoA
AAAAAAAAAAAAAHQBAQEAAAAADgAAAAAAAAAAAAAAfQERDAAAAAAOAAAAAAAAAAAAAAB9AUoMAAAA
AA4AAAAAAAAAAAAAAH0BqQcAAAAAAAAAAAEAAAByCgAADQAEAA4ABAAAABAAHADPAAAAEACHAM8A
AAAAAIkAzwCbAD0BmwBgAQAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURU
U0V2YWx1YXRvckNvbnRleHQxMDAAQ29udGV4dFZhbHVlYDEAVGhyZWFkU2FmZU9iamVjdFByb3Zp
ZGVyYDEAR2V0SW50MzIAU0NfNWZlNDU0ZjllOWY0NGJhN2E1ZGY5YzEwZTVkNDk1YjQAPE1vZHVs
ZT4AZ2V0X0lEAGdldF9CYXRjaElEAHNldF9CYXRjaElEAElucHV0SUQAR2V0T3V0cHV0SUQATQBU
AERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAG1zY29ybGliAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYwBzZXRfTGljTG9hZGVkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmlu
aXNoZWQAc2V0X0VsYXBzZWQAc2V0X0VuZABSb3VuZABDb21wYXJlTWV0aG9kAENyZWF0ZUluc3Rh
bmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfQmF0Y2hOYW1lAElucHV0TmFtZQBUb0RhdGVUaW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAEdldFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAX3Jlc0N1bHR1cmUAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AFBlaWxEYXRlAFRvRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRlAEhlbHBL
ZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBD
b21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVB
dHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2Vt
Ymx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21w
bGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEJ5dGUA
bV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRp
bmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAEdldFN0
cmluZwBNYXRoAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5kbGwA
Z2V0X0lEX0lzTnVsbABnZXRfQmF0Y2hJRF9Jc051bGwAc2V0X0JhdGNoSURfSXNOdWxsAHNldF9M
aWNMb2FkZWRfSXNOdWxsAHNldF9FbGFwc2VkX0lzTnVsbABzZXRfRW5kX0lzTnVsbABnZXRfU3Rl
cF9Jc051bGwAZ2V0X1RpbWVTdGFtcF9Jc051bGwAc2V0X1N0YXR1c19Jc051bGwAc2V0X0xpY1Nl
dF9Jc051bGwAc2V0X01vbWVudF9Jc051bGwAc2V0X1N0YXJ0X0lzTnVsbABzZXRfUmVmS2V5X0lz
TnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUaW1lU3BhbgBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRp
b24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rp
b24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21w
YXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRFRTUnVudGltZVdyYXAAZ2V0X1N0ZXAAZ2V0X1RpbWVTdGFtcABtX0FwcE9iamVjdFBy
b3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015
V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAQmF0
Y2hCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAVG9JbnRlZ2VyAFN5c3Rl
bS5Db2RlRG9tLkNvbXBpbGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBl
cgBnZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEFjdGl2YXRv
cgAuY3RvcgAuY2N0b3IATW9uaXRvcgBPdXRwdXRJRHMAR2V0TXMAU3lzdGVtLkRpYWdub3N0aWNz
AGdldF9Ub3RhbFNlY29uZHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dlYlNl
cnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2Vy
dmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNC5NeS5SZXNvdXJj
ZXMATXlSZXNvdXJjZXMAU0NfNWZlNDU0ZjllOWY0NGJhN2E1ZGY5YzEwZTVkNDk1YjQuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFN0cmluZ3MATXlTZXR0aW5ncwBFcXVhbHMA
Q29udmVyc2lvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMA
RmluaXNoT3V0cHV0cwBzZXRfU3RhdHVzAENyZWF0ZU5ld091dHB1dFJvd3MAbV9TeW5jT2JqZWN0
AE15UHJvamVjdABzZXRfTGljU2V0AGdldF9FbmRPZlJvd3NldABTZXRFbmRPZlJvd3NldABTcGxp
dABFeGl0AHNldF9Nb21lbnQAUHJldk1vbWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVu
dABTY3JpcHRDb21wb25lbnQAZ2V0X0V4ZWNSb290AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3Jp
cHQAc2V0X1N0YXJ0AFByb2NTdGFydABDb252ZXJ0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxp
bmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAbV9Db250ZXh0AEdldFZhbHVl
V2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRl
eHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBTQ181ZmU0NTRmOWU5ZjQ0
YmE3YTVkZjljMTBlNWQ0OTViNC5NeQBzZXRfUmVmS2V5AGdldF9Bc3NlbWJseQAAAAAxTQB5AC4A
UgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAAAMuAAALUwB0AGEAcgB0
AAAdTABpAGMAZQBuAHMAZQAgAGwAbwBhAGQAZQBkAAAXTABpAGMAZQBuAHMAZQAgAHMAZQB0AAAd
TgBvACAAbABpAGMAZQBuAHMAZQAgAHMAZQB0AAAHRQBuAGQAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAC0IAYQB0AGMAaAAAE0IAYQB0
AGMAaABOAGEAbQBlAAARRQB4AGUAYwBSAG8AbwB0AAAAAPkKh+wPiqlEsUF0/1TYqAsABCABAQgD
IAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSOAESDAYVEjgBEggGFRI4
ARJlBhUSOAESNAQgABMABwABEm0RgKkFIAASgK0HIAIBDhKArQYgAwEICAgFBwIdDg4KAAQdDg4O
CBGAtQYAAwgODgIGAAERgIUOBAABCA4GBwIKEYCNCwACEYCNEYCFEYCFAyAADQQAAQ0NCyADARKA
lR0IEoCZBAYSgJUDBh0IBCABDggEIAECCAQgAQgIBSACAQgcAwcBAgMgAAIHIAICDhGA1QUgAR0I
CAQHAggIBwACCBKAmQ4FIAASgNkGIAESgN0cBQAAEoDhBiABHBKA5QQAAQ4cBAABHBwEAAEBHAQg
AQIcAyAACAMgAA4EBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRI4ARMABwYVEnEBEwAGFRJxARMA
AhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEHBhUSOAESDAcGFRI4ARII
BwYVEjgBEmUHBhUSOAESNAMGEnkDBhJ9BAYRgIUCBgoCBggDBhIoAwYSLAMGEiAEBhKAnQMGEjAC
BhwDAAABBAAAEgwEAAASCAQAABJlBAAAEjQEAAASeQQAABJ9BQABARJ9BSABARIcByACChGAhQgG
IAEBEYCFBCABAQULIAQBCA4SgJUSgJkNIAQBCB0IHRKAlRKAmQYgAQESgJ0EAAASMAQgABJtBxAB
AR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABI0BAgAEnkECAASfQMoAA4DKAACAygACAUo
ABGAhQMoAAUECAASMAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTQ181ZmU0NTRmOWU5ZjQ0YmE3YTVkZjljMTBlNWQ0OTViNAAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDE5AAAFAQABAAApAQAkZDBhZTY5MDAtMGEyOC00MmFmLWI1MTAt
Mzc2MTVmYzYwY2UxAAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAgBAAEAAAAA
ABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2Nv
bHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5z
dGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNl
cgAAEwEADk15LldlYlNlcnZpY2VzAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAALEoAAAAAAAAAAAAARkoAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADhKAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1AGYA
ZQA0ADUANABmADkAZQA5AGYANAA0AGIAYQA3AGEANQBkAGYAOQBjADEAMABlADUAZAA0ADkANQBi
ADQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBlADkAZgA0
ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQBmAGUANAA1ADQAZgA5
AGUAOQBmADQANABiAGEANwBhADUAZABmADkAYwAxADAAZQA1AGQANAA5ADUAYgA0AC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUAZgBlADQANQA0AGYAOQBl
ADkAZgA0ADQAYgBhADcAYQA1AGQAZgA5AGMAMQAwAGUANQBkADQAOQA1AGIANAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAWDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_5fe454f9e9f44ba7a5df9c10e5d495b4</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">VisualBasic</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::BatchName,$Package::ExecRoot</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum140"
                          typeConverter="NOTBROWSABLE">05</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[TimeStamp]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]"
                              name="Moment" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]"
                              name="Elapsed" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch]"
                          hasSideEffects="true"
                          name="Batch">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]"
                              name="Start" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]"
                              name="End" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]"
                              name="RefKey" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]"
                              name="LicSet" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]"
                              name="LicLoaded" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Doc Logging?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Doc Logging?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Nee]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Nee"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]} &lt;= 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ID &lt;= 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Error Status"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Error Status"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ErrorCodes]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ErrorCodes]) [refTable]
where [refTable].[Name] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Inserted" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Insert"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              name="Error Status ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Not Found]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Not Found"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Filter Onzin"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Filter Onzin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Correct Version]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Correct Version"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression"> FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression"> FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Zinvol]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Zinvol"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Known Error?"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Known Error?"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[No]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="No"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL([Error Status ID])</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Ja]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Ja"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Merge Batch Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Batch Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[RefKey]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicLoaded]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output]"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Merge Doc Info"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Doc Info"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">2</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              cachedSortKeyPosition="2"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Step]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Doc ID]"
                              name="Doc ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\ProcessDetail"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="ProcessDetail"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessDetails]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                              dataType="ui1"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Moment]"
                              dataType="dbTimeStamp"
                              name="Moment" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[FileSize_KB]"
                              dataType="i4"
                              name="FileSize_KB" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Elapsed]"
                              dataType="i4"
                              name="Elapsed" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input].ExternalColumns[Doc/Klant]"
                              dataType="i4"
                              name="Doc/Klant" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\ProcessDetail.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Read Err"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Err"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Read Err.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Err]"
                          connectionManagerRefId="Package.ConnectionManagers[Err]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              length="4000"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].Columns[Line]"
                              name="Line"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output].ExternalColumns[Line]"
                              codePage="1252"
                              dataType="str"
                              length="4000"
                              name="Line" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Read Log"
                      componentClassID="Microsoft.FlatFileSource"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="1043"
                      name="Read Log"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Read Log.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Log]"
                          connectionManagerRefId="Package.ConnectionManagers[Log]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]"
                              name="ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]"
                              name="File"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[TimeStamp]"
                              name="TimeStamp"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]"
                              name="Step"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              name="File" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[TimeStamp]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TimeStamp" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set ErrCode Unexpected"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">8</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">8</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Set Error Code Name"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Set Error Code Name"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]"
                              name="ErrCode Description"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,8000,1252)([REPLACENULL](#{Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]},"") == "" ? "No Error" : #{Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ErrMsg]})</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,8000,1252)(REPLACENULL(ErrMsg,"") == "" ? "No Error" : ErrMsg)</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[RefKey]"
                              cachedDataType="i4"
                              cachedName="RefKey"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Start]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Start]"
                              name="Start">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Start]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[End]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[End]"
                              name="End">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[End]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Status]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Status]"
                              name="Status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[RefKey]"
                              name="RefKey"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[RefKey]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicSet]"
                              name="LicSet">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicSet]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output].Columns[LicLoaded]"
                              name="LicLoaded">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch].Columns[LicLoaded]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort ErrMsg"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input].Columns[Doc ID]"
                              cachedDataType="i4"
                              cachedName="Doc ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[ErrMsg]"
                              name="ErrMsg">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[ErrMsg]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Doc ID]"
                              name="Doc ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Doc ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Sort Log"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort Log"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">2</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[ID]"
                              name="ID"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[File]"
                              name="File">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[File]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step]"
                              name="Step"
                              sortKeyPosition="2">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Batch ID]"
                              name="Batch ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Batch ID]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Moment]"
                              name="Moment">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Moment]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Elapsed]"
                              name="Elapsed">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0].Columns[Elapsed]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output].Columns[Step ID]"
                              name="Step ID">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Step"
                      componentClassID="Microsoft.Lookup"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Step"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[ProcessSteps]</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[ProcessSteps]) [refTable]
where [refTable].[Name] = ? and [refTable].[Main] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Sort" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Main" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsMainStep" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]};#{Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Step.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input].Columns[Step]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output].Columns[Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Name</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input].Columns[Main Step]"
                              cachedDataType="ui1"
                              cachedName="Main Step"
                              lineageId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output].Columns[Main Step]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Main</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              dataType="ui1"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output].Columns[Step ID]"
                              name="Step ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">ID</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Unexpected Errors"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Unexpected Errors"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ProcessErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[ErrCode Description]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrCode Description"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              lineageId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output].Columns[ErrCode Description]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                              dataType="i4"
                              name="ID" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Step]"
                              dataType="ui1"
                              name="Step" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Doc]"
                              dataType="i4"
                              name="Doc" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Error]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Error" />
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input].ExternalColumns[Batch]"
                              dataType="i4"
                              name="Batch" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Union All"
                      componentClassID="Microsoft.UnionAll"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[ID]"
                              cachedDataType="i4"
                              cachedName="ID"
                              cachedSortKeyPosition="1"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[File]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="255"
                              cachedName="File"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[File]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Batch ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Elapsed]"
                              cachedDataType="i4"
                              cachedName="Elapsed"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Elapsed]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Step ID]"
                              cachedDataType="ui1"
                              cachedName="Step ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Step ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Error Status ID]"
                              cachedDataType="ui1"
                              cachedName="Error Status ID"
                              lineageId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert].Columns[Error Status ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2].Columns[Moment]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Moment"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output].Columns[Moment]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 3]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 3">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[ID]"
                              name="ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]"
                              codePage="1252"
                              dataType="str"
                              length="255"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[File]"
                              name="File" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Batch ID]"
                              name="Batch ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Elapsed]"
                              name="Elapsed" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Step ID]"
                              name="Step ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              dataType="ui1"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Error Status ID]"
                              name="Error Status ID" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              dataType="dbTimeStamp"
                              lineageId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1].Columns[Moment]"
                              name="Moment" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\For each finished batch\Load Log\XML\Update Batch"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Batch"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">UPDATE [dbo].[Batches] SET
  Status = ?
, ProcStart = ?
, ProcEnd = ?
, Error = ?
, Success = ?
, [License loaded] = ?
, [License set] = ?
WHERE ID = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Connections[OleDbConnection]"
                          connectionManagerID="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}:external"
                          connectionManagerRefId="Project.ConnectionManagers[MigLog]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="ui1"
                              cachedName="Status"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Start]"
                              cachedDataType="dbTimeStamp"
                              cachedName="Start"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Start]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[End]"
                              cachedDataType="dbTimeStamp"
                              cachedName="End"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[End]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Success]"
                              cachedDataType="bool"
                              cachedName="Success"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              lineageId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output].Columns[Success]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[Batch ID]"
                              cachedDataType="i4"
                              cachedName="Batch ID"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[Batch ID]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[LicLoaded]"
                              cachedDataType="i4"
                              cachedName="LicLoaded"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicLoaded]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[LicSet]"
                              cachedDataType="i4"
                              cachedName="LicSet"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[LicSet]" />
                            <inputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].Columns[ErrMsg]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="ErrMsg"
                              externalMetadataColumnId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              lineageId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output].Columns[ErrMsg]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="ui1"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="dbTimeStamp"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                              dataType="dbTimeStamp"
                              name="Param_2">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Param_3">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                              dataType="bool"
                              name="Param_4">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                              dataType="i4"
                              name="Param_5">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                              dataType="i4"
                              name="Param_6">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                              dataType="i4"
                              name="Param_7">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\For each finished batch\Load Log\XML\Update Batch.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Batch]"
                      endId="Package\For each finished batch\Load Log\XML\Sort 1.Inputs[Sort Input]"
                      name="Batch"
                      startId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Batch]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output]"
                      endId="Package\For each finished batch\Load Log\XML\Determine Elapse.Inputs[Input 0]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Defaults.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 2]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output2]"
                      endId="Package\For each finished batch\Load Log\XML\Update Batch.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output3]"
                      endId="Package\For each finished batch\Load Log\XML\Error Status.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[ErrMsg]"
                      endId="Package\For each finished batch\Load Log\XML\Batch Error?.Inputs[Conditional Split Input]"
                      name="ErrMsg"
                      startId="Package\For each finished batch\Load Log\XML\Concat.Outputs[ErrMsg]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output]"
                      endId="Package\For each finished batch\Load Log\XML\Defaults.Inputs[Derived Column Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\XML\Read Log.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Filter Onzin.Inputs[Conditional Split Input]"
                      name="Flat File Source Output"
                      startId="Package\For each finished batch\Load Log\XML\Read Err.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Insert]"
                      endId="Package\For each finished batch\Load Log\XML\Known Error?.Inputs[Conditional Split Input]"
                      name="Insert"
                      startId="Package\For each finished batch\Load Log\XML\Error Status.Outputs[Insert]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Ja]"
                      endId="Package\For each finished batch\Load Log\XML\Step.Inputs[Lookup Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\XML\Doc Logging?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Ja1]"
                      endId="Package\For each finished batch\Load Log\XML\Sort.Inputs[Sort Input]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Ja2]"
                      endId="Package\For each finished batch\Load Log\XML\Union All.Inputs[Union All Input 1]"
                      name="Ja"
                      startId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[Ja]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Lookup Match Output]"
                      endId="Package\For each finished batch\Load Log\XML\Sort Log.Inputs[Sort Input]"
                      name="Lookup Match Output"
                      startId="Package\For each finished batch\Load Log\XML\Step.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output]"
                      endId="Package\For each finished batch\Load Log\XML\Derived Column.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Set Error Code Name.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 1]"
                      endId="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 2]"
                      endId="Package\For each finished batch\Load Log\XML\Unexpected Errors.Inputs[OLE DB Destination Input]"
                      name="Multicast Output 2"
                      startId="Package\For each finished batch\Load Log\XML\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[No]"
                      endId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Inputs[Sort Input]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\XML\Batch Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[No1]"
                      endId="Package\For each finished batch\Load Log\XML\Multicast.Inputs[Multicast Input 1]"
                      name="No"
                      startId="Package\For each finished batch\Load Log\XML\Known Error?.Outputs[No]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Output 0]"
                      endId="Package\For each finished batch\Load Log\XML\Doc Logging?.Inputs[Conditional Split Input]"
                      name="Output 0"
                      startId="Package\For each finished batch\Load Log\XML\Determine Elapse.Outputs[Output 0]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort ErrMsg.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output1]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Doc Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort Log.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output2]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort 1.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Sort Output3]"
                      endId="Package\For each finished batch\Load Log\XML\Merge Batch Info.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\For each finished batch\Load Log\XML\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Union All Output 1]"
                      endId="Package\For each finished batch\Load Log\XML\ProcessDetail.Inputs[OLE DB Destination Input]"
                      name="Union All Output 1"
                      startId="Package\For each finished batch\Load Log\XML\Union All.Outputs[Union All Output 1]" />
                    <path
                      refId="Package\For each finished batch\Load Log\XML.Paths[Zinvol]"
                      endId="Package\For each finished batch\Load Log\XML\Concat.Inputs[Input 0]"
                      name="Zinvol"
                      startId="Package\For each finished batch\Load Log\XML\Filter Onzin.Outputs[Zinvol]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{FB987EAC-79B2-4BF9-8D40-ABA95BCE3B35}"
              DTS:EvalOp="1"
              DTS:Expression="@[$Package::MainStep]==18"
              DTS:From="Package\For each finished batch\Load Log\Dispatch"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\For each finished batch\Load Log\XML" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{64DFB8C1-167F-460B-A6AA-3A1E432F9E5C}"
              DTS:EvalOp="1"
              DTS:Expression="@[$Package::MainStep]==16"
              DTS:From="Package\For each finished batch\Load Log\Dispatch"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\For each finished batch\Load Log\SAF" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{FAC64857-DA73-4DCA-9143-2ADB35B803D7}"
              DTS:EvalOp="1"
              DTS:Expression="@[$Package::MainStep]==17"
              DTS:From="Package\For each finished batch\Load Log\Dispatch"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\For each finished batch\Load Log\PDF" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Move Files to LogProcessed Folder"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{37991FD0-0CA0-44AB-B12F-87152C251B80}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Move Files to LogProcessed Folder">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachFileEnumerator"
            DTS:DTSID="{794709FC-A0B4-4527-985E-ACB4031F923C}"
            DTS:ObjectName="{794709FC-A0B4-4527-985E-ACB4031F923C}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::ExecRoot]+"\\03-Finished"</DTS:PropertyExpression>
            <DTS:PropertyExpression
              DTS:Name="FileSpec">@[User::BatchName]+".*"</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="E:\Scripts\01-Unzip\03-Finished" />
                <FEFEProperty
                  FileSpec="B000208.*" />
                <FEFEProperty
                  FileNameRetrievalType="1" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\For each finished batch\Move Files to LogProcessed Folder\Move File"
              DTS:CreationName="Microsoft.FileSystemTask"
              DTS:Description="File System Task"
              DTS:DTSID="{03590DED-46CD-483E-B2ED-0E5C26F75EB6}"
              DTS:ExecutableType="Microsoft.FileSystemTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Move File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskOverwriteDestFile="True"
                  TaskSourcePath="User::VanFile"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="User::NaarFile"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{9B59A761-E912-427B-BA73-C22C87F97818}"
              DTS:ObjectName="{9B59A761-E912-427B-BA73-C22C87F97818}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::FileName" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Purge OK File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="File System Task"
          DTS:DTSID="{3B1D1F4D-807A-4A69-B72D-3AE546720131}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Purge OK File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::BatchOK"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\For each finished batch\Update Documents"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4B5FF8B5-8212-407B-B080-2BFDFAFB0634}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Documents"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D8CC7524-393E-44DF-8099-72EE6B66DCE4}"
              SQLTask:SqlStatementSource="UPDATE       Documents&#xA;SET                ProcStatus = E.Status&#xA;FROM            Documents INNER JOIN&#xA;                         ProcessDetails AS P ON Documents.ID = P.Doc INNER JOIN&#xA;                         ProcessSteps AS S ON P.Step = S.ID INNER JOIN&#xA;                         ErrorCodes AS E ON P.Status = E.ID&#xA;WHERE (S.Name = ?) AND (P.Batch = ?) AND (S.Main = Documents.CurrentStep)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::BatchID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ProcDetailName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B117382E-B896-4702-98C4-301FBDD9D34A}"
          DTS:From="Package\For each finished batch\Load Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\For each finished batch\Purge OK File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7825AD7F-F8E8-472D-94DB-1ADE236F9B5F}"
          DTS:From="Package\For each finished batch\Load Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\For each finished batch\Create Dir" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{66EA8EE4-F1A8-4266-8A7C-38ABA1B92C13}"
          DTS:From="Package\For each finished batch\Create Dir"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\For each finished batch\Move Files to LogProcessed Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{B515E672-677B-4C3B-B403-05B91B69A4EB}"
          DTS:From="Package\For each finished batch\Purge OK File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\For each finished batch\Move Files to LogProcessed Folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\For each finished batch.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{11A825D4-B491-4CE9-A9E5-3016C70F77B8}"
          DTS:From="Package\For each finished batch\Load Log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\For each finished batch\Update Documents" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E041CBB5-A971-4285-BDB1-3137D6DC1DB4}"
          DTS:ObjectName="{E041CBB5-A971-4285-BDB1-3137D6DC1DB4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::BatchName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E9226AAC-0868-4332-B4CF-96F2AFA66B56}"
      DTS:From="Package\Clear Log"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\For each finished batch" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\Clear Log"
          TopLeft="918,131" />
        <NodeLayout
          Size="129,42"
          Id="Package\For each finished batch\Create Dir"
          TopLeft="574,135" />
        <NodeLayout
          Size="122,143"
          Id="Package\For each finished batch\Load Log\Dispatch"
          TopLeft="32,21" />
        <NodeLayout
          Size="101,42"
          Id="Package\For each finished batch\Load Log\PDF"
          TopLeft="230,80" />
        <NodeLayout
          Size="100,42"
          Id="Package\For each finished batch\Load Log\SAF"
          TopLeft="231,17" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\XML"
          TopLeft="227,144" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint]"
          TopLeft="154,126.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73,38.75"
              Start="0,0"
              End="65.5,38.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.2242562929062,0" />
                  <mssgle:CubicBezierSegment
                    Point1="21.2242562929062,0"
                    Point2="25.2242562929062,0"
                    Point3="25.2242562929062,4" />
                  <mssgle:LineSegment
                    End="25.2242562929062,34.75" />
                  <mssgle:CubicBezierSegment
                    Point1="25.2242562929062,34.75"
                    Point2="25.2242562929062,38.75"
                    Point3="29.2242562929062,38.75" />
                  <mssgle:LineSegment
                    End="65.5,38.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.2242562929062,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 1]"
          TopLeft="154,58.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77,-20.75"
              Start="0,0"
              End="69.5,-20.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.6064073226545,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.6064073226545,0"
                    Point2="26.6064073226545,0"
                    Point3="26.6064073226545,-4" />
                  <mssgle:LineSegment
                    End="26.6064073226545,-16.75" />
                  <mssgle:CubicBezierSegment
                    Point1="26.6064073226545,-16.75"
                    Point2="26.6064073226545,-20.75"
                    Point3="30.6064073226545,-20.75" />
                  <mssgle:LineSegment
                    End="69.5,-20.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.6064073226545,1,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log.PrecedenceConstraints[Constraint 2]"
          TopLeft="154,92.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76,8.5"
              Start="0,0"
              End="68.5,8.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34,0" />
                  <mssgle:CubicBezierSegment
                    Point1="34,0"
                    Point2="38,0"
                    Point3="38,4" />
                  <mssgle:LineSegment
                    End="38,4.5" />
                  <mssgle:CubicBezierSegment
                    Point1="38,4.5"
                    Point2="38,8.5"
                    Point3="42,8.5" />
                  <mssgle:LineSegment
                    End="68.5,8.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="30,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="394,221"
          Size="394,264"
          Id="Package\For each finished batch\Load Log"
          TopLeft="29,18" />
        <NodeLayout
          Size="149,42"
          Id="Package\For each finished batch\Move Files to LogProcessed Folder\Move File"
          TopLeft="32,20" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="209,86"
          Size="209,129"
          Id="Package\For each finished batch\Move Files to LogProcessed Folder"
          TopLeft="529,337" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Purge OK File"
          TopLeft="288,382" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Update Documents"
          TopLeft="30,379" />
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint]"
          TopLeft="290.333333333333,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.6666666666667,100"
              Start="0,0"
              End="62.6666666666667,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.2426693629929" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.2426693629929"
                    Point2="0,40.2426693629929"
                    Point3="4,40.2426693629929" />
                  <mssgle:LineSegment
                    End="58.6666666666667,40.2426693629929" />
                  <mssgle:CubicBezierSegment
                    Point1="58.6666666666667,40.2426693629929"
                    Point2="62.6666666666667,40.2426693629929"
                    Point3="62.6666666666667,44.2426693629929" />
                  <mssgle:LineSegment
                    End="62.6666666666667,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 1]"
          TopLeft="423,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151,0"
              Start="0,0"
              End="143.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="143.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 2]"
          TopLeft="636,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,160"
              Start="0,0"
              End="0,152.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,152.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 3]"
          TopLeft="418,402.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="111,0"
              Start="0,0"
              End="103.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="103.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch.PrecedenceConstraints[Constraint 4]"
          TopLeft="161.666666666667,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.1666666666667,97"
              Start="0,0"
              End="-64.1666666666667,89.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.0353892821031" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.0353892821031"
                    Point2="0,39.0353892821031"
                    Point3="-4,39.0353892821031" />
                  <mssgle:LineSegment
                    End="-60.1666666666667,39.0353892821031" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.1666666666667,39.0353892821031"
                    Point2="-64.1666666666667,39.0353892821031"
                    Point3="-64.1666666666667,43.0353892821031" />
                  <mssgle:LineSegment
                    End="-64.1666666666667,89.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="782,517"
          Size="782,560"
          Id="Package\For each finished batch"
          TopLeft="56,32" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="918,152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-80,160"
              Start="0,0"
              End="-72.5,160">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-36,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-36,0"
                    Point2="-40,0"
                    Point3="-40,4" />
                  <mssgle:LineSegment
                    End="-40,156" />
                  <mssgle:CubicBezierSegment
                    Point1="-40,156"
                    Point2="-40,160"
                    Point3="-44,160" />
                  <mssgle:LineSegment
                    End="-72.5,160" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\For each finished batch\Load Log\PDF">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\For each finished batch\Load Log\PDF\Read Log"
          TopLeft="56,57" />
        <NodeLayout
          Size="108,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort 1"
          TopLeft="923,61" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\PDF\Set Error Code Name"
          TopLeft="274,285" />
        <NodeLayout
          Size="119,42"
          Id="Package\For each finished batch\Load Log\PDF\Defaults"
          TopLeft="279,55" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Update Batch"
          TopLeft="704,778" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\PDF\Doc Logging?"
          TopLeft="504,170" />
        <NodeLayout
          Size="142,42"
          Id="Package\For each finished batch\Load Log\PDF\Merge  Batch Info"
          TopLeft="909,657" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\PDF\Union All"
          TopLeft="521,530" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\PDF\ProcessDetail"
          TopLeft="264,534" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\PDF\Set ErrCode Unexpected"
          TopLeft="765,531" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\PDF\Read Err"
          TopLeft="515,777" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Merge Doc Info"
          TopLeft="48,288" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\PDF\Multicast"
          TopLeft="777,405" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Determine Elapse"
          TopLeft="506,59" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\PDF\Error Status"
          TopLeft="509,288" />
        <NodeLayout
          Size="146,42"
          Id="Package\For each finished batch\Load Log\PDF\Known Error?"
          TopLeft="511,404" />
        <NodeLayout
          Size="114,42"
          Id="Package\For each finished batch\Load Log\PDF\Concat"
          TopLeft="56,776" />
        <NodeLayout
          Size="99,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort"
          TopLeft="353,655" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\PDF\Step"
          TopLeft="285,167" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort ErrMsg"
          TopLeft="51,406" />
        <NodeLayout
          Size="120,42"
          Id="Package\For each finished batch\Load Log\PDF\Sort Log"
          TopLeft="52,169" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\PDF\Derived Column"
          TopLeft="915,778" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Load Log\PDF\Filter Onzin"
          TopLeft="270,775" />
        <NodeLayout
          Size="141,42"
          Id="Package\For each finished batch\Load Log\PDF\Batch Error?"
          TopLeft="43,654" />
        <NodeLayout
          Size="143,42"
          Id="Package\For each finished batch\Load Log\PDF\Unexpected Errors"
          TopLeft="763,286" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Zinvol]"
          TopLeft="270,796.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100,0"
              Start="0,0"
              End="-92.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-92.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.839296875,5,27.17859375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Union All Output 1]"
          TopLeft="521,553">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output3]"
          TopLeft="452,677">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="457,0"
              Start="0,0"
              End="449.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="449.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output2]"
          TopLeft="978.5,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,554"
              Start="0,0"
              End="0,546.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,546.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output1]"
          TopLeft="112.5,211">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Sort Output]"
          TopLeft="116.5,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-76"
              Start="0,0"
              End="0,-68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Output 0]"
          TopLeft="574.25,101">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,25.033203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[No1]"
          TopLeft="657,425.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,0"
              Start="0,0"
              End="112.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.70796875,5,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[No]"
          TopLeft="116.75,654">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-206"
              Start="0,0"
              End="0,-198.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-198.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.54203125,-103.9609375,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 2]"
          TopLeft="836.5,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-77"
              Start="0,0"
              End="0,-69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Multicast Output 1]"
          TopLeft="838.5,447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output1]"
          TopLeft="178,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Merge Join Output]"
          TopLeft="980,699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Lookup Match Output]"
          TopLeft="285,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-113,0"
              Start="0,0"
              End="-105.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-105.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Ja2]"
          TopLeft="583.25,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3750390625,33.5390625,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Ja1]"
          TopLeft="184,675.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,0"
              Start="0,0"
              End="161.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="161.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.3749609375,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Ja]"
          TopLeft="504,189.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117,0"
              Start="0,0"
              End="-109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1250390625,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Insert]"
          TopLeft="581,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output1]"
          TopLeft="515,797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Flat File Source Output]"
          TopLeft="183,77">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[ErrMsg]"
          TopLeft="113.25,776">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80"
              Start="0,0"
              End="0,-72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.55298828125,-41.91796875,31.1059765625,11.3359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output3]"
          TopLeft="412,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97,0"
              Start="0,0"
              End="89.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="89.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output2]"
          TopLeft="915,799">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81,0"
              Start="0,0"
              End="-73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output1]"
          TopLeft="765,551.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121,0"
              Start="0,0"
              End="-113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Derived Column Output]"
          TopLeft="398,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108,0"
              Start="0,0"
              End="100.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\PDF.Paths[Batch]"
          TopLeft="636,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="287,0"
              Start="0,0"
              End="279.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="279.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="127.09806640625,5,25.3038671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\PDF.Paths[Insert]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\PDF.Paths[Lookup Match Output]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\PDF\ProcessDetail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\PDF\Error Status">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ErrorCodes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\PDF\Step">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProcessSteps]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\For each finished batch\Load Log\SAF">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Sort ErrMsg"
          TopLeft="51,418" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\SAF\Union All"
          TopLeft="789,430" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Error Status"
          TopLeft="509,300" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\SAF\Update Batch"
          TopLeft="759,64" />
        <NodeLayout
          Size="127,42"
          Id="Package\For each finished batch\Load Log\SAF\Read Log"
          TopLeft="56,69" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Set Error Code Name"
          TopLeft="273,298" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\SAF\Step"
          TopLeft="285,179" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\SAF\Doc Logging?"
          TopLeft="504,182" />
        <NodeLayout
          Size="119,42"
          Id="Package\For each finished batch\Load Log\SAF\Defaults"
          TopLeft="279,67" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\SAF\ProcessDetail"
          TopLeft="779,542" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\SAF\Set ErrCode Unexpected"
          TopLeft="1033,431" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\SAF\Read Err"
          TopLeft="518,543" />
        <NodeLayout
          Size="120,42"
          Id="Package\For each finished batch\Load Log\SAF\Sort Log"
          TopLeft="62,180" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\SAF\Multicast"
          TopLeft="1045,305" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\SAF\Unexpected Errors"
          TopLeft="1031,186" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Load Log\SAF\Filter Onzin"
          TopLeft="273,541" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\SAF\Determine Elapse"
          TopLeft="515,63" />
        <NodeLayout
          Size="114,42"
          Id="Package\For each finished batch\Load Log\SAF\Concat"
          TopLeft="66,540" />
        <NodeLayout
          Size="146,42"
          Id="Package\For each finished batch\Load Log\SAF\Known Error?"
          TopLeft="779,304" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Ja]"
          TopLeft="851.25,346">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3750390625,33.5390625,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Insert]"
          TopLeft="647,323">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132,0"
              Start="0,0"
              End="124.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="124.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output1]"
          TopLeft="183,89">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Flat File Source Output]"
          TopLeft="518,563">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[ErrMsg]"
          TopLeft="121.5,540">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80"
              Start="0,0"
              End="0,-72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.55298828125,-41.91796875,31.1059765625,11.3359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output2]"
          TopLeft="398,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117,0"
              Start="0,0"
              End="109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output1]"
          TopLeft="1033,451.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121,0"
              Start="0,0"
              End="-113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Derived Column Output]"
          TopLeft="411,320">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="98,0"
              Start="0,0"
              End="90.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="90.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Batch]"
          TopLeft="645,84.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114,0"
              Start="0,0"
              End="106.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="106.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="40.59806640625,5,25.3038671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Zinvol]"
          TopLeft="273,561.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-93,0"
              Start="0,0"
              End="-85.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-85.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-56.339296875,5,27.17859375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Union All Output 1]"
          TopLeft="851.5,472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Output 0]"
          TopLeft="578.75,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,29.033203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[No]"
          TopLeft="925,325.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,0"
              Start="0,0"
              End="112.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.70796875,5,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 2]"
          TopLeft="1103.25,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-77"
              Start="0,0"
              End="0,-69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Multicast Output 1]"
          TopLeft="1106.5,347">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Lookup Match Output]"
          TopLeft="285,200.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103,0"
              Start="0,0"
              End="-95.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-95.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Ja1]"
          TopLeft="504,201.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117,0"
              Start="0,0"
              End="-109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1250390625,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="133,42"
          Id="Package\For each finished batch\Load Log\SAF\Merge Join"
          TopLeft="54,300" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Sort Output]"
          TopLeft="121.25,222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Sort Output1]"
          TopLeft="120.25,418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-76"
              Start="0,0"
              End="0,-68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\SAF.Paths[Merge Join Output]"
          TopLeft="187,320">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86,0"
              Start="0,0"
              End="78.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="78.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\SAF.Paths[Insert]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\SAF.Paths[Lookup Match Output]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\SAF\Error Status">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ErrorCodes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\SAF\Step">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProcessSteps]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\SAF\ProcessDetail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\For each finished batch\Load Log\XML">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127,42"
          Id="Package\For each finished batch\Load Log\XML\Read Log"
          TopLeft="56,57" />
        <NodeLayout
          Size="108,42"
          Id="Package\For each finished batch\Load Log\XML\Sort 1"
          TopLeft="923,61" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\XML\Set Error Code Name"
          TopLeft="274,285" />
        <NodeLayout
          Size="119,42"
          Id="Package\For each finished batch\Load Log\XML\Defaults"
          TopLeft="279,55" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Update Batch"
          TopLeft="704,778" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\XML\Doc Logging?"
          TopLeft="504,170" />
        <NodeLayout
          Size="131,42"
          Id="Package\For each finished batch\Load Log\XML\Merge Batch Info"
          TopLeft="909,657" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\XML\Union All"
          TopLeft="521,530" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\XML\ProcessDetail"
          TopLeft="264,534" />
        <NodeLayout
          Size="147,42"
          Id="Package\For each finished batch\Load Log\XML\Set ErrCode Unexpected"
          TopLeft="765,531" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\XML\Read Err"
          TopLeft="515,777" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Merge Doc Info"
          TopLeft="48,288" />
        <NodeLayout
          Size="123,42"
          Id="Package\For each finished batch\Load Log\XML\Multicast"
          TopLeft="777,405" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Determine Elapse"
          TopLeft="506,59" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\XML\Error Status"
          TopLeft="509,288" />
        <NodeLayout
          Size="146,42"
          Id="Package\For each finished batch\Load Log\XML\Known Error?"
          TopLeft="511,404" />
        <NodeLayout
          Size="114,42"
          Id="Package\For each finished batch\Load Log\XML\Concat"
          TopLeft="56,776" />
        <NodeLayout
          Size="99,42"
          Id="Package\For each finished batch\Load Log\XML\Sort"
          TopLeft="353,655" />
        <NodeLayout
          Size="102,42"
          Id="Package\For each finished batch\Load Log\XML\Step"
          TopLeft="285,167" />
        <NodeLayout
          Size="138,42"
          Id="Package\For each finished batch\Load Log\XML\Sort ErrMsg"
          TopLeft="51,406" />
        <NodeLayout
          Size="120,42"
          Id="Package\For each finished batch\Load Log\XML\Sort Log"
          TopLeft="58,168" />
        <NodeLayout
          Size="130,42"
          Id="Package\For each finished batch\Load Log\XML\Derived Column"
          TopLeft="915,778" />
        <NodeLayout
          Size="135,42"
          Id="Package\For each finished batch\Load Log\XML\Filter Onzin"
          TopLeft="270,775" />
        <NodeLayout
          Size="141,42"
          Id="Package\For each finished batch\Load Log\XML\Batch Error?"
          TopLeft="43,654" />
        <NodeLayout
          Size="143,42"
          Id="Package\For each finished batch\Load Log\XML\Unexpected Errors"
          TopLeft="763,286" />
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Zinvol]"
          TopLeft="270,796.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100,0"
              Start="0,0"
              End="-92.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-92.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-59.839296875,5,27.17859375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Union All Output 1]"
          TopLeft="521,553">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output3]"
          TopLeft="452,677">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="457,0"
              Start="0,0"
              End="449.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="449.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output2]"
          TopLeft="975.75,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,554"
              Start="0,0"
              End="0,546.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,546.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output1]"
          TopLeft="115.5,210">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,78"
              Start="0,0"
              End="0,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Sort Output]"
          TopLeft="116.5,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-76"
              Start="0,0"
              End="0,-68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Output 0]"
          TopLeft="574.25,101">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,25.033203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[No1]"
          TopLeft="657,425.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,0"
              Start="0,0"
              End="112.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="112.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="49.70796875,5,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[No]"
          TopLeft="116.75,654">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-206"
              Start="0,0"
              End="0,-198.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-198.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.54203125,-103.9609375,13.0840625,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 2]"
          TopLeft="836.5,405">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-77"
              Start="0,0"
              End="0,-69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Multicast Output 1]"
          TopLeft="838.5,447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output1]"
          TopLeft="178,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Merge Join Output]"
          TopLeft="977.25,699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,79"
              Start="0,0"
              End="0,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Lookup Match Output]"
          TopLeft="285,188.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-107,0"
              Start="0,0"
              End="-99.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-99.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Ja2]"
          TopLeft="583.25,446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3750390625,33.5390625,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Ja1]"
          TopLeft="184,675.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,0"
              Start="0,0"
              End="161.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="161.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.3749609375,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Ja]"
          TopLeft="504,189.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-117,0"
              Start="0,0"
              End="-109.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-109.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.1250390625,5,10.750078125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Insert]"
          TopLeft="581,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output1]"
          TopLeft="515,797">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110,0"
              Start="0,0"
              End="-102.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Flat File Source Output]"
          TopLeft="183,77">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96,0"
              Start="0,0"
              End="88.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[ErrMsg]"
          TopLeft="113.25,776">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-80"
              Start="0,0"
              End="0,-72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.55298828125,-41.91796875,31.1059765625,11.3359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output3]"
          TopLeft="412,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97,0"
              Start="0,0"
              End="89.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="89.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output2]"
          TopLeft="915,799">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81,0"
              Start="0,0"
              End="-73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output1]"
          TopLeft="765,551.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-121,0"
              Start="0,0"
              End="-113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Derived Column Output]"
          TopLeft="398,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108,0"
              Start="0,0"
              End="100.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="100.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\For each finished batch\Load Log\XML.Paths[Batch]"
          TopLeft="636,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="287,0"
              Start="0,0"
              End="279.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="279.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="127.09806640625,5,25.3038671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\XML.Paths[Insert]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelinePath
    design-time-name="Package\For each finished batch\Load Log\XML.Paths[Lookup Match Output]">
    <PathAnnotation>Never</PathAnnotation>
  </PipelinePath>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\XML\ProcessDetail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\XML\Error Status">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ErrorCodes]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\For each finished batch\Load Log\XML\Step">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProcessSteps]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>